!function(t,e){function r(t,e){if(t instanceof d)return t;if(t instanceof EventTarget)return new d(t);if(void 0===t||null===t)return new d;if("string"!=typeof t)throw new Error("First parameter is invalid");if(e){if(!l(e))throw new Error("Second parameter is invalid");e=r(e)}else e=g;return a(e,t)}function n(){}function i(t,e){var r;return e?this.responseXML?this.responseXML:(r=new DOMParser,r.parseFromString(t,"application/xml")):(r=new XMLSerializer,r.serializeToString(t))}function o(t,e){return e.call(t,t)}function s(t,e){return t===e}function a(t,e){var r=new d;return t.forEach(function(t){r.push.apply(r,u(t,e))}),r}function u(t,e){return~e.indexOf(":")&&void 0!==T?(T===!1&&c(),e.match(T)?f(t,e):t.querySelectorAll(e)):t.querySelectorAll(e)}function f(t,e){for(var r,n,i=new d(t),o="",s=e.split(/\s+/);r=s.shift();)n=r.match(T),n?(o+=r.replace(T,"")||"*",r=new d,i.forEach(function(t){var e=new d;n.forEach(function(r){e.push.apply(e,S[r].call(t,o))}),r.push.apply(r,e)}),i=r,o=""):o+=r+" ";return o&&(r=new d,i.forEach(function(t){r.push.apply(r,t.querySelectorAll(o))}),i=r),i}function c(){var t=Object.keys(S).join("|").replace(/:/g,"");T=new RegExp(":("+t+")","g")}function l(t){return t instanceof d?!0:t instanceof EventTarget?!0:"string"==typeof t?!0:void 0}function h(t){return function(){for(var e=0,r=this.length;r>e;e++)t.apply(this[e],arguments);return this}}function p(t){return function(){for(var e,r=0,n=this.length,i=new d;n>r;r++)e=t.apply(this[r],arguments),e&&(Array.isArray(e)&&e.length?i.push.apply(i,e):i.push(e));return i}}var d,y,g,v;try{v=e.createElement("iframe"),v.style.width=0,v.style.height=0,v.style.borderStyle="none",e.body.appendChild(v),d=v.contentWindow.Array,e.body.removeChild(v)}catch(m){d=Array}t.z=r,r.fn=d.prototype,y=r(t),g=r(e),r.fn.find=function(t){if("string"!=typeof t)throw new Error("First paramater of z#find() should be a string");return a(this,t)};var w,E,x={};w={method:"GET",requestType:"text",responseType:"text",url:t.location+"",query:null,data:null,setup:n,success:n,error:n},E={text:function(t){return(t||"")+""}},r.ajax=function(t){var e=new XMLHttpRequest;if(t=r.extend({context:e},w,t),!E[t.requestType])throw new Error("Invalid option `requestType`");if(!E[t.responseType])throw new Error("Invalid option `responseType`");t.query&&~["HEAD","GET"].indexOf(t.method.toUpperCase())&&(t.url+=~t.url.indexOf("?")?"&":"?",t.url+=r.queryString(t.query),t.url=t.url.replace(/(\?|&)&/g,"$1")),e.open(t.method,t.url,!0),e.onload=function(){var r;e.status>=200&&e.status<400?(r=E[t.responseType].call(e,e.responseText,!0),t.success.call(t.context,r)):t.error.call(t.context,e.status,e.statusText)},e.onerror=function(){t.error.call(t.context,e.status,e.statusText)},~["HEAD","GET"].indexOf(t.method.toUpperCase())||e.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),t.data&&(t.data=E[t.requestType].call(e,t.data,!1)),t.setup.call(e,e),e.send(t.data)},w.requestType="detect",w.responseType="detect",r.registerAjaxType=function(t,e,r){r||"function"!=typeof e||(r=e,e=!1),E[t]=r,e&&(x[e]=t)},r.registerAjaxType("detect",function(t,e){var r,n="text";return e?(r=this.getResponseHeader("Content-Type")||"",r=r.split(";")[0].trim(),n=x[r]||"text"):t&&"object"==typeof t&&t.toString==={}.toString&&(n="json"),E[n].call(this,t,e)}),r.registerAjaxType("json","application/json",function(t,e){return e?JSON.parse(t):JSON.stringify(t)}),r.registerAjaxType("html","text/html",function(t,r){var n,i;return r?(i=new d,n=e.implementation.createHTMLDocument(),n.documentElement.innerHTML=t,i.push.apply(i,i.slice.call(n.body.children,0)),i):t.outerHTML}),r.registerAjaxType("xml","text/xml",i),r.registerAjaxType("xml","application/xml",i),r.fn.data="dataset"in e.body?function(t,e){var r,n;if(this.length){if(void 0===t)return this[0].dataset;if(void 0===e)return this[0].dataset[t];for(r=0,n=this.length;n>r;r++)this[r].dataset[t]=e;return this}}:function(t,e){var r,n,i="data-"+(t||"");if(this.length){if(void 0===t)return r={},[].forEach.call(this[0].attributes,function(t){return r[t.name]=t.value}),r;if(void 0===e)return this[0].attributes[i];for(r=0,n=this.length;n>r;r++)this[r].dataset[i]=e;return this}},r.fn.on=r.fn.bind=h(function(t,e){this.addEventListener(t,e,!1)}),r.fn.off=r.fn.unbind=h(function(t,e){this.removeEventListener(t,e,!1)}),r.fn.trigger=function(t,r){var n,i,o=0,s=this.length;try{i=r?{detail:r}:void 0,n=new CustomEvent(t,i)}catch(a){n=e.createEvent("CustomEvent"),n.initCustomEvent(t,!0,!0,r)}for(;s>o;o++)this[o].dispatchEvent(n);return this},r.fn.is=function(){var t,r=e.body;return t=r.matches||r.matchesSelector||r.msMatchesSelector,t=t||r.mozMatchesSelector||r.webkitMatchesSelector||r.oMatchesSelector,function(e){var r,n,i=0,a=this.length;switch(typeof e){case"string":r=t;break;case"function":r=o;break;case"object":if(!(e instanceof EventTarget))throw new Error("First parameter of z#is is invalid");r=s;default:throw new Error("First parameter of z#is is invalid")}for(;a>i;i++)if(n=r(this[i],e))return n;return!1}}(),r.fn.hide=h(function(){return this.style.display="none",this}),r.fn.show=h(function(){return this.style.display="",this}),r.fn.clone=function(t){var e=0;for((void 0===t||null===t)&&(t=!1);e<this.length;e++)this[e]=this[e].cloneNode(t);return this},r.fn.html=function(t){var e,r;if(void 0===t)return this.innerHTML;for(e=0,r=this.length;r>e;e++)this[e].innerHTML=t;return this},r.fn.text=function(t){var e,r;if(void 0===t)return this.textContent;for(e=0,r=this.length;r>e;e++)this[e].textContent=t;return this},r.fn.getAttr=function(t){if(!t)throw new Error("First parameter of z#getAttr is required");return this[0]&&this[0].getAttribute(t)},r.fn.setAttr=h(function(t,e){if(!t)throw new Error("First parameter of z#setAttr is required");if(void 0===e)throw new Error("Second parameter of z#setAttr is required");return this.setAttribute(t,e),this}),r.fn.attr=function(t,e){return void 0===e?this.getAttr(t):(this.setAttr(t,e),this)},r.fn.replaceWith=r.fn.replace=h(function(t){if(void 0===t)throw new Error("First parameter of z#replace is required");this.outerHTML=t}),"classList"in e.documentElement?(r.fn.addClass=h(function(t){this.classList.add(t)}),r.fn.removeClass=h(function(t){this.classList.remove(t)}),r.fn.toggleClass=h(function(t,e){return void 0===e?void this.classList.toggle(t):void this.classList[e?"add":"remove"](t)})):(r.fn.addClass=h(function(t){this.className+=" "+t}),r.fn.removeClass=h(function(t){this.className+=this.className.replace(new RegExp("(^|\\b)"+t+"(\\b|$)","g")," ")}),r.fn.toggleClass=function(t,e){return this[e?"addClass":"removeClass"](t),this});var T,S={};r.registerSelector=function(t,e){if(!t||"string"!=typeof t)throw new Error("First parameter of z#registerSelector must be a string selector");if(!e||"function"!=typeof e)throw new Error("Second parameter of z#registerSelector must be a function");":"!==t[0]&&(t=":"+t),T=!1,S[t]=e},r.registerSelector(":first",function(t){return r(this.querySelector(t))}),r.registerSelector(":input",function(){function t(t){return~e.indexOf(t.tagName)}var e="INPUT,TEXTAREA,SELECT,BUTTON".split(",");return function(e){var r=new d;return r.push.apply(r,[].filter.call(this.querySelectorAll(e),t)),r}}()),r.fn.parent=p(function(){return this.parentNode}),r.fn.next=p(function(){return this.nextElementSibling}),r.fn.prev=r.fn.previous=p(function(){return this.previousElementSibling}),r.fn.siblings=p(function(){return[].filter.call(this.parentNode.children,function(t){return t!==this},this)}),r.deepExtend=function b(t){var e,r,n=2;for("object"==typeof t?(r=t||{},t=1/0):(t=t===!0?1/0:0|t,r=arguments[1]||{});n<arguments.length;n++)if(e=arguments[n])for(var i in e)e.hasOwnProperty(i)&&(t&&"object"==typeof e[i]?b(t-1,r[i],e[i]):r[i]=e[i]);return r},r.extend=function(){return[].unshift.call(arguments,0),r.deepExtend.apply(null,arguments)},r.fn.each=h(function(t){return t.call(this,this),this}),r.queryString=function(t,e){var n,i,o,s=[];for(n in t)t.hasOwnProperty(n)&&(i=e?e+"["+n+"]":n,o=t[n],s.push(o&&"object"==typeof o?r.queryString(o,i):encodeURIComponent(i)+"="+encodeURIComponent(o)));return s.join("&")}}(window,document);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiei5zbS5taW4uanMiLCJzb3VyY2VzIjpbIl9oZWFkZXIuanMiLCJfYmFzZS5qcyIsImFqYXguanMiLCJhamF4X3R5cGVzLmpzIiwiZGF0YS5qcyIsImV2ZW50cy5qcyIsImZpbHRlcmluZy5qcyIsIm1hbmlwdWxhdGlvbi5qcyIsInNlbGVjdG9ycy5qcyIsInNlbGVjdG9yc19jdXN0b20uanMiLCJ0cmF2ZXJzaW5nLmpzIiwidXRpbHMuanMiLCJfZm9vdGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJDQVVBLFNBQUEsRUFBQSxHQ1JBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsR0FBQSxZQUFBLEdBQ0EsTUFBQSxFQUNBLElBQUEsWUFBQSxhQUNBLE1BQUEsSUFBQSxHQUFBLEVBQ0EsSUFBQSxTQUFBLEdBQUEsT0FBQSxFQUNBLE1BQUEsSUFBQSxFQUNBLElBQUEsZ0JBQUEsR0FDQSxLQUFBLElBQUEsT0FBQSw2QkFHQSxJQUFBLEVBQUEsQ0FDQSxJQUFBLEVBQUEsR0FDQSxLQUFBLElBQUEsT0FBQSw4QkFHQSxHQUFBLEVBQUEsT0FFQSxHQUFBLENBR0EsT0FBQSxHQUFBLEVBQUEsR0FHQSxRQUFBLE1DK0JBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsR0FBQSxFQUVBLE9BQUEsR0FLQSxLQUFBLFlBQ0EsS0FBQSxhQUdBLEVBQUEsR0FBQSxXQUNBLEVBQUEsZ0JBQUEsRUFBQSxxQkFUQSxFQUFBLEdBQUEsZUFDQSxFQUFBLGtCQUFBLElDOURBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsTUFBQSxHQUFBLEtBQUEsRUFBQSxHQUdBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsTUFBQSxLQUFBLEVDRkEsUUFBQSxHQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsR0FBQSxFQU1BLE9BSkEsR0FBQSxRQUFBLFNBQUEsR0FDQSxFQUFBLEtBQUEsTUFBQSxFQUFBLEVBQUEsRUFBQSxNQUdBLEVBR0EsUUFBQSxHQUFBLEVBQUEsR0FDQSxPQUFBLEVBQUEsUUFBQSxNQUFBLFNBQUEsR0FJQSxLQUFBLEdBQ0EsSUFHQSxFQUFBLE1BQUEsR0FJQSxFQUFBLEVBQUEsR0FIQSxFQUFBLGlCQUFBLElBUkEsRUFBQSxpQkFBQSxHQWNBLFFBQUEsR0FBQSxFQUFBLEdBTUEsSUFMQSxHQUFBLEdBQUEsRUFDQSxFQUFBLEdBQUEsR0FBQSxHQUNBLEVBQUEsR0FDQSxFQUFBLEVBQUEsTUFBQSxPQUVBLEVBQUEsRUFBQSxTQUNBLEVBQUEsRUFBQSxNQUFBLEdBRUEsR0FLQSxHQUFBLEVBQUEsUUFBQSxFQUFBLEtBQUEsSUFDQSxFQUFBLEdBQUEsR0FFQSxFQUFBLFFBQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxHQUFBLEVBRUEsR0FBQSxRQUFBLFNBQUEsR0FDQSxFQUFBLEtBQUEsTUFBQSxFQUFBLEVBQUEsR0FBQSxLQUFBLEVBQUEsTUFHQSxFQUFBLEtBQUEsTUFBQSxFQUFBLEtBR0EsRUFBQSxFQUNBLEVBQUEsSUFsQkEsR0FBQSxFQUFBLEdBK0JBLE9BVkEsS0FDQSxFQUFBLEdBQUEsR0FFQSxFQUFBLFFBQUEsU0FBQSxHQUNBLEVBQUEsS0FBQSxNQUFBLEVBQUEsRUFBQSxpQkFBQSxNQUdBLEVBQUEsR0FHQSxFQUdBLFFBQUEsS0FDQSxHQUFBLEdBQUEsT0FBQSxLQUFBLEdBQUEsS0FBQSxLQUFBLFFBQUEsS0FBQSxHQUNBLEdBQUEsR0FBQSxRQUFBLEtBQUEsRUFBQSxJQUFBLEtDM0VBLFFBQUEsR0FBQSxHQUNBLE1BQUEsYUFBQSxJQUNBLEVBR0EsWUFBQSxjQUNBLEVBR0EsZ0JBQUEsSUFDQSxFQURBLE9BS0EsUUFBQSxHQUFBLEdBQ0EsTUFBQSxZQUlBLElBSEEsR0FBQSxHQUFBLEVBQ0EsRUFBQSxLQUFBLE9BRUEsRUFBQSxFQUFBLElBQ0EsRUFBQSxNQUFBLEtBQUEsR0FBQSxVQUdBLE9BQUEsT0FJQSxRQUFBLEdBQUEsR0FDQSxNQUFBLFlBTUEsSUFMQSxHQUFBLEdBQ0EsRUFBQSxFQUNBLEVBQUEsS0FBQSxPQUNBLEVBQUEsR0FBQSxHQUVBLEVBQUEsRUFBQSxJQUNBLEVBQUEsRUFBQSxNQUFBLEtBQUEsR0FBQSxXQUVBLElBQ0EsTUFBQSxRQUFBLElBQUEsRUFBQSxPQUNBLEVBQUEsS0FBQSxNQUFBLEVBQUEsR0FFQSxFQUFBLEtBQUEsR0FLQSxPQUFBLElKOUNBLEdBQUEsR0FBQSxFQUFBLEVBQUEsQ0E0QkEsS0FDQSxFQUFBLEVBQUEsY0FBQSxVQUVBLEVBQUEsTUFBQSxNQUFBLEVBQ0EsRUFBQSxNQUFBLE9BQUEsRUFDQSxFQUFBLE1BQUEsWUFBQSxPQUVBLEVBQUEsS0FBQSxZQUFBLEdBRUEsRUFBQSxFQUFBLGNBQUEsTUFFQSxFQUFBLEtBQUEsWUFBQSxHQUNBLE1BQUEsR0FDQSxFQUFBLE1BSUEsRUFBQSxFQUFBLEVBQ0EsRUFBQSxHQUFBLEVBQUEsVUFDQSxFQUFBLEVBQUEsR0FDQSxFQUFBLEVBQUEsR0FFQSxFQUFBLEdBQUEsS0FBQSxTQUFBLEdBQ0EsR0FBQSxnQkFBQSxHQUNBLEtBQUEsSUFBQSxPQUFBLGlEQUdBLE9BQUEsR0FBQSxLQUFBLEdLdkRBLElBQUEsR0FBQSxFQUNBLElBRUEsSUFDQSxPQUFBLE1BQ0EsWUFBQSxPQUNBLGFBQUEsT0FDQSxJQUFBLEVBQUEsU0FBQSxHQUNBLE1BQUEsS0FDQSxLQUFBLEtBQ0EsTUFBQSxFQUNBLFFBQUEsRUFDQSxNQUFBLEdBR0EsR0FDQSxLQUFBLFNBQUEsR0FDQSxPQUFBLEdBQUEsSUFBQSxLQUlBLEVBQUEsS0FBQSxTQUFBLEdBQ0EsR0FDQSxHQUFBLEdBQUEsZUFNQSxJQUpBLEVBQUEsRUFBQSxRQUNBLFFBQUEsR0FDQSxFQUFBLElBRUEsRUFBQSxFQUFBLGFBQ0EsS0FBQSxJQUFBLE9BQUEsK0JBQ0EsS0FBQSxFQUFBLEVBQUEsY0FDQSxLQUFBLElBQUEsT0FBQSxnQ0FHQSxHQUFBLFNBQUEsT0FBQSxPQUFBLFFBQUEsRUFBQSxPQUFBLGlCQUNBLEVBQUEsTUFBQSxFQUFBLElBQUEsUUFBQSxLQUFBLElBQUEsSUFDQSxFQUFBLEtBQUEsRUFBQSxZQUFBLEVBQUEsT0FDQSxFQUFBLElBQUEsRUFBQSxJQUFBLFFBQUEsV0FBQSxPQUdBLEVBQUEsS0FBQSxFQUFBLE9BQUEsRUFBQSxLQUFBLEdBRUEsRUFBQSxPQUFBLFdBQ0EsR0FBQSxFQUVBLEdBQUEsUUFBQSxLQUFBLEVBQUEsT0FBQSxLQUNBLEVBQUEsRUFBQSxFQUFBLGNBQUEsS0FBQSxFQUFBLEVBQUEsY0FBQSxHQUNBLEVBQUEsUUFBQSxLQUFBLEVBQUEsUUFBQSxJQUVBLEVBQUEsTUFBQSxLQUFBLEVBQUEsUUFBQSxFQUFBLE9BQUEsRUFBQSxhQUlBLEVBQUEsUUFBQSxXQUNBLEVBQUEsTUFBQSxLQUFBLEVBQUEsUUFBQSxFQUFBLE9BQUEsRUFBQSxlQUdBLE9BQUEsT0FBQSxRQUFBLEVBQUEsT0FBQSxnQkFDQSxFQUFBLGlCQUFBLGVBQUEsb0RBR0EsRUFBQSxPQUNBLEVBQUEsS0FBQSxFQUFBLEVBQUEsYUFBQSxLQUFBLEVBQUEsRUFBQSxNQUFBLElBR0EsRUFBQSxNQUFBLEtBQUEsRUFBQSxHQUVBLEVBQUEsS0FBQSxFQUFBLE9KcEVBLEVBQUEsWUFBQSxTQUNBLEVBQUEsYUFBQSxTQUVBLEVBQUEsaUJBQUEsU0FBQSxFQUFBLEVBQUEsR0FDQSxHQUFBLGtCQUFBLEtBQ0EsRUFBQSxFQUNBLEdBQUEsR0FHQSxFQUFBLEdBQUEsRUFFQSxJQUNBLEVBQUEsR0FBQSxJQUlBLEVBQUEsaUJBQUEsU0FBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQ0EsRUFBQSxNQVlBLE9BVkEsSUFDQSxFQUFBLEtBQUEsa0JBQUEsaUJBQUEsR0FDQSxFQUFBLEVBQUEsTUFBQSxLQUFBLEdBQUEsT0FDQSxFQUFBLEVBQUEsSUFBQSxRQUVBLEdBQUEsZ0JBQUEsSUFBQSxFQUFBLGNBQUEsV0FDQSxFQUFBLFFBSUEsRUFBQSxHQUFBLEtBQUEsS0FBQSxFQUFBLEtBR0EsRUFBQSxpQkFBQSxPQUFBLG1CQUFBLFNBQUEsRUFBQSxHQUNBLE1BQUEsR0FBQSxLQUFBLE1BQUEsR0FBQSxLQUFBLFVBQUEsS0FHQSxFQUFBLGlCQUFBLE9BQUEsWUFBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsQ0FFQSxPQUFBLElBSUEsRUFBQSxHQUFBLEdBQ0EsRUFBQSxFQUFBLGVBQUEscUJBRUEsRUFBQSxnQkFBQSxVQUFBLEVBRUEsRUFBQSxLQUFBLE1BQUEsRUFBQSxFQUFBLE1BQUEsS0FBQSxFQUFBLEtBQUEsU0FBQSxJQUVBLEdBVkEsRUFBQSxZQWFBLEVBQUEsaUJBQUEsTUFBQSxXQUFBLEdBQ0EsRUFBQSxpQkFBQSxNQUFBLGtCQUFBLEdLdERBLEVBQUEsR0FBQSxLQURBLFdBQUEsR0FBQSxLQUNBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxDQUVBLElBQUEsS0FBQSxPQUFBLENBSUEsR0FBQSxTQUFBLEVBQ0EsTUFBQSxNQUFBLEdBQUEsT0FDQSxJQUFBLFNBQUEsRUFDQSxNQUFBLE1BQUEsR0FBQSxRQUFBLEVBR0EsS0FBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLE9BQUEsRUFBQSxFQUFBLElBQ0EsS0FBQSxHQUFBLFFBQUEsR0FBQSxDQUdBLE9BQUEsUUFHQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsRUFDQSxFQUFBLFNBQUEsR0FBQSxHQUVBLElBQUEsS0FBQSxPQUFBLENBSUEsR0FBQSxTQUFBLEVBT0EsTUFOQSxTQUVBLFFBQUEsS0FBQSxLQUFBLEdBQUEsV0FBQSxTQUFBLEdBQ0EsTUFBQSxHQUFBLEVBQUEsTUFBQSxFQUFBLFFBR0EsQ0FDQSxJQUFBLFNBQUEsRUFDQSxNQUFBLE1BQUEsR0FBQSxXQUFBLEVBR0EsS0FBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLE9BQUEsRUFBQSxFQUFBLElBQ0EsS0FBQSxHQUFBLFFBQUEsR0FBQSxDQUdBLE9BQUEsUUM3Q0EsRUFBQSxHQUFBLEdBQUEsRUFBQSxHQUFBLEtBQUEsRUFBQSxTQUFBLEVBQUEsR0FDQSxLQUFBLGlCQUFBLEVBQUEsR0FBQSxLQUdBLEVBQUEsR0FBQSxJQUFBLEVBQUEsR0FBQSxPQUFBLEVBQUEsU0FBQSxFQUFBLEdBQ0EsS0FBQSxvQkFBQSxFQUFBLEdBQUEsS0FHQSxFQUFBLEdBQUEsUUFBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsRUFDQSxFQUFBLEVBQ0EsRUFBQSxLQUFBLE1BRUEsS0FDQSxFQUFBLEdBQUEsT0FBQSxHQUFBLE9BQ0EsRUFBQSxHQUFBLGFBQUEsRUFBQSxHQUNBLE1BQUEsR0FDQSxFQUFBLEVBQUEsWUFBQSxlQUNBLEVBQUEsZ0JBQUEsR0FBQSxHQUFBLEVBQUEsR0FHQSxLQUFBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxjQUFBLEVBR0EsT0FBQSxPTGpCQSxFQUFBLEdBQUEsR0FBQSxXQUNBLEdBQUEsR0FDQSxFQUFBLEVBQUEsSUFLQSxPQUhBLEdBQUEsRUFBQSxTQUFBLEVBQUEsaUJBQUEsRUFBQSxrQkFDQSxFQUFBLEdBQUEsRUFBQSxvQkFBQSxFQUFBLHVCQUFBLEVBQUEsaUJBRUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxFQUNBLEVBQUEsRUFDQSxFQUFBLEtBQUEsTUFFQSxjQUFBLElBQ0EsSUFBQSxTQUNBLEVBQUEsQ0FDQSxNQUVBLEtBQUEsV0FDQSxFQUFBLENBQ0EsTUFFQSxLQUFBLFNBQ0EsS0FBQSxZQUFBLGNBR0EsS0FBQSxJQUFBLE9BQUEscUNBRkEsR0FBQSxDQUlBLFNBQ0EsS0FBQSxJQUFBLE9BQUEsc0NBSUEsS0FBQSxFQUFBLEVBQUEsSUFHQSxHQUZBLEVBQUEsRUFBQSxLQUFBLEdBQUEsR0FHQSxNQUFBLEVBSUEsUUFBQSxNTWhEQSxFQUFBLEdBQUEsS0FBQSxFQUFBLFdBRUEsTUFEQSxNQUFBLE1BQUEsUUFBQSxPQUNBLE9BR0EsRUFBQSxHQUFBLEtBQUEsRUFBQSxXQUVBLE1BREEsTUFBQSxNQUFBLFFBQUEsR0FDQSxPQUdBLEVBQUEsR0FBQSxNQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsQ0FNQSxNQUpBLFNBQUEsR0FBQSxPQUFBLEtBQ0EsR0FBQSxHQUdBLEVBQUEsS0FBQSxPQUFBLElBQ0EsS0FBQSxHQUFBLEtBQUEsR0FBQSxVQUFBLEVBR0EsT0FBQSxPQUdBLEVBQUEsR0FBQSxLQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsQ0FFQSxJQUFBLFNBQUEsRUFDQSxNQUFBLE1BQUEsU0FHQSxLQUFBLEVBQUEsRUFBQSxFQUFBLEtBQUEsT0FBQSxFQUFBLEVBQUEsSUFDQSxLQUFBLEdBQUEsVUFBQSxDQUdBLE9BQUEsT0FHQSxFQUFBLEdBQUEsS0FBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLENBRUEsSUFBQSxTQUFBLEVBQ0EsTUFBQSxNQUFBLFdBR0EsS0FBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLE9BQUEsRUFBQSxFQUFBLElBQ0EsS0FBQSxHQUFBLFlBQUEsQ0FHQSxPQUFBLE9BR0EsRUFBQSxHQUFBLFFBQUEsU0FBQSxHQUNBLElBQUEsRUFDQSxLQUFBLElBQUEsT0FBQSwyQ0FHQSxPQUFBLE1BQUEsSUFBQSxLQUFBLEdBQUEsYUFBQSxJQUdBLEVBQUEsR0FBQSxRQUFBLEVBQUEsU0FBQSxFQUFBLEdBQ0EsSUFBQSxFQUNBLEtBQUEsSUFBQSxPQUFBLDJDQUNBLElBQUEsU0FBQSxFQUNBLEtBQUEsSUFBQSxPQUFBLDRDQUlBLE9BREEsTUFBQSxhQUFBLEVBQUEsR0FDQSxPQUdBLEVBQUEsR0FBQSxLQUFBLFNBQUEsRUFBQSxHQUNBLE1BQUEsVUFBQSxFQUNBLEtBQUEsUUFBQSxJQUdBLEtBQUEsUUFBQSxFQUFBLEdBQ0EsT0FHQSxFQUFBLEdBQUEsWUFBQSxFQUFBLEdBQUEsUUFBQSxFQUFBLFNBQUEsR0FDQSxHQUFBLFNBQUEsRUFDQSxLQUFBLElBQUEsT0FBQSwyQ0FHQSxNQUFBLFVBQUEsSUFHQSxhQUFBLEdBQUEsaUJBQ0EsRUFBQSxHQUFBLFNBQUEsRUFBQSxTQUFBLEdBQ0EsS0FBQSxVQUFBLElBQUEsS0FHQSxFQUFBLEdBQUEsWUFBQSxFQUFBLFNBQUEsR0FDQSxLQUFBLFVBQUEsT0FBQSxLQUdBLEVBQUEsR0FBQSxZQUFBLEVBQUEsU0FBQSxFQUFBLEdBQ0EsTUFBQSxVQUFBLE1BQ0EsTUFBQSxVQUFBLE9BQUEsT0FJQSxNQUFBLFVBQUEsRUFBQSxNQUFBLFVBQUEsT0FHQSxFQUFBLEdBQUEsU0FBQSxFQUFBLFNBQUEsR0FDQSxLQUFBLFdBQUEsSUFBQSxJQUdBLEVBQUEsR0FBQSxZQUFBLEVBQUEsU0FBQSxHQUNBLEtBQUEsV0FBQSxLQUFBLFVBQUEsUUFBQSxHQUFBLFFBQUEsVUFBQSxFQUFBLFVBQUEsS0FBQSxPQUdBLEVBQUEsR0FBQSxZQUFBLFNBQUEsRUFBQSxHQUVBLE1BREEsTUFBQSxFQUFBLFdBQUEsZUFBQSxHQUNBLE1McEhBLElBQUEsR0FDQSxJTURBLEdBQUEsaUJBQUEsU0FBQSxFQUFBLEdBQ0EsSUFBQSxHQUFBLGdCQUFBLEdBQ0EsS0FBQSxJQUFBLE9BQUEsa0VBQ0EsS0FBQSxHQUFBLGtCQUFBLEdBQ0EsS0FBQSxJQUFBLE9BQUEsNERBR0EsT0FBQSxFQUFBLEtBQ0EsRUFBQSxJQUFBLEdBR0EsR0FBQSxFQUNBLEVBQUEsR0FBQSxHQUdBLEVBQUEsaUJBQUEsU0FBQSxTQUFBLEdBQ0EsTUFBQSxHQUFBLEtBQUEsY0FBQSxNQUdBLEVBQUEsaUJBQUEsU0FBQSxXQUdBLFFBQUEsR0FBQSxHQUNBLE9BQUEsRUFBQSxRQUFBLEVBQUEsU0FIQSxHQUFBLEdBQUEsK0JBQUEsTUFBQSxJQU1BLE9BQUEsVUFBQSxHQUNBLEdBQUEsR0FBQSxHQUFBLEVBSUEsT0FGQSxHQUFBLEtBQUEsTUFBQSxLQUFBLE9BQUEsS0FBQSxLQUFBLGlCQUFBLEdBQUEsSUFFQSxPQy9CQSxFQUFBLEdBQUEsT0FBQSxFQUFBLFdBQ0EsTUFBQSxNQUFBLGFBR0EsRUFBQSxHQUFBLEtBQUEsRUFBQSxXQUNBLE1BQUEsTUFBQSxxQkFHQSxFQUFBLEdBQUEsS0FBQSxFQUFBLEdBQUEsU0FBQSxFQUFBLFdBQ0EsTUFBQSxNQUFBLHlCQUdBLEVBQUEsR0FBQSxTQUFBLEVBQUEsV0FDQSxTQUFBLE9BQUEsS0FBQSxLQUFBLFdBQUEsU0FBQSxTQUFBLEdBQ0EsTUFBQSxLQUFBLE1BQ0EsUU5tQ0EsRUFBQSxXQUFBLFFBQUEsR0FBQSxHQUNBLEdBQUEsR0FBQSxFQUNBLEVBQUEsQ0FVQSxLQVJBLGdCQUFBLElBQ0EsRUFBQSxNQUNBLEVBQUEsTUFFQSxFQUFBLEtBQUEsRUFBQSxJQUFBLEVBQUEsRUFDQSxFQUFBLFVBQUEsUUFHQSxFQUFBLFVBQUEsT0FBQSxJQUdBLEdBRkEsRUFBQSxVQUFBLEdBTUEsSUFBQSxHQUFBLEtBQUEsR0FDQSxFQUFBLGVBQUEsS0FDQSxHQUFBLGdCQUFBLEdBQUEsR0FDQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEdBQUEsRUFBQSxJQUVBLEVBQUEsR0FBQSxFQUFBLEdBTUEsT0FBQSxJQUdBLEVBQUEsT0FBQSxXQUVBLFNBREEsUUFBQSxLQUFBLFVBQUEsR0FDQSxFQUFBLFdBQUEsTUFBQSxLQUFBLFlBR0EsRUFBQSxHQUFBLEtBQUEsRUFBQSxTQUFBLEdBRUEsTUFEQSxHQUFBLEtBQUEsS0FBQSxNQUNBLE9BR0EsRUFBQSxZQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxFQUFBLEVBQ0EsSUFFQSxLQUFBLElBQUEsR0FDQSxFQUFBLGVBQUEsS0FFQSxFQURBLEVBQ0EsRUFBQSxJQUFBLEVBQUEsSUFFQSxFQUdBLEVBQUEsRUFBQSxHQUdBLEVBQUEsS0FEQSxHQUFBLGdCQUFBLEdBQ0EsRUFBQSxZQUFBLEVBQUEsR0FFQSxtQkFBQSxHQUFBLElBQUEsbUJBQUEsSUFLQSxPQUFBLEdBQUEsS0FBQSxPT25IQSxPQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiB6LmpzIEphdmFTY3JpcHQgTGlicmFyeSB2QFZFUlNJT05cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ORVVSUy96LmpzXG4gKlxuICogQ29weXJpZ2h0IDIwMTQgTkVVUlMgTExDLCBLZXZpbiBKLiBNYXJ0aW4sIGFuZCBvdGhlciBjb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cHM6Ly9naXRodWIuY29tL05FVVJTL3ouanMvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICpcbiAqIERhdGU6IEBEQVRFXG4gKi9cbjsoZnVuY3Rpb24gKHdpbmRvdywgZG9jdW1lbnQpIHtcbiIsInZhciB6QXJyYXksIF93aW5kb3csIF9kb2N1bWVudCwgaWZyYW1lO1xuXG5mdW5jdGlvbiB6KGVsZW0sIHNjb3BlKSB7XG5cdGlmIChlbGVtIGluc3RhbmNlb2YgekFycmF5KSB7XG5cdFx0cmV0dXJuIGVsZW07XG5cdH0gZWxzZSBpZiAoZWxlbSBpbnN0YW5jZW9mIEV2ZW50VGFyZ2V0KSB7XG5cdFx0cmV0dXJuIG5ldyB6QXJyYXkoZWxlbSk7XG5cdH0gZWxzZSBpZiAoZWxlbSA9PT0gdW5kZWZpbmVkIHx8IGVsZW0gPT09IG51bGwpIHtcblx0XHRyZXR1cm4gbmV3IHpBcnJheSgpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBlbGVtICE9PSBcInN0cmluZ1wiKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIGlzIGludmFsaWRcIik7XG5cdH1cblxuXHRpZiAoc2NvcGUpIHtcblx0XHRpZiAoIV9jaGVja1ZhbGlkRWxlbWVudChzY29wZSkpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcihcIlNlY29uZCBwYXJhbWV0ZXIgaXMgaW52YWxpZFwiKTtcblx0XHR9XG5cblx0XHRzY29wZSA9IHooc2NvcGUpO1xuXHR9IGVsc2Uge1xuXHRcdHNjb3BlID0gX2RvY3VtZW50O1xuXHR9XG5cblx0cmV0dXJuIF9maW5kKHNjb3BlLCBlbGVtKTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpe31cblxudHJ5IHtcblx0aWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiKTtcblxuXHRpZnJhbWUuc3R5bGUud2lkdGhcdFx0XHQ9IDA7XG5cdGlmcmFtZS5zdHlsZS5oZWlnaHRcdFx0XHQ9IDA7XG5cdGlmcmFtZS5zdHlsZS5ib3JkZXJTdHlsZVx0PSBcIm5vbmVcIjtcblxuXHRkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlmcmFtZSk7XG5cblx0ekFycmF5ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuQXJyYXk7XG5cblx0ZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChpZnJhbWUpO1xufSBjYXRjaCAoZSkge1xuXHR6QXJyYXkgPSBBcnJheTtcbn1cblxuLy93aW5kb3cuJFx0PSB6O1xud2luZG93LnpcdD0gejtcbnouZm5cdFx0PSB6QXJyYXkucHJvdG90eXBlO1xuX3dpbmRvd1x0XHQ9IHood2luZG93KTtcbl9kb2N1bWVudFx0PSB6KGRvY3VtZW50KTtcblxuei5mbi5maW5kID0gZnVuY3Rpb24gKHN0ckVsZW0pIHtcblx0aWYgKHR5cGVvZiBzdHJFbGVtICE9PSBcInN0cmluZ1wiKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1hdGVyIG9mIHojZmluZCgpIHNob3VsZCBiZSBhIHN0cmluZ1wiKTtcblx0fVxuXG5cdHJldHVybiBfZmluZCh0aGlzLCBzdHJFbGVtKTtcbn07XG4iLCJ2YXIgYWpheERlZmF1bHRzLCBhamF4VHlwZXMsXG5cdGFqYXhNaW1lc1x0PSB7fVxuXG5hamF4RGVmYXVsdHMgPSB7XG5cdG1ldGhvZDogXCJHRVRcIixcblx0cmVxdWVzdFR5cGU6IFwidGV4dFwiLFxuXHRyZXNwb25zZVR5cGU6IFwidGV4dFwiLFxuXHR1cmw6IHdpbmRvdy5sb2NhdGlvbiArIFwiXCIsXG5cdHF1ZXJ5OiBudWxsLFxuXHRkYXRhOiBudWxsLFxuXHRzZXR1cDogbm9vcCxcblx0c3VjY2Vzczogbm9vcCxcblx0ZXJyb3I6IG5vb3Bcbn07XG5cbmFqYXhUeXBlcyA9IHtcblx0dGV4dDogZnVuY3Rpb24gKGRhdGEpIHtcblx0XHRyZXR1cm4gKGRhdGEgfHwgXCJcIikgKyBcIlwiO1xuXHR9XG59O1xuXG56LmFqYXggPSBmdW5jdGlvbiAob3B0aW9ucykge1xuXHR2YXIgZGF0YSxcblx0XHRyZXEgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuXHRvcHRpb25zID0gei5leHRlbmQoe1xuXHRcdGNvbnRleHQ6IHJlcVxuXHR9LCBhamF4RGVmYXVsdHMsIG9wdGlvbnMpO1xuXG5cdGlmICghYWpheFR5cGVzW29wdGlvbnMucmVxdWVzdFR5cGVdKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBvcHRpb24gYHJlcXVlc3RUeXBlYFwiKTtcblx0fSBlbHNlIGlmICghYWpheFR5cGVzW29wdGlvbnMucmVzcG9uc2VUeXBlXSkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgb3B0aW9uIGByZXNwb25zZVR5cGVgXCIpO1xuXHR9XG5cblx0aWYgKG9wdGlvbnMucXVlcnkgJiYgfltcIkhFQURcIiwgXCJHRVRcIl0uaW5kZXhPZihvcHRpb25zLm1ldGhvZC50b1VwcGVyQ2FzZSgpKSkge1xuXHRcdG9wdGlvbnMudXJsXHQrPSB+b3B0aW9ucy51cmwuaW5kZXhPZihcIj9cIikgPyBcIiZcIiA6IFwiP1wiO1xuXHRcdG9wdGlvbnMudXJsXHQrPSB6LnF1ZXJ5U3RyaW5nKG9wdGlvbnMucXVlcnkpO1xuXHRcdG9wdGlvbnMudXJsXHQ9IG9wdGlvbnMudXJsLnJlcGxhY2UoLyhcXD98JikmL2csIFwiJDFcIik7XG5cdH1cblxuXHRyZXEub3BlbihvcHRpb25zLm1ldGhvZCwgb3B0aW9ucy51cmwsIHRydWUpO1xuXG5cdHJlcS5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG5cdFx0dmFyIHJlc3A7XG5cblx0XHRpZiAocmVxLnN0YXR1cyA+PSAyMDAgJiYgcmVxLnN0YXR1cyA8IDQwMCkge1xuXHRcdFx0cmVzcCA9IGFqYXhUeXBlc1tvcHRpb25zLnJlc3BvbnNlVHlwZV0uY2FsbChyZXEsIHJlcS5yZXNwb25zZVRleHQsIHRydWUpO1xuXHRcdFx0b3B0aW9ucy5zdWNjZXNzLmNhbGwob3B0aW9ucy5jb250ZXh0LCByZXNwKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0b3B0aW9ucy5lcnJvci5jYWxsKG9wdGlvbnMuY29udGV4dCwgcmVxLnN0YXR1cywgcmVxLnN0YXR1c1RleHQpO1xuXHRcdH1cblx0fTtcblxuXHRyZXEub25lcnJvciA9IGZ1bmN0aW9uICgpIHtcblx0XHRvcHRpb25zLmVycm9yLmNhbGwob3B0aW9ucy5jb250ZXh0LCByZXEuc3RhdHVzLCByZXEuc3RhdHVzVGV4dCk7XG5cdH07XG5cblx0aWYgKCF+W1wiSEVBRFwiLCBcIkdFVFwiXS5pbmRleE9mKG9wdGlvbnMubWV0aG9kLnRvVXBwZXJDYXNlKCkpKSB7XG5cdFx0cmVxLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLThcIik7XG5cdH1cblxuXHRpZiAob3B0aW9ucy5kYXRhKSB7XG5cdFx0b3B0aW9ucy5kYXRhID0gYWpheFR5cGVzW29wdGlvbnMucmVxdWVzdFR5cGVdLmNhbGwocmVxLCBvcHRpb25zLmRhdGEsIGZhbHNlKTtcblx0fVxuXG5cdG9wdGlvbnMuc2V0dXAuY2FsbChyZXEsIHJlcSk7XG5cblx0cmVxLnNlbmQob3B0aW9ucy5kYXRhKTtcbn07XG4iLCJhamF4RGVmYXVsdHMucmVxdWVzdFR5cGVcdD0gXCJkZXRlY3RcIjtcbmFqYXhEZWZhdWx0cy5yZXNwb25zZVR5cGVcdD0gXCJkZXRlY3RcIjtcblxuei5yZWdpc3RlckFqYXhUeXBlID0gZnVuY3Rpb24gKHR5cGUsIG1pbWUsIGZuKSB7XG5cdGlmICghZm4gJiYgdHlwZW9mIG1pbWUgPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdGZuXHRcdD0gbWltZTtcblx0XHRtaW1lXHQ9IGZhbHNlO1xuXHR9XG5cblx0YWpheFR5cGVzW3R5cGVdID0gZm47XG5cblx0aWYgKG1pbWUpIHtcblx0XHRhamF4TWltZXNbbWltZV0gPSB0eXBlO1xuXHR9XG59O1xuXG56LnJlZ2lzdGVyQWpheFR5cGUoXCJkZXRlY3RcIiwgZnVuY3Rpb24gKGRhdGEsIGlzUmVzcG9uc2UpIHtcblx0dmFyIGhlYWRlcixcblx0XHR0eXBlID0gXCJ0ZXh0XCI7XG5cblx0aWYgKGlzUmVzcG9uc2UpIHtcblx0XHRoZWFkZXJcdD0gdGhpcy5nZXRSZXNwb25zZUhlYWRlcihcIkNvbnRlbnQtVHlwZVwiKSB8fCBcIlwiLFxuXHRcdGhlYWRlclx0PSBoZWFkZXIuc3BsaXQoXCI7XCIpWzBdLnRyaW0oKTtcblx0XHR0eXBlXHQ9IGFqYXhNaW1lc1toZWFkZXJdIHx8IFwidGV4dFwiO1xuXHR9IGVsc2Uge1xuXHRcdGlmIChkYXRhICYmIHR5cGVvZiBkYXRhID09PSBcIm9iamVjdFwiICYmIGRhdGEudG9TdHJpbmcgPT09ICh7fSkudG9TdHJpbmcpIHtcblx0XHRcdHR5cGUgPSBcImpzb25cIjtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gYWpheFR5cGVzW3R5cGVdLmNhbGwodGhpcywgZGF0YSwgaXNSZXNwb25zZSk7XG59KTtcblxuei5yZWdpc3RlckFqYXhUeXBlKFwianNvblwiLCBcImFwcGxpY2F0aW9uL2pzb25cIiwgZnVuY3Rpb24gKGRhdGEsIGlzUmVzcG9uc2UpIHtcblx0cmV0dXJuIGlzUmVzcG9uc2UgPyBKU09OLnBhcnNlKGRhdGEpIDogSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG59KTtcblxuei5yZWdpc3RlckFqYXhUeXBlKFwiaHRtbFwiLCBcInRleHQvaHRtbFwiLCBmdW5jdGlvbiAoZGF0YSwgaXNSZXNwb25zZSkge1xuXHR2YXIgZG9jLCBhcnI7XG5cblx0aWYgKCFpc1Jlc3BvbnNlKSB7XG5cdFx0cmV0dXJuIGRhdGEub3V0ZXJIVE1MO1xuXHR9XG5cblx0YXJyXHQ9IG5ldyB6QXJyYXkoKTtcblx0ZG9jID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCk7XG5cblx0ZG9jLmRvY3VtZW50RWxlbWVudC5pbm5lckhUTUwgPSBkYXRhO1xuXG5cdGFyci5wdXNoLmFwcGx5KGFyciwgYXJyLnNsaWNlLmNhbGwoZG9jLmJvZHkuY2hpbGRyZW4sIDApKTtcblxuXHRyZXR1cm4gYXJyO1xufSk7XG5cbnoucmVnaXN0ZXJBamF4VHlwZShcInhtbFwiLCBcInRleHQveG1sXCIsIGFqYXhYTUxQYXJzZXIpO1xuei5yZWdpc3RlckFqYXhUeXBlKFwieG1sXCIsIFwiYXBwbGljYXRpb24veG1sXCIsIGFqYXhYTUxQYXJzZXIpO1xuXG5mdW5jdGlvbiBhamF4WE1MUGFyc2VyKGRhdGEsIGlzUmVzcG9uc2UpIHtcblx0dmFyIHBhcnNlcjtcblxuXHRpZiAoIWlzUmVzcG9uc2UpIHtcblx0XHRwYXJzZXIgPSBuZXcgWE1MU2VyaWFsaXplcigpO1xuXHRcdHJldHVybiBwYXJzZXIuc2VyaWFsaXplVG9TdHJpbmcoZGF0YSk7XG5cdH1cblxuXHRpZiAodGhpcy5yZXNwb25zZVhNTCkge1xuXHRcdHJldHVybiB0aGlzLnJlc3BvbnNlWE1MO1xuXHR9XG5cblx0cGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xuXHRyZXR1cm4gcGFyc2VyLnBhcnNlRnJvbVN0cmluZyhkYXRhLCBcImFwcGxpY2F0aW9uL3htbFwiKTtcbn1cbiIsImlmIChcImRhdGFzZXRcIiBpbiBkb2N1bWVudC5ib2R5KSB7XG5cdHouZm4uZGF0YSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdFx0dmFyIGksIGw7XG5cblx0XHRpZiAoIXRoaXMubGVuZ3RoKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKGtleSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRyZXR1cm4gdGhpc1swXS5kYXRhc2V0O1xuXHRcdH0gZWxzZSBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0cmV0dXJuIHRoaXNbMF0uZGF0YXNldFtrZXldO1xuXHRcdH1cblxuXHRcdGZvciAoaSA9IDAsIGwgPSB0aGlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuXHRcdFx0dGhpc1tpXS5kYXRhc2V0W2tleV0gPSB2YWx1ZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fTtcbn0gZWxzZSB7XG5cdHouZm4uZGF0YSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdFx0dmFyIGksIGwsXG5cdFx0XHRkYXRhS2V5ID0gXCJkYXRhLVwiICsgKGtleSB8fCBcIlwiKTtcblxuXHRcdGlmICghdGhpcy5sZW5ndGgpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoa2V5ID09PSB1bmRlZmluZWQpIHtcblx0XHRcdGkgPSB7fTtcblxuXHRcdFx0W10uZm9yRWFjaC5jYWxsKHRoaXNbMF0uYXR0cmlidXRlcywgZnVuY3Rpb24gKGF0dHIpIHtcblx0XHRcdFx0cmV0dXJuIGlbYXR0ci5uYW1lXSA9IGF0dHIudmFsdWU7XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIGk7XG5cdFx0fSBlbHNlIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRyZXR1cm4gdGhpc1swXS5hdHRyaWJ1dGVzW2RhdGFLZXldO1xuXHRcdH1cblxuXHRcdGZvciAoaSA9IDAsIGwgPSB0aGlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuXHRcdFx0dGhpc1tpXS5kYXRhc2V0W2RhdGFLZXldID0gdmFsdWU7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH07XG59XG4iLCJ6LmZuLm9uID0gei5mbi5iaW5kID0gX2VhY2goZnVuY3Rpb24gX29uKGV2ZW50VHlwZSwgZm4pIHtcblx0dGhpcy5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgZm4sIGZhbHNlKTtcbn0pO1xuXG56LmZuLm9mZiA9IHouZm4udW5iaW5kID0gX2VhY2goZnVuY3Rpb24gX29mZihldmVudFR5cGUsIGZuKSB7XG5cdHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGZuLCBmYWxzZSk7XG59KTtcblxuei5mbi50cmlnZ2VyID0gZnVuY3Rpb24gKGV2ZW50VHlwZSwgZGF0YSkge1xuXHR2YXIgZXZlbnQsIF9kYXRhLFxuXHRcdGkgPSAwLFxuXHRcdGwgPSB0aGlzLmxlbmd0aDtcblxuXHR0cnkge1xuXHRcdF9kYXRhXHQ9IGRhdGEgPyB7ZGV0YWlsOiBkYXRhfSA6IHVuZGVmaW5lZDtcblx0XHRldmVudFx0PSBuZXcgQ3VzdG9tRXZlbnQoZXZlbnRUeXBlLCBfZGF0YSk7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50Jyk7XG5cdFx0ZXZlbnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50VHlwZSwgdHJ1ZSwgdHJ1ZSwgZGF0YSk7XG5cdH1cblxuXHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdHRoaXNbaV0uZGlzcGF0Y2hFdmVudChldmVudCk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG4iLCJmdW5jdGlvbiBfaXNXaXRoRnVuY3Rpb24oZWxlbSwgZm4pIHtcblx0cmV0dXJuIGZuLmNhbGwoZWxlbSwgZWxlbSk7XG59XG5cbmZ1bmN0aW9uIF9pc1dpdGhFbGVtZW50KGVsZW0xLCBlbGVtMikge1xuXHRyZXR1cm4gZWxlbTEgPT09IGVsZW0yO1xufVxuXG56LmZuLmlzID0gKGZ1bmN0aW9uIF9pcygpIHtcblx0dmFyIG1hdGNoZXMsXG5cdFx0Ym9keSA9IGRvY3VtZW50LmJvZHk7XG5cblx0bWF0Y2hlc1x0PSBib2R5Lm1hdGNoZXMgfHwgYm9keS5tYXRjaGVzU2VsZWN0b3IgfHwgYm9keS5tc01hdGNoZXNTZWxlY3Rvcjtcblx0bWF0Y2hlcyA9IG1hdGNoZXMgfHwgYm9keS5tb3pNYXRjaGVzU2VsZWN0b3IgfHwgYm9keS53ZWJraXRNYXRjaGVzU2VsZWN0b3IgfHwgYm9keS5vTWF0Y2hlc1NlbGVjdG9yO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoc2VsZWN0b3IpIHtcblx0XHR2YXIgX2lzV2l0aCwgcmV0LFxuXHRcdFx0aVx0PSAwLFxuXHRcdFx0bFx0PSB0aGlzLmxlbmd0aDtcblxuXHRcdHN3aXRjaCAodHlwZW9mIHNlbGVjdG9yKSB7XG5cdFx0XHRjYXNlIFwic3RyaW5nXCI6XG5cdFx0XHRcdF9pc1dpdGggPSBtYXRjaGVzO1xuXHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgXCJmdW5jdGlvblwiOlxuXHRcdFx0XHRfaXNXaXRoID0gX2lzV2l0aEZ1bmN0aW9uO1xuXHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgXCJvYmplY3RcIjpcblx0XHRcdFx0aWYgKHNlbGVjdG9yIGluc3RhbmNlb2YgRXZlbnRUYXJnZXQpIHtcblx0XHRcdFx0XHRfaXNXaXRoID0gX2lzV2l0aEVsZW1lbnQ7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIG9mIHojaXMgaXMgaW52YWxpZFwiKTtcblx0XHRcdFx0fVxuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIG9mIHojaXMgaXMgaW52YWxpZFwiKTtcblx0XHRcdGJyZWFrO1xuXHRcdH1cblxuXHRcdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHRyZXQgPSBfaXNXaXRoKHRoaXNbaV0sIHNlbGVjdG9yKTtcblxuXHRcdFx0aWYgKHJldCkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBmYWxzZTtcblx0fTtcbn0pKCk7XG4iLCJ6LmZuLmhpZGUgPSBfZWFjaChmdW5jdGlvbiBoaWRlKCkge1xuXHR0aGlzLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcblx0cmV0dXJuIHRoaXM7XG59KTtcblxuei5mbi5zaG93ID0gX2VhY2goZnVuY3Rpb24gc2hvdygpIHtcblx0dGhpcy5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcblx0cmV0dXJuIHRoaXM7XG59KTtcblxuei5mbi5jbG9uZSA9IGZ1bmN0aW9uIChkZWVwKSB7XG5cdHZhciBpID0gMDtcblxuXHRpZiAoZGVlcCA9PT0gdW5kZWZpbmVkIHx8IGRlZXAgPT09IG51bGwpIHtcblx0XHRkZWVwID0gZmFsc2U7XG5cdH1cblxuXHRmb3IgKDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHR0aGlzW2ldID0gdGhpc1tpXS5jbG9uZU5vZGUoZGVlcCk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cbnouZm4uaHRtbCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHR2YXIgaSwgbDtcblxuXHRpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiB0aGlzLmlubmVySFRNTDtcblx0fVxuXG5cdGZvciAoaSA9IDAsIGwgPSB0aGlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuXHRcdHRoaXNbaV0uaW5uZXJIVE1MID0gdmFsdWU7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cbnouZm4udGV4dCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHR2YXIgaSwgbDtcblxuXHRpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiB0aGlzLnRleHRDb250ZW50O1xuXHR9XG5cblx0Zm9yIChpID0gMCwgbCA9IHRoaXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG5cdFx0dGhpc1tpXS50ZXh0Q29udGVudCA9IHZhbHVlO1xuXHR9XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG56LmZuLmdldEF0dHIgPSBmdW5jdGlvbiAoa2V5KSB7XG5cdGlmICgha2V5KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIG9mIHojZ2V0QXR0ciBpcyByZXF1aXJlZFwiKTtcblx0fVxuXG5cdHJldHVybiB0aGlzWzBdICYmIHRoaXNbMF0uZ2V0QXR0cmlidXRlKGtleSk7XG59O1xuXG56LmZuLnNldEF0dHIgPSBfZWFjaChmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuXHRpZiAoIWtleSkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkZpcnN0IHBhcmFtZXRlciBvZiB6I3NldEF0dHIgaXMgcmVxdWlyZWRcIik7XG5cdH0gZWxzZSBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIlNlY29uZCBwYXJhbWV0ZXIgb2YgeiNzZXRBdHRyIGlzIHJlcXVpcmVkXCIpO1xuXHR9XG5cblx0dGhpcy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG5cdHJldHVybiB0aGlzO1xufSk7XG5cbnouZm4uYXR0ciA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIHRoaXMuZ2V0QXR0cihrZXkpO1xuXHR9XG5cblx0dGhpcy5zZXRBdHRyKGtleSwgdmFsdWUpO1xuXHRyZXR1cm4gdGhpcztcbn07XG5cbnouZm4ucmVwbGFjZVdpdGggPSB6LmZuLnJlcGxhY2UgPSBfZWFjaChmdW5jdGlvbiAodmFsdWUpIHtcblx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNyZXBsYWNlIGlzIHJlcXVpcmVkXCIpO1xuXHR9XG5cblx0dGhpcy5vdXRlckhUTUwgPSB2YWx1ZTtcbn0pO1xuXG5pZiAoXCJjbGFzc0xpc3RcIiBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHtcblx0ei5mbi5hZGRDbGFzcyA9IF9lYWNoKGZ1bmN0aW9uIGFkZENsYXNzKGNsYXNzTmFtZSkge1xuXHRcdHRoaXMuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xuXHR9KTtcblxuXHR6LmZuLnJlbW92ZUNsYXNzID0gX2VhY2goZnVuY3Rpb24gcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7XG5cdFx0dGhpcy5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG5cdH0pO1xuXG5cdHouZm4udG9nZ2xlQ2xhc3MgPSBfZWFjaChmdW5jdGlvbiB0b2dnbGVDbGFzcyhjbGFzc05hbWUsIGZvcmNlKSB7XG5cdFx0aWYgKGZvcmNlID09PSB1bmRlZmluZWQpIHtcblx0XHRcdHRoaXMuY2xhc3NMaXN0LnRvZ2dsZShjbGFzc05hbWUpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHRoaXMuY2xhc3NMaXN0W2ZvcmNlID8gXCJhZGRcIiA6IFwicmVtb3ZlXCJdKGNsYXNzTmFtZSk7XG5cdH0pO1xufSBlbHNlIHtcblx0ei5mbi5hZGRDbGFzcyA9IF9lYWNoKGZ1bmN0aW9uIGFkZENsYXNzKGNsYXNzTmFtZSkge1xuXHRcdHRoaXMuY2xhc3NOYW1lICs9IFwiIFwiICsgY2xhc3NOYW1lO1xuXHR9KTtcblxuXHR6LmZuLnJlbW92ZUNsYXNzID0gX2VhY2goZnVuY3Rpb24gcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7XG5cdFx0dGhpcy5jbGFzc05hbWUgKz0gdGhpcy5jbGFzc05hbWUucmVwbGFjZShuZXcgUmVnRXhwKFwiKF58XFxcXGIpXCIgKyBjbGFzc05hbWUgKyBcIihcXFxcYnwkKVwiLCBcImdcIiksIFwiIFwiKTtcblx0fSk7XG5cblx0ei5mbi50b2dnbGVDbGFzcyA9IGZ1bmN0aW9uIChjbGFzc05hbWUsIGZvcmNlKSB7XG5cdFx0dGhpc1tmb3JjZSA/IFwiYWRkQ2xhc3NcIiA6IFwicmVtb3ZlQ2xhc3NcIl0oY2xhc3NOYW1lKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fTtcbn1cbiIsInZhciBfc2VsZWN0b3JzQ2FjaGUsXG5cdF9zZWxlY3RvcnMgPSB7fTtcblxuZnVuY3Rpb24gX2ZpbmQoc2NvcGUsIHN0ckVsZW0pIHtcblx0dmFyIHJldCA9IG5ldyB6QXJyYXkoKTtcblxuXHRzY29wZS5mb3JFYWNoKGZ1bmN0aW9uIF9maW5kRm9yRWFjaChzY29wZWRFbGVtKSB7XG5cdFx0cmV0LnB1c2guYXBwbHkocmV0LCBfc2VsZWN0KHNjb3BlZEVsZW0sIHN0ckVsZW0pKTtcblx0fSk7XG5cblx0cmV0dXJuIHJldDtcbn1cblxuZnVuY3Rpb24gX3NlbGVjdChzY29wZWRFbGVtLCBzdHJFbGVtKSB7XG5cdGlmICghfnN0ckVsZW0uaW5kZXhPZihcIjpcIikgfHwgX3NlbGVjdG9yc0NhY2hlID09PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gc2NvcGVkRWxlbS5xdWVyeVNlbGVjdG9yQWxsKHN0ckVsZW0pO1xuXHR9XG5cblx0aWYgKF9zZWxlY3RvcnNDYWNoZSA9PT0gZmFsc2UpIHtcblx0XHRfZ2VuZXJhdGVTZWxlY3RvcnNDYWNoZSgpO1xuXHR9XG5cblx0aWYgKCFzdHJFbGVtLm1hdGNoKF9zZWxlY3RvcnNDYWNoZSkpIHtcblx0XHRyZXR1cm4gc2NvcGVkRWxlbS5xdWVyeVNlbGVjdG9yQWxsKHN0ckVsZW0pO1xuXHR9XG5cblx0cmV0dXJuIF9zZWxlY3QyKHNjb3BlZEVsZW0sIHN0ckVsZW0pO1xufVxuXG5mdW5jdGlvbiBfc2VsZWN0MihzY29wZWRFbGVtLCBzdHJFbGVtKSB7XG5cdHZhciBlbnRyeSwgc2VsZWN0b3JzLFxuXHRcdHNjb3BlXHQ9IG5ldyB6QXJyYXkoc2NvcGVkRWxlbSksXG5cdFx0Y3VycmVudFx0PSBcIlwiLFxuXHRcdGVudHJpZXNcdD0gc3RyRWxlbS5zcGxpdCgvXFxzKy8pO1xuXG5cdHdoaWxlIChlbnRyeSA9IGVudHJpZXMuc2hpZnQoKSkge1xuXHRcdHNlbGVjdG9ycyA9IGVudHJ5Lm1hdGNoKF9zZWxlY3RvcnNDYWNoZSk7XG5cblx0XHRpZiAoIXNlbGVjdG9ycykge1xuXHRcdFx0Y3VycmVudCArPSBlbnRyeSArIFwiIFwiO1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0Y3VycmVudFx0Kz0gZW50cnkucmVwbGFjZShfc2VsZWN0b3JzQ2FjaGUsIFwiXCIpIHx8IFwiKlwiO1xuXHRcdGVudHJ5XHQ9IG5ldyB6QXJyYXkoKTtcblxuXHRcdHNjb3BlLmZvckVhY2goZnVuY3Rpb24gX3NlbGVjdEZvckVhY2goc2NvcGVkRWxlbSkge1xuXHRcdFx0dmFyIHJldCA9IG5ldyB6QXJyYXkoKTtcblxuXHRcdFx0c2VsZWN0b3JzLmZvckVhY2goZnVuY3Rpb24gc2VsZWN0b3JzRm9yRWFjaChzZWxlY3Rvcikge1xuXHRcdFx0XHRyZXQucHVzaC5hcHBseShyZXQsIF9zZWxlY3RvcnNbc2VsZWN0b3JdLmNhbGwoc2NvcGVkRWxlbSwgY3VycmVudCkpO1xuXHRcdFx0fSk7XG5cblx0XHRcdGVudHJ5LnB1c2guYXBwbHkoZW50cnksIHJldCk7XG5cdFx0fSk7XG5cblx0XHRzY29wZVx0PSBlbnRyeTtcblx0XHRjdXJyZW50XHQ9IFwiXCI7XG5cdH1cblxuXHRpZiAoY3VycmVudCkge1xuXHRcdGVudHJ5ID0gbmV3IHpBcnJheSgpO1xuXG5cdFx0c2NvcGUuZm9yRWFjaChmdW5jdGlvbiBjdXJyZW50Rm9yRWFjaChzY29wZWRFbGVtKSB7XG5cdFx0XHRlbnRyeS5wdXNoLmFwcGx5KGVudHJ5LCBzY29wZWRFbGVtLnF1ZXJ5U2VsZWN0b3JBbGwoY3VycmVudCkpO1xuXHRcdH0pO1xuXG5cdFx0c2NvcGUgPSBlbnRyeTtcblx0fVxuXG5cdHJldHVybiBzY29wZTtcbn1cblxuZnVuY3Rpb24gX2dlbmVyYXRlU2VsZWN0b3JzQ2FjaGUoKSB7XG5cdHZhciBzZWxlY3RvcnNcdD0gT2JqZWN0LmtleXMoX3NlbGVjdG9ycykuam9pbihcInxcIikucmVwbGFjZSgvOi9nLCBcIlwiKTtcblx0X3NlbGVjdG9yc0NhY2hlXHQ9IG5ldyBSZWdFeHAoXCI6KFwiICsgc2VsZWN0b3JzICsgXCIpXCIsIFwiZ1wiKTtcbn1cbiIsInoucmVnaXN0ZXJTZWxlY3RvciA9IGZ1bmN0aW9uIChzZWxlY3RvciwgZm4pIHtcblx0aWYgKCFzZWxlY3RvciB8fCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNyZWdpc3RlclNlbGVjdG9yIG11c3QgYmUgYSBzdHJpbmcgc2VsZWN0b3JcIik7XG5cdH0gZWxzZSBpZiAoIWZuIHx8IHR5cGVvZiBmbiAhPT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiU2Vjb25kIHBhcmFtZXRlciBvZiB6I3JlZ2lzdGVyU2VsZWN0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO1xuXHR9XG5cblx0aWYgKHNlbGVjdG9yWzBdICE9PSBcIjpcIikge1xuXHRcdHNlbGVjdG9yID0gXCI6XCIgKyBzZWxlY3Rvcjtcblx0fVxuXG5cdF9zZWxlY3RvcnNDYWNoZVx0XHRcdD0gZmFsc2U7XG5cdF9zZWxlY3RvcnNbc2VsZWN0b3JdXHQ9IGZuO1xufTtcblxuei5yZWdpc3RlclNlbGVjdG9yKFwiOmZpcnN0XCIsIGZ1bmN0aW9uIHNlbGVjdG9yRmlyc3QocXVlcnkpIHtcblx0cmV0dXJuIHoodGhpcy5xdWVyeVNlbGVjdG9yKHF1ZXJ5KSk7XG59KTtcblxuei5yZWdpc3RlclNlbGVjdG9yKFwiOmlucHV0XCIsIChmdW5jdGlvbiBzZWxlY3RvckZpcnN0KCkge1xuXHR2YXIgdGFncyA9IFwiSU5QVVQsVEVYVEFSRUEsU0VMRUNULEJVVFRPTlwiLnNwbGl0KFwiLFwiKTtcblxuXHRmdW5jdGlvbiBmaWx0ZXIoZWxlbWVudCkge1xuXHRcdHJldHVybiB+dGFncy5pbmRleE9mKGVsZW1lbnQudGFnTmFtZSk7XG5cdH1cblxuXHRyZXR1cm4gZnVuY3Rpb24gc2VsZWN0b3JJbnB1dChxdWVyeSkge1xuXHRcdHZhciBlbGVtZW50cyA9IG5ldyB6QXJyYXkoKTtcblxuXHRcdGVsZW1lbnRzLnB1c2guYXBwbHkoZWxlbWVudHMsIFtdLmZpbHRlci5jYWxsKHRoaXMucXVlcnlTZWxlY3RvckFsbChxdWVyeSksIGZpbHRlcikpO1xuXG5cdFx0cmV0dXJuIGVsZW1lbnRzO1xuXHR9O1xufSkoKSk7XG4iLCJ6LmZuLnBhcmVudCA9IF9lYWNoTmV3KGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuIHRoaXMucGFyZW50Tm9kZTtcbn0pO1xuXG56LmZuLm5leHQgPSBfZWFjaE5ldyhmdW5jdGlvbiAoKSB7XG5cdHJldHVybiB0aGlzLm5leHRFbGVtZW50U2libGluZztcbn0pO1xuXG56LmZuLnByZXYgPSB6LmZuLnByZXZpb3VzID0gX2VhY2hOZXcoZnVuY3Rpb24gKCkge1xuXHRyZXR1cm4gdGhpcy5wcmV2aW91c0VsZW1lbnRTaWJsaW5nO1xufSk7XG5cbnouZm4uc2libGluZ3MgPSBfZWFjaE5ldyhmdW5jdGlvbiAoKSB7XG5cdHJldHVybiBbXS5maWx0ZXIuY2FsbCh0aGlzLnBhcmVudE5vZGUuY2hpbGRyZW4sIGZ1bmN0aW9uKGNoaWxkKSB7XG5cdFx0cmV0dXJuIGNoaWxkICE9PSB0aGlzO1xuXHR9LCB0aGlzKTtcbn0pO1xuIiwiZnVuY3Rpb24gX2NoZWNrVmFsaWRFbGVtZW50KGVsZW0pIHtcblx0aWYgKGVsZW0gaW5zdGFuY2VvZiB6QXJyYXkpIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdGlmIChlbGVtIGluc3RhbmNlb2YgRXZlbnRUYXJnZXQpIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdGlmICh0eXBlb2YgZWxlbSA9PT0gXCJzdHJpbmdcIikge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG59XG5cbmZ1bmN0aW9uIF9lYWNoKGZuKSB7XG5cdHJldHVybiBmdW5jdGlvbiBydW5FYWNoKCkge1xuXHRcdHZhciBpXHQ9IDAsXG5cdFx0XHRsXHQ9IHRoaXMubGVuZ3RoO1xuXG5cdFx0Zm9yICg7IGkgPCBsOyBpKyspIHtcblx0XHRcdGZuLmFwcGx5KHRoaXNbaV0sIGFyZ3VtZW50cyk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH07XG59XG5cbmZ1bmN0aW9uIF9lYWNoTmV3KGZuKSB7XG5cdHJldHVybiBmdW5jdGlvbiBydW5FYWNoKCkge1xuXHRcdHZhciByZXQsXG5cdFx0XHRpXHQ9IDAsXG5cdFx0XHRsXHQ9IHRoaXMubGVuZ3RoLFxuXHRcdFx0YXJyXHQ9IG5ldyB6QXJyYXkoKTtcblxuXHRcdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHRyZXQgPSBmbi5hcHBseSh0aGlzW2ldLCBhcmd1bWVudHMpO1xuXG5cdFx0XHRpZiAocmV0KSB7XG5cdFx0XHRcdGlmIChBcnJheS5pc0FycmF5KHJldCkgJiYgcmV0Lmxlbmd0aCkge1xuXHRcdFx0XHRcdGFyci5wdXNoLmFwcGx5KGFyciwgcmV0KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRhcnIucHVzaChyZXQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGFycjtcblx0fTtcbn1cblxuei5kZWVwRXh0ZW5kID0gZnVuY3Rpb24gX2V4dGVuZChkZWVwKSB7XG5cdHZhciBvYmosIHRhcmdldCxcblx0XHRpID0gMjtcblxuXHRpZiAodHlwZW9mIGRlZXAgPT09IFwib2JqZWN0XCIpIHtcblx0XHR0YXJnZXRcdD0gZGVlcCB8fCB7fTtcblx0XHRkZWVwXHQ9IEluZmluaXR5O1xuXHR9IGVsc2Uge1xuXHRcdGRlZXBcdD0gZGVlcCA9PT0gdHJ1ZSA/IEluZmluaXR5IDogKGRlZXAgfCAwKTtcblx0XHR0YXJnZXRcdD0gYXJndW1lbnRzWzFdIHx8IHt9O1xuXHR9XG5cblx0Zm9yICg7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRvYmogPSBhcmd1bWVudHNbaV07XG5cblx0XHRpZiAoIW9iaikge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIga2V5IGluIG9iaikge1xuXHRcdFx0aWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG5cdFx0XHRcdGlmIChkZWVwICYmIHR5cGVvZiBvYmpba2V5XSA9PT0gXCJvYmplY3RcIikge1xuXHRcdFx0XHRcdF9leHRlbmQoZGVlcCAtIDEsIHRhcmdldFtrZXldLCBvYmpba2V5XSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGFyZ2V0W2tleV0gPSBvYmpba2V5XTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0YXJnZXQ7XG59O1xuXG56LmV4dGVuZCA9IGZ1bmN0aW9uICgpIHtcblx0W10udW5zaGlmdC5jYWxsKGFyZ3VtZW50cywgMCk7XG5cdHJldHVybiB6LmRlZXBFeHRlbmQuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbn07XG5cbnouZm4uZWFjaCA9IF9lYWNoKGZ1bmN0aW9uIGVhY2goZm4pIHtcblx0Zm4uY2FsbCh0aGlzLCB0aGlzKTtcblx0cmV0dXJuIHRoaXM7XG59KTtcblxuei5xdWVyeVN0cmluZyA9IGZ1bmN0aW9uIChvYmosIHByZWZpeCkge1xuXHR2YXIgaSwga2V5LCB2YWwsXG5cdFx0c3RyaW5ncyA9IFtdO1xuXG5cdGZvciAoaSBpbiBvYmopIHtcblx0XHRpZiAob2JqLmhhc093blByb3BlcnR5KGkpKSB7XG5cdFx0XHRpZiAocHJlZml4KSB7XG5cdFx0XHRcdGtleSA9IHByZWZpeCArIFwiW1wiICsgaSArIFwiXVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0a2V5ID0gaTtcblx0XHRcdH1cblxuXHRcdFx0dmFsID0gb2JqW2ldO1xuXG5cdFx0XHRpZiAodmFsICYmIHR5cGVvZiB2YWwgPT09IFwib2JqZWN0XCIpIHtcblx0XHRcdFx0c3RyaW5ncy5wdXNoKHoucXVlcnlTdHJpbmcodmFsLCBrZXkpKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHN0cmluZ3MucHVzaChlbmNvZGVVUklDb21wb25lbnQoa2V5KSArIFwiPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHZhbCkpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBzdHJpbmdzLmpvaW4oXCImXCIpO1xufTtcbiIsIn0pKHdpbmRvdywgZG9jdW1lbnQpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9