!function(t,e){function r(t,e){if(t instanceof m)return t;if(t instanceof Element||t instanceof Window||t instanceof Document)return new m(t);if(void 0===t||null===t)return new m;if("string"!=typeof t)throw new Error("First parameter is invalid");if(e){if(!l(e))throw new Error("Second parameter is invalid");e=r(e)}else e=g;return a(e,t)}function n(){}function i(t,e){var r;return e?this.responseXML?this.responseXML:(r=new DOMParser,r.parseFromString(t,"application/xml")):(r=new XMLSerializer,r.serializeToString(t))}function o(t,e){return e.call(t,t)}function s(t,e){return t===e}function a(t,e){var r=new m;return t.forEach(function(t){r.push.apply(r,u(t,e))}),r}function u(t,e){return~e.indexOf(":")&&void 0!==S?(S===!1&&c(),e.match(S)?f(t,e):t.querySelectorAll(e)):t.querySelectorAll(e)}function f(t,e){for(var r,n,i=new m(t),o="",s=e.split(/\s+/);r=s.shift();)n=r.match(S),n?(o+=r.replace(S,"")||"*",r=new m,i.forEach(function(t){var e=new m;n.forEach(function(r){e.push.apply(e,b[r].call(t,o))}),r.push.apply(r,e)}),i=r,o=""):o+=r+" ";return o&&(r=new m,i.forEach(function(t){r.push.apply(r,t.querySelectorAll(o))}),i=r),i}function c(){var t=Object.keys(b).join("|").replace(/:/g,"");S=new RegExp(":("+t+")","g")}function l(t){return t instanceof m?!0:t instanceof Element?!0:"string"==typeof t?!0:void 0}function h(t){return function(){for(var e=0,r=this.length;r>e;e++)t.apply(this[e],arguments);return this}}function p(t){return function(){for(var e,r=0,n=this.length,i=new m;n>r;r++)e=t.apply(this[r],arguments),e&&(Array.isArray(e)&&e.length?i.push.apply(i,e):i.push(e));return i}}function d(t,e){for(var r=new m;t[e]&&1===t.nodeType;)t=t[e],r.push(t);return r}var m,v,g,y;try{y=e.createElement("iframe"),y.style.width=0,y.style.height=0,y.style.borderStyle="none",e.body.appendChild(y),m=y.contentWindow.Array,e.body.removeChild(y)}catch(w){m=Array}t.z=r,r.fn=m.prototype,v=r(t),g=r(e),r.fn.find=function(t){if("string"!=typeof t)throw new Error("First paramater of z#find() should be a string");return a(this,t)};var E,T,x={};E={method:"GET",requestType:"text",responseType:"text",url:t.location+"",query:null,data:null,setup:n,success:n,error:n},T={text:function(t){return(t||"")+""}},r.ajax=function(t){var e=new XMLHttpRequest;if(t=r.extend({context:e},E,t),!T[t.requestType])throw new Error("Invalid option `requestType`");if(!T[t.responseType])throw new Error("Invalid option `responseType`");t.query&&~["HEAD","GET"].indexOf(t.method.toUpperCase())&&(t.url+=~t.url.indexOf("?")?"&":"?",t.url+=r.queryString(t.query),t.url=t.url.replace(/(\?|&)&/g,"$1")),e.open(t.method,t.url,!0),e.onload=function(){var r;e.status>=200&&e.status<400?(r=T[t.responseType].call(e,e.responseText,!0),t.success.call(t.context,r)):t.error.call(t.context,e.status,e.statusText)},e.onerror=function(){t.error.call(t.context,e.status,e.statusText)},~["HEAD","GET"].indexOf(t.method.toUpperCase())||e.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),t.data&&(t.data=T[t.requestType].call(e,t.data,!1)),t.setup.call(e,e),e.send(t.data)},E.requestType="detect",E.responseType="detect",r.registerAjaxType=function(t,e,r){r||"function"!=typeof e||(r=e,e=!1),T[t]=r,e&&(x[e]=t)},r.registerAjaxType("detect",function(t,e){var r,n="text";return e?(r=this.getResponseHeader("Content-Type")||"",r=r.split(";")[0].trim(),n=x[r]||"text"):t&&"object"==typeof t&&t.toString==={}.toString&&(n="json"),T[n].call(this,t,e)}),r.registerAjaxType("json","application/json",function(t,e){return e?JSON.parse(t):JSON.stringify(t)}),r.registerAjaxType("html","text/html",function(t,r){var n,i;return r?(i=new m,n=e.implementation.createHTMLDocument(),n.documentElement.innerHTML=t,i.push.apply(i,i.slice.call(n.body.children,0)),i):t.outerHTML}),r.registerAjaxType("xml","text/xml",i),r.registerAjaxType("xml","application/xml",i),r.fn.data="dataset"in e.body?function(t,e){var r,n;if(this.length){if(void 0===t)return this[0].dataset;if(void 0===e)return this[0].dataset[t];for(r=0,n=this.length;n>r;r++)this[r].dataset[t]=e;return this}}:function(t,e){var r,n,i="data-"+(t||"");if(this.length){if(void 0===t)return r={},[].forEach.call(this[0].attributes,function(t){return r[t.name]=t.value}),r;if(void 0===e)return this[0].attributes[i];for(r=0,n=this.length;n>r;r++)this[r].dataset[i]=e;return this}},r.data=function(t,e,n){r(t).data(e,n)},r.fn.on=r.fn.bind=h(function(t,e){this.addEventListener(t,e,!1)}),r.fn.off=r.fn.unbind=h(function(t,e){this.removeEventListener(t,e,!1)}),r.fn.trigger=function(t,r){var n,i=0,o=this.length;void 0===r&&(r={}),r.event=r;try{n=new CustomEvent(t,{detail:r})}catch(s){n=e.createEvent("CustomEvent"),n.initCustomEvent(t,!0,!0,r)}for(;o>i;i++)this[i].dispatchEvent(n);return this},r.fn.is=function(){var t,r=e.body;return t=r.matches||r.matchesSelector||r.msMatchesSelector,t=t||r.mozMatchesSelector||r.webkitMatchesSelector||r.oMatchesSelector,function(e){var r,n,i=0,a=this.length;switch(typeof e){case"string":r=t;break;case"function":r=o;break;case"object":if(!(e instanceof Element))throw new Error("First parameter of z#is is invalid");r=s;default:throw new Error("First parameter of z#is is invalid")}for(;a>i;i++)if(n=r(this[i],e))return n;return!1}}(),r.fn.hide=h(function(){return this.style.display="none",this}),r.fn.show=h(function(){return this.style.display="",this}),r.fn.clone=function(t){var e=0;for((void 0===t||null===t)&&(t=!1);e<this.length;e++)this[e]=this[e].cloneNode(t);return this},r.fn.html=function(t){var e,r;if(void 0===t)return this[0].innerHTML;for(e=0,r=this.length;r>e;e++)this[e].innerHTML=t;return this},r.fn.text=function(t){var e,r;if(void 0===t)return this.textContent;for(e=0,r=this.length;r>e;e++)this[e].textContent=t;return this},r.fn.getAttr=function(t){if(!t)throw new Error("First parameter of z#getAttr is required");return this[0]&&this[0].getAttribute(t)},r.fn.setAttr=h(function(t,e){if(!t)throw new Error("First parameter of z#setAttr is required");if(void 0===e)throw new Error("Second parameter of z#setAttr is required");return this.setAttribute(t,e),this}),r.fn.attr=function(t,e){return void 0===e?this.getAttr(t):(this.setAttr(t,e),this)},r.fn.replaceWith=r.fn.replace=h(function(t){if(void 0===t)throw new Error("First parameter of z#replace is required");this.outerHTML=t}),"classList"in e.documentElement?(r.fn.addClass=h(function(t){this.classList.add(t)}),r.fn.removeClass=h(function(t){this.classList.remove(t)}),r.fn.toggleClass=h(function(t,e){return void 0===e?void this.classList.toggle(t):void this.classList[e?"add":"remove"](t)})):(r.fn.addClass=h(function(t){this.className+=" "+t}),r.fn.removeClass=h(function(t){this.className+=this.className.replace(new RegExp("(^|\\b)"+t+"(\\b|$)","g")," ")}),r.fn.toggleClass=function(t,e){return this[e?"addClass":"removeClass"](t),this}),r.fn.append=function(t){var e=0,r=this.length;if(void 0===t)throw new Error("First parameter of z#append is required.");if("string"==typeof t){for(;r>e;e++)this[e].insertAdjacentHTML("beforeend",t);return this}for(t instanceof m&&(t=t[0]);r>e;e++)this[e].appendChild(t);return this},r.fn.prepend=function(t){var e=0,r=this.length;if(void 0===t)throw new Error("First parameter of z#prepend is required.");if("string"==typeof t){for(;r>e;e++)this[e].insertAdjacentHTML("afterbegin",t);return this}for(t instanceof m&&(t=t[0]);r>e;e++)this[e].insertBefore(t,this[e].firstChild);return this},r.fn.after=function(t){var e=0,r=this.length;if(void 0===t)throw new Error("First parameter of z#append is required.");if("string"==typeof t){for(;r>e;e++)this[e].insertAdjacentHTML("afterend",t);return this}for(t instanceof m&&(t=t[0]);r>e;e++)this[e].insertAdjacentHTML("afterend",t.outerHTML);return this},r.fn.css=function(t,e){var r=0,n=this.length;if(void 0===t)throw new Error("First parameter of z#css is required.");if(void 0===e)return getComputedStyle(this[0])[t];for(t=t.replace(/-./g,function(t){return t.substr(1).toUpperCase()});n>r;r++)this[r].style[t]=e;return this},r.fn.remove=h(function(){this.parentNode.removeChild(this)}),r.fn.empty=h(function(){this.innerHTML=""});var S,b={};r.registerSelector=function(t,e){if(!t||"string"!=typeof t)throw new Error("First parameter of z#registerSelector must be a string selector");if(!e||"function"!=typeof e)throw new Error("Second parameter of z#registerSelector must be a function");":"!==t[0]&&(t=":"+t),S=!1,b[t]=e},r.registerSelector(":first",function(t){return r(this.querySelector(t))}),r.registerSelector(":input",function(){function t(t){return~e.indexOf(t.tagName)}var e="INPUT,TEXTAREA,SELECT,BUTTON".split(",");return function(e){var r=new m;return r.push.apply(r,[].filter.call(this.querySelectorAll(e),t)),r}}()),r.fn.parent=p(function(){return this.parentNode}),r.fn.next=p(function(){return this.nextElementSibling}),r.fn.prev=r.fn.previous=p(function(){return this.previousElementSibling}),r.fn.siblings=p(function(){return[].filter.call(this.parentNode.children,function(t){return t!==this},this)}),r.fn.prevAll=p(function(){return d(this,"previousElementSibling")}),r.deepExtend=function A(t){var e,r,n=2;for("object"==typeof t?(r=t||{},t=1/0):(t=t===!0?1/0:0|t,r=arguments[1]||{});n<arguments.length;n++)if(e=arguments[n])for(var i in e)e.hasOwnProperty(i)&&(t&&"object"==typeof e[i]?A(t-1,r[i],e[i]):r[i]=e[i]);return r},r.extend=function(){return[].unshift.call(arguments,0),r.deepExtend.apply(null,arguments)},r.fn.each=h(function(t){return t.call(this,this),this}),r.queryString=function(t,e){var n,i,o,s=[];for(n in t)t.hasOwnProperty(n)&&(i=e?e+"["+n+"]":n,o=t[n],s.push(o&&"object"==typeof o?r.queryString(o,i):encodeURIComponent(i)+"="+encodeURIComponent(o)));return s.join("&")}}(window,document);
//# sourceMappingURL=data:application/json;base64,