!function(t,e){function n(t,e){if(t instanceof l)return t;if(t instanceof EventTarget)return new l(t);if(void 0===t||null===t)return new l;if("string"!=typeof t)throw new Error("First parameter is invalid");if(e){if(!u(e))throw new Error("Second parameter is invalid");e=n(e)}else e=p;return s(e,t)}function r(t,e){return e.call(t,t)}function i(t,e){return t===e}function s(t,e){var n=new l;return t.forEach(function(t){n.push.apply(n,o(t,e))}),n}function o(t,e){return~e.indexOf(":")&&void 0!==m?(m===!1&&f(),e.match(m)?a(t,e):t.querySelectorAll(e)):t.querySelectorAll(e)}function a(t,e){for(var n,r,i=new l(t),s="",o=e.split(/\s+/);n=o.shift();)r=n.match(m),r?(s+=n.replace(m,"")||"*",n=new l,i.forEach(function(t){var e=new l;r.forEach(function(n){e.push.apply(e,y[n].call(t,s))}),n.push.apply(n,e)}),i=n,s=""):s+=n+" ";return s&&(n=new l,i.forEach(function(t){n.push.apply(n,t.querySelectorAll(s))}),i=n),i}function f(){var t=Object.keys(y).join("|").replace(/:/g,"");m=new RegExp(":("+t+")","g")}function u(t){return t instanceof l?!0:t instanceof EventTarget?!0:"string"==typeof t?!0:void 0}function c(t){return function(){for(var e=0,n=this.length;n>e;e++)t.apply(this[e],arguments);return this}}function h(t){return function(){for(var e,n=0,r=this.length,i=new l;r>n;n++)e=t.apply(this[n],arguments),e&&(Array.isArray(e)&&e.length?i.push.apply(i,e):i.push(e));return i}}var l,d,p,v;try{v=e.createElement("iframe"),v.style.width=0,v.style.height=0,v.style.borderStyle="none",e.body.appendChild(v),l=v.contentWindow.Array,e.body.removeChild(v)}catch(g){l=Array}t.z=n,n.fn=l.prototype,d=n(t),p=n(e),n.fn.find=function(t){if("string"!=typeof t)throw new Error("First paramater of z#find() should be a string");return s(this,t)},n.fn.data="dataset"in e.body?function(t,e){var n,r;if(this.length){if(void 0===t)return this[0].dataset;if(void 0===e)return this[0].dataset[t];for(n=0,r=this.length;r>n;n++)this[n].dataset[t]=e;return this}}:function(t,e){var n,r,i="data-"+(t||"");if(this.length){if(void 0===t)return n={},[].forEach.call(this[0].attributes,function(t){return n[t.name]=t.value}),n;if(void 0===e)return this[0].attributes[i];for(n=0,r=this.length;r>n;n++)this[n].dataset[i]=e;return this}},n.fn.on=n.fn.bind=c(function(t,e){this.addEventListener(t,e,!1)}),n.fn.off=n.fn.unbind=c(function(t,e){this.removeEventListener(t,e,!1)}),n.fn.trigger=function(t,n){var r,i,s=0,o=this.length;try{i=n?{detail:n}:void 0,r=new CustomEvent(t,i)}catch(a){r=e.createEvent("CustomEvent"),r.initCustomEvent(t,!0,!0,n)}for(;o>s;s++)this[s].dispatchEvent(r);return this},n.fn.is=function(){var t,n=e.body;return t=n.matches||n.matchesSelector||n.msMatchesSelector,t=t||n.mozMatchesSelector||n.webkitMatchesSelector||n.oMatchesSelector,function(e){var n,s,o=0,a=this.length;switch(typeof e){case"string":n=t;break;case"function":n=r;break;case"object":if(!(e instanceof EventTarget))throw new Error("First parameter of z#is is invalid");n=i;default:throw new Error("First parameter of z#is is invalid")}for(;a>o;o++)if(s=n(this[o],e))return s;return!1}}(),n.fn.hide=c(function(){return this.style.display="none",this}),n.fn.show=c(function(){return this.style.display="",this}),n.fn.clone=function(t){var e=0;for((void 0===t||null===t)&&(t=!1);e<this.length;e++)this[e]=this[e].cloneNode(t);return this},n.fn.html=function(t){var e,n;if(void 0===t)return this.innerHTML;for(e=0,n=this.length;n>e;e++)this[e].innerHTML=t;return this},n.fn.text=function(t){var e,n;if(void 0===t)return this.textContent;for(e=0,n=this.length;n>e;e++)this[e].textContent=t;return this},n.fn.getAttr=function(t){if(!t)throw new Error("First parameter of z#getAttr is required");return this[0]&&this[0].getAttribute(t)},n.fn.setAttr=c(function(t,e){if(!t)throw new Error("First parameter of z#setAttr is required");if(void 0===e)throw new Error("Second parameter of z#setAttr is required");return this.setAttribute(t,e),this}),n.fn.attr=function(t,e){return void 0===e?this.getAttr(t):(this.setAttr(t,e),this)},n.fn.replaceWith=n.fn.replace=c(function(t){if(void 0===t)throw new Error("First parameter of z#replace is required");this.outerHTML=t}),"classList"in e.documentElement?(n.fn.addClass=c(function(t){this.classList.add(t)}),n.fn.removeClass=c(function(t){this.classList.remove(t)}),n.fn.toggleClass=c(function(t,e){return void 0===e?void this.classList.toggle(t):void this.classList[e?"add":"remove"](t)})):(n.fn.addClass=c(function(t){this.className+=" "+t}),n.fn.removeClass=c(function(t){this.className+=this.className.replace(new RegExp("(^|\\b)"+t+"(\\b|$)","g")," ")}),n.fn.toggleClass=function(t,e){return this[e?"addClass":"removeClass"](t),this}),n.fn.append=function(t){var n,r;if(void 0===t)return this.innerHTML;for(n=0,r=this.length;r>n;n++)this[n].appendChild(e.createElement(t));return this};var m,y={};n.registerSelector=function(t,e){if(!t||"string"!=typeof t)throw new Error("First parameter of z#registerSelector must be a string selector");if(!e||"function"!=typeof e)throw new Error("Second parameter of z#registerSelector must be a function");":"!==t[0]&&(t=":"+t),m=!1,y[t]=e},n.registerSelector(":first",function(t){return n(this.querySelector(t))}),n.registerSelector(":input",function(){function t(t){return~e.indexOf(t.tagName)}var e="INPUT,TEXTAREA,SELECT,BUTTON".split(",");return function(e){var n=new l;return n.push.apply(n,[].filter.call(this.querySelectorAll(e),t)),n}}()),n.fn.parent=h(function(){return this.parentNode}),n.fn.next=h(function(){return this.nextElementSibling}),n.fn.prev=n.fn.previous=h(function(){return this.previousElementSibling}),n.fn.siblings=h(function(){return[].filter.call(this.parentNode.children,function(t){return t!==this},this)}),n.deepExtend=function w(t){var e,n,r=2;for("object"==typeof t?(n=t||{},t=1/0):(t=t===!0?1/0:0|t,n=arguments[1]||{});r<arguments.length;r++)if(e=arguments[r])for(var i in e)e.hasOwnProperty(i)&&(t&&"object"==typeof e[i]?w(t-1,n[i],e[i]):n[i]=e[i]);return n},n.extend=function(){return[].unshift.call(arguments,0),n.deepExtend.apply(null,arguments)},n.fn.each=c(function(t){return t.call(this,this),this})}(window,document);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiei5zbS5taW4uanMiLCJzb3VyY2VzIjpbIl9oZWFkZXIuanMiLCJfYmFzZS5qcyIsImRhdGEuanMiLCJldmVudHMuanMiLCJmaWx0ZXJpbmcuanMiLCJtYW5pcHVsYXRpb24uanMiLCJzZWxlY3RvcnMuanMiLCJzZWxlY3RvcnNfY3VzdG9tLmpzIiwidHJhdmVyc2luZy5qcyIsInV0aWxzLmpzIiwiX2Zvb3Rlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FVQSxTQUFBLEVBQUEsR0NSQSxRQUFBLEdBQUEsRUFBQSxHQUNBLEdBQUEsWUFBQSxHQUNBLE1BQUEsRUFDQSxJQUFBLFlBQUEsYUFDQSxNQUFBLElBQUEsR0FBQSxFQUNBLElBQUEsU0FBQSxHQUFBLE9BQUEsRUFDQSxNQUFBLElBQUEsRUFDQSxJQUFBLGdCQUFBLEdBQ0EsS0FBQSxJQUFBLE9BQUEsNkJBR0EsSUFBQSxFQUFBLENBQ0EsSUFBQSxFQUFBLEdBQ0EsS0FBQSxJQUFBLE9BQUEsOEJBR0EsR0FBQSxFQUFBLE9BRUEsR0FBQSxDQUdBLE9BQUEsR0FBQSxFQUFBLEdDdkJBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsTUFBQSxHQUFBLEtBQUEsRUFBQSxHQUdBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsTUFBQSxLQUFBLEVDRkEsUUFBQSxHQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsR0FBQSxFQU1BLE9BSkEsR0FBQSxRQUFBLFNBQUEsR0FDQSxFQUFBLEtBQUEsTUFBQSxFQUFBLEVBQUEsRUFBQSxNQUdBLEVBR0EsUUFBQSxHQUFBLEVBQUEsR0FDQSxPQUFBLEVBQUEsUUFBQSxNQUFBLFNBQUEsR0FJQSxLQUFBLEdBQ0EsSUFHQSxFQUFBLE1BQUEsR0FJQSxFQUFBLEVBQUEsR0FIQSxFQUFBLGlCQUFBLElBUkEsRUFBQSxpQkFBQSxHQWNBLFFBQUEsR0FBQSxFQUFBLEdBTUEsSUFMQSxHQUFBLEdBQUEsRUFDQSxFQUFBLEdBQUEsR0FBQSxHQUNBLEVBQUEsR0FDQSxFQUFBLEVBQUEsTUFBQSxPQUVBLEVBQUEsRUFBQSxTQUNBLEVBQUEsRUFBQSxNQUFBLEdBRUEsR0FLQSxHQUFBLEVBQUEsUUFBQSxFQUFBLEtBQUEsSUFDQSxFQUFBLEdBQUEsR0FFQSxFQUFBLFFBQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxHQUFBLEVBRUEsR0FBQSxRQUFBLFNBQUEsR0FDQSxFQUFBLEtBQUEsTUFBQSxFQUFBLEVBQUEsR0FBQSxLQUFBLEVBQUEsTUFHQSxFQUFBLEtBQUEsTUFBQSxFQUFBLEtBR0EsRUFBQSxFQUNBLEVBQUEsSUFsQkEsR0FBQSxFQUFBLEdBK0JBLE9BVkEsS0FDQSxFQUFBLEdBQUEsR0FFQSxFQUFBLFFBQUEsU0FBQSxHQUNBLEVBQUEsS0FBQSxNQUFBLEVBQUEsRUFBQSxpQkFBQSxNQUdBLEVBQUEsR0FHQSxFQUdBLFFBQUEsS0FDQSxHQUFBLEdBQUEsT0FBQSxLQUFBLEdBQUEsS0FBQSxLQUFBLFFBQUEsS0FBQSxHQUNBLEdBQUEsR0FBQSxRQUFBLEtBQUEsRUFBQSxJQUFBLEtDM0VBLFFBQUEsR0FBQSxHQUNBLE1BQUEsYUFBQSxJQUNBLEVBR0EsWUFBQSxjQUNBLEVBR0EsZ0JBQUEsSUFDQSxFQURBLE9BS0EsUUFBQSxHQUFBLEdBQ0EsTUFBQSxZQUlBLElBSEEsR0FBQSxHQUFBLEVBQ0EsRUFBQSxLQUFBLE9BRUEsRUFBQSxFQUFBLElBQ0EsRUFBQSxNQUFBLEtBQUEsR0FBQSxVQUdBLE9BQUEsT0FJQSxRQUFBLEdBQUEsR0FDQSxNQUFBLFlBTUEsSUFMQSxHQUFBLEdBQ0EsRUFBQSxFQUNBLEVBQUEsS0FBQSxPQUNBLEVBQUEsR0FBQSxHQUVBLEVBQUEsRUFBQSxJQUNBLEVBQUEsRUFBQSxNQUFBLEtBQUEsR0FBQSxXQUVBLElBQ0EsTUFBQSxRQUFBLElBQUEsRUFBQSxPQUNBLEVBQUEsS0FBQSxNQUFBLEVBQUEsR0FFQSxFQUFBLEtBQUEsR0FLQSxPQUFBLElIOUNBLEdBQUEsR0FBQSxFQUFBLEVBQUEsQ0EwQkEsS0FDQSxFQUFBLEVBQUEsY0FBQSxVQUVBLEVBQUEsTUFBQSxNQUFBLEVBQ0EsRUFBQSxNQUFBLE9BQUEsRUFDQSxFQUFBLE1BQUEsWUFBQSxPQUVBLEVBQUEsS0FBQSxZQUFBLEdBRUEsRUFBQSxFQUFBLGNBQUEsTUFFQSxFQUFBLEtBQUEsWUFBQSxHQUNBLE1BQUEsR0FDQSxFQUFBLE1BSUEsRUFBQSxFQUFBLEVBQ0EsRUFBQSxHQUFBLEVBQUEsVUFDQSxFQUFBLEVBQUEsR0FDQSxFQUFBLEVBQUEsR0FFQSxFQUFBLEdBQUEsS0FBQSxTQUFBLEdBQ0EsR0FBQSxnQkFBQSxHQUNBLEtBQUEsSUFBQSxPQUFBLGlEQUdBLE9BQUEsR0FBQSxLQUFBLElJcERBLEVBQUEsR0FBQSxLQURBLFdBQUEsR0FBQSxLQUNBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxDQUVBLElBQUEsS0FBQSxPQUFBLENBSUEsR0FBQSxTQUFBLEVBQ0EsTUFBQSxNQUFBLEdBQUEsT0FDQSxJQUFBLFNBQUEsRUFDQSxNQUFBLE1BQUEsR0FBQSxRQUFBLEVBR0EsS0FBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLE9BQUEsRUFBQSxFQUFBLElBQ0EsS0FBQSxHQUFBLFFBQUEsR0FBQSxDQUdBLE9BQUEsUUFHQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsRUFDQSxFQUFBLFNBQUEsR0FBQSxHQUVBLElBQUEsS0FBQSxPQUFBLENBSUEsR0FBQSxTQUFBLEVBT0EsTUFOQSxTQUVBLFFBQUEsS0FBQSxLQUFBLEdBQUEsV0FBQSxTQUFBLEdBQ0EsTUFBQSxHQUFBLEVBQUEsTUFBQSxFQUFBLFFBR0EsQ0FDQSxJQUFBLFNBQUEsRUFDQSxNQUFBLE1BQUEsR0FBQSxXQUFBLEVBR0EsS0FBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLE9BQUEsRUFBQSxFQUFBLElBQ0EsS0FBQSxHQUFBLFFBQUEsR0FBQSxDQUdBLE9BQUEsUUM3Q0EsRUFBQSxHQUFBLEdBQUEsRUFBQSxHQUFBLEtBQUEsRUFBQSxTQUFBLEVBQUEsR0FDQSxLQUFBLGlCQUFBLEVBQUEsR0FBQSxLQUdBLEVBQUEsR0FBQSxJQUFBLEVBQUEsR0FBQSxPQUFBLEVBQUEsU0FBQSxFQUFBLEdBQ0EsS0FBQSxvQkFBQSxFQUFBLEdBQUEsS0FHQSxFQUFBLEdBQUEsUUFBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsRUFDQSxFQUFBLEVBQ0EsRUFBQSxLQUFBLE1BRUEsS0FDQSxFQUFBLEdBQUEsT0FBQSxHQUFBLE9BQ0EsRUFBQSxHQUFBLGFBQUEsRUFBQSxHQUNBLE1BQUEsR0FDQSxFQUFBLEVBQUEsWUFBQSxlQUNBLEVBQUEsZ0JBQUEsR0FBQSxHQUFBLEVBQUEsR0FHQSxLQUFBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxjQUFBLEVBR0EsT0FBQSxPSmpCQSxFQUFBLEdBQUEsR0FBQSxXQUNBLEdBQUEsR0FDQSxFQUFBLEVBQUEsSUFLQSxPQUhBLEdBQUEsRUFBQSxTQUFBLEVBQUEsaUJBQUEsRUFBQSxrQkFDQSxFQUFBLEdBQUEsRUFBQSxvQkFBQSxFQUFBLHVCQUFBLEVBQUEsaUJBRUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxFQUNBLEVBQUEsRUFDQSxFQUFBLEtBQUEsTUFFQSxjQUFBLElBQ0EsSUFBQSxTQUNBLEVBQUEsQ0FDQSxNQUVBLEtBQUEsV0FDQSxFQUFBLENBQ0EsTUFFQSxLQUFBLFNBQ0EsS0FBQSxZQUFBLGNBR0EsS0FBQSxJQUFBLE9BQUEscUNBRkEsR0FBQSxDQUlBLFNBQ0EsS0FBQSxJQUFBLE9BQUEsc0NBSUEsS0FBQSxFQUFBLEVBQUEsSUFHQSxHQUZBLEVBQUEsRUFBQSxLQUFBLEdBQUEsR0FHQSxNQUFBLEVBSUEsUUFBQSxNS2hEQSxFQUFBLEdBQUEsS0FBQSxFQUFBLFdBRUEsTUFEQSxNQUFBLE1BQUEsUUFBQSxPQUNBLE9BR0EsRUFBQSxHQUFBLEtBQUEsRUFBQSxXQUVBLE1BREEsTUFBQSxNQUFBLFFBQUEsR0FDQSxPQUdBLEVBQUEsR0FBQSxNQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsQ0FNQSxNQUpBLFNBQUEsR0FBQSxPQUFBLEtBQ0EsR0FBQSxHQUdBLEVBQUEsS0FBQSxPQUFBLElBQ0EsS0FBQSxHQUFBLEtBQUEsR0FBQSxVQUFBLEVBR0EsT0FBQSxPQUdBLEVBQUEsR0FBQSxLQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsQ0FFQSxJQUFBLFNBQUEsRUFDQSxNQUFBLE1BQUEsU0FHQSxLQUFBLEVBQUEsRUFBQSxFQUFBLEtBQUEsT0FBQSxFQUFBLEVBQUEsSUFDQSxLQUFBLEdBQUEsVUFBQSxDQUdBLE9BQUEsT0FHQSxFQUFBLEdBQUEsS0FBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLENBRUEsSUFBQSxTQUFBLEVBQ0EsTUFBQSxNQUFBLFdBR0EsS0FBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLE9BQUEsRUFBQSxFQUFBLElBQ0EsS0FBQSxHQUFBLFlBQUEsQ0FHQSxPQUFBLE9BR0EsRUFBQSxHQUFBLFFBQUEsU0FBQSxHQUNBLElBQUEsRUFDQSxLQUFBLElBQUEsT0FBQSwyQ0FHQSxPQUFBLE1BQUEsSUFBQSxLQUFBLEdBQUEsYUFBQSxJQUdBLEVBQUEsR0FBQSxRQUFBLEVBQUEsU0FBQSxFQUFBLEdBQ0EsSUFBQSxFQUNBLEtBQUEsSUFBQSxPQUFBLDJDQUNBLElBQUEsU0FBQSxFQUNBLEtBQUEsSUFBQSxPQUFBLDRDQUlBLE9BREEsTUFBQSxhQUFBLEVBQUEsR0FDQSxPQUdBLEVBQUEsR0FBQSxLQUFBLFNBQUEsRUFBQSxHQUNBLE1BQUEsVUFBQSxFQUNBLEtBQUEsUUFBQSxJQUdBLEtBQUEsUUFBQSxFQUFBLEdBQ0EsT0FHQSxFQUFBLEdBQUEsWUFBQSxFQUFBLEdBQUEsUUFBQSxFQUFBLFNBQUEsR0FDQSxHQUFBLFNBQUEsRUFDQSxLQUFBLElBQUEsT0FBQSwyQ0FHQSxNQUFBLFVBQUEsSUFHQSxhQUFBLEdBQUEsaUJBQ0EsRUFBQSxHQUFBLFNBQUEsRUFBQSxTQUFBLEdBQ0EsS0FBQSxVQUFBLElBQUEsS0FHQSxFQUFBLEdBQUEsWUFBQSxFQUFBLFNBQUEsR0FDQSxLQUFBLFVBQUEsT0FBQSxLQUdBLEVBQUEsR0FBQSxZQUFBLEVBQUEsU0FBQSxFQUFBLEdBQ0EsTUFBQSxVQUFBLE1BQ0EsTUFBQSxVQUFBLE9BQUEsT0FJQSxNQUFBLFVBQUEsRUFBQSxNQUFBLFVBQUEsT0FHQSxFQUFBLEdBQUEsU0FBQSxFQUFBLFNBQUEsR0FDQSxLQUFBLFdBQUEsSUFBQSxJQUdBLEVBQUEsR0FBQSxZQUFBLEVBQUEsU0FBQSxHQUNBLEtBQUEsV0FBQSxLQUFBLFVBQUEsUUFBQSxHQUFBLFFBQUEsVUFBQSxFQUFBLFVBQUEsS0FBQSxPQUdBLEVBQUEsR0FBQSxZQUFBLFNBQUEsRUFBQSxHQUVBLE1BREEsTUFBQSxFQUFBLFdBQUEsZUFBQSxHQUNBLE9BSUEsRUFBQSxHQUFBLE9BQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxDQUVBLElBQUEsU0FBQSxFQUNBLE1BQUEsTUFBQSxTQUdBLEtBQUEsRUFBQSxFQUFBLEVBQUEsS0FBQSxPQUFBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxZQUFBLEVBQUEsY0FBQSxHQUdBLE9BQUEsTUpuSUEsSUFBQSxHQUNBLElLREEsR0FBQSxpQkFBQSxTQUFBLEVBQUEsR0FDQSxJQUFBLEdBQUEsZ0JBQUEsR0FDQSxLQUFBLElBQUEsT0FBQSxrRUFDQSxLQUFBLEdBQUEsa0JBQUEsR0FDQSxLQUFBLElBQUEsT0FBQSw0REFHQSxPQUFBLEVBQUEsS0FDQSxFQUFBLElBQUEsR0FHQSxHQUFBLEVBQ0EsRUFBQSxHQUFBLEdBR0EsRUFBQSxpQkFBQSxTQUFBLFNBQUEsR0FDQSxNQUFBLEdBQUEsS0FBQSxjQUFBLE1BR0EsRUFBQSxpQkFBQSxTQUFBLFdBR0EsUUFBQSxHQUFBLEdBQ0EsT0FBQSxFQUFBLFFBQUEsRUFBQSxTQUhBLEdBQUEsR0FBQSwrQkFBQSxNQUFBLElBTUEsT0FBQSxVQUFBLEdBQ0EsR0FBQSxHQUFBLEdBQUEsRUFJQSxPQUZBLEdBQUEsS0FBQSxNQUFBLEtBQUEsT0FBQSxLQUFBLEtBQUEsaUJBQUEsR0FBQSxJQUVBLE9DL0JBLEVBQUEsR0FBQSxPQUFBLEVBQUEsV0FDQSxNQUFBLE1BQUEsYUFHQSxFQUFBLEdBQUEsS0FBQSxFQUFBLFdBQ0EsTUFBQSxNQUFBLHFCQUdBLEVBQUEsR0FBQSxLQUFBLEVBQUEsR0FBQSxTQUFBLEVBQUEsV0FDQSxNQUFBLE1BQUEseUJBR0EsRUFBQSxHQUFBLFNBQUEsRUFBQSxXQUNBLFNBQUEsT0FBQSxLQUFBLEtBQUEsV0FBQSxTQUFBLFNBQUEsR0FDQSxNQUFBLEtBQUEsTUFDQSxRTG1DQSxFQUFBLFdBQUEsUUFBQSxHQUFBLEdBQ0EsR0FBQSxHQUFBLEVBQ0EsRUFBQSxDQVVBLEtBUkEsZ0JBQUEsSUFDQSxFQUFBLE1BQ0EsRUFBQSxNQUVBLEVBQUEsS0FBQSxFQUFBLElBQUEsRUFBQSxFQUNBLEVBQUEsVUFBQSxRQUdBLEVBQUEsVUFBQSxPQUFBLElBR0EsR0FGQSxFQUFBLFVBQUEsR0FNQSxJQUFBLEdBQUEsS0FBQSxHQUNBLEVBQUEsZUFBQSxLQUNBLEdBQUEsZ0JBQUEsR0FBQSxHQUNBLEVBQUEsRUFBQSxFQUFBLEVBQUEsR0FBQSxFQUFBLElBRUEsRUFBQSxHQUFBLEVBQUEsR0FNQSxPQUFBLElBR0EsRUFBQSxPQUFBLFdBRUEsU0FEQSxRQUFBLEtBQUEsVUFBQSxHQUNBLEVBQUEsV0FBQSxNQUFBLEtBQUEsWUFHQSxFQUFBLEdBQUEsS0FBQSxFQUFBLFNBQUEsR0FFQSxNQURBLEdBQUEsS0FBQSxLQUFBLE1BQ0EsUU0xRkEsT0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogei5qcyBKYXZhU2NyaXB0IExpYnJhcnkgdkBWRVJTSU9OXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTkVVUlMvei5qc1xuICpcbiAqIENvcHlyaWdodCAyMDE0IE5FVVJTIExMQywgS2V2aW4gSi4gTWFydGluLCBhbmQgb3RoZXIgY29udHJpYnV0b3JzXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ORVVSUy96LmpzL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqXG4gKiBEYXRlOiBAREFURVxuICovXG47KGZ1bmN0aW9uICh3aW5kb3csIGRvY3VtZW50KSB7XG4iLCJ2YXIgekFycmF5LCBfd2luZG93LCBfZG9jdW1lbnQsIGlmcmFtZTtcblxuZnVuY3Rpb24geihlbGVtLCBzY29wZSkge1xuXHRpZiAoZWxlbSBpbnN0YW5jZW9mIHpBcnJheSkge1xuXHRcdHJldHVybiBlbGVtO1xuXHR9IGVsc2UgaWYgKGVsZW0gaW5zdGFuY2VvZiBFdmVudFRhcmdldCkge1xuXHRcdHJldHVybiBuZXcgekFycmF5KGVsZW0pO1xuXHR9IGVsc2UgaWYgKGVsZW0gPT09IHVuZGVmaW5lZCB8fCBlbGVtID09PSBudWxsKSB7XG5cdFx0cmV0dXJuIG5ldyB6QXJyYXkoKTtcblx0fSBlbHNlIGlmICh0eXBlb2YgZWxlbSAhPT0gXCJzdHJpbmdcIikge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkZpcnN0IHBhcmFtZXRlciBpcyBpbnZhbGlkXCIpO1xuXHR9XG5cblx0aWYgKHNjb3BlKSB7XG5cdFx0aWYgKCFfY2hlY2tWYWxpZEVsZW1lbnQoc2NvcGUpKSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJTZWNvbmQgcGFyYW1ldGVyIGlzIGludmFsaWRcIik7XG5cdFx0fVxuXG5cdFx0c2NvcGUgPSB6KHNjb3BlKTtcblx0fSBlbHNlIHtcblx0XHRzY29wZSA9IF9kb2N1bWVudDtcblx0fVxuXG5cdHJldHVybiBfZmluZChzY29wZSwgZWxlbSk7XG59XG5cbnRyeSB7XG5cdGlmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7XG5cblx0aWZyYW1lLnN0eWxlLndpZHRoXHRcdFx0PSAwO1xuXHRpZnJhbWUuc3R5bGUuaGVpZ2h0XHRcdFx0PSAwO1xuXHRpZnJhbWUuc3R5bGUuYm9yZGVyU3R5bGVcdD0gXCJub25lXCI7XG5cblx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuXG5cdHpBcnJheSA9IGlmcmFtZS5jb250ZW50V2luZG93LkFycmF5O1xuXG5cdGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbn0gY2F0Y2ggKGUpIHtcblx0ekFycmF5ID0gQXJyYXk7XG59XG5cbi8vd2luZG93LiRcdD0gejtcbndpbmRvdy56XHQ9IHo7XG56LmZuXHRcdD0gekFycmF5LnByb3RvdHlwZTtcbl93aW5kb3dcdFx0PSB6KHdpbmRvdyk7XG5fZG9jdW1lbnRcdD0geihkb2N1bWVudCk7XG5cbnouZm4uZmluZCA9IGZ1bmN0aW9uIChzdHJFbGVtKSB7XG5cdGlmICh0eXBlb2Ygc3RyRWxlbSAhPT0gXCJzdHJpbmdcIikge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkZpcnN0IHBhcmFtYXRlciBvZiB6I2ZpbmQoKSBzaG91bGQgYmUgYSBzdHJpbmdcIik7XG5cdH1cblxuXHRyZXR1cm4gX2ZpbmQodGhpcywgc3RyRWxlbSk7XG59OyIsImlmIChcImRhdGFzZXRcIiBpbiBkb2N1bWVudC5ib2R5KSB7XG5cdHouZm4uZGF0YSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdFx0dmFyIGksIGw7XG5cblx0XHRpZiAoIXRoaXMubGVuZ3RoKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKGtleSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRyZXR1cm4gdGhpc1swXS5kYXRhc2V0O1xuXHRcdH0gZWxzZSBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0cmV0dXJuIHRoaXNbMF0uZGF0YXNldFtrZXldO1xuXHRcdH1cblxuXHRcdGZvciAoaSA9IDAsIGwgPSB0aGlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuXHRcdFx0dGhpc1tpXS5kYXRhc2V0W2tleV0gPSB2YWx1ZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fTtcbn0gZWxzZSB7XG5cdHouZm4uZGF0YSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdFx0dmFyIGksIGwsXG5cdFx0XHRkYXRhS2V5ID0gXCJkYXRhLVwiICsgKGtleSB8fCBcIlwiKTtcblxuXHRcdGlmICghdGhpcy5sZW5ndGgpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoa2V5ID09PSB1bmRlZmluZWQpIHtcblx0XHRcdGkgPSB7fTtcblxuXHRcdFx0W10uZm9yRWFjaC5jYWxsKHRoaXNbMF0uYXR0cmlidXRlcywgZnVuY3Rpb24gKGF0dHIpIHtcblx0XHRcdFx0cmV0dXJuIGlbYXR0ci5uYW1lXSA9IGF0dHIudmFsdWU7XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIGk7XG5cdFx0fSBlbHNlIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRyZXR1cm4gdGhpc1swXS5hdHRyaWJ1dGVzW2RhdGFLZXldO1xuXHRcdH1cblxuXHRcdGZvciAoaSA9IDAsIGwgPSB0aGlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuXHRcdFx0dGhpc1tpXS5kYXRhc2V0W2RhdGFLZXldID0gdmFsdWU7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH07XG59XG4iLCJ6LmZuLm9uID0gei5mbi5iaW5kID0gX2VhY2goZnVuY3Rpb24gX29uKGV2ZW50VHlwZSwgZm4pIHtcblx0dGhpcy5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgZm4sIGZhbHNlKTtcbn0pO1xuXG56LmZuLm9mZiA9IHouZm4udW5iaW5kID0gX2VhY2goZnVuY3Rpb24gX29mZihldmVudFR5cGUsIGZuKSB7XG5cdHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGZuLCBmYWxzZSk7XG59KTtcblxuei5mbi50cmlnZ2VyID0gZnVuY3Rpb24gKGV2ZW50VHlwZSwgZGF0YSkge1xuXHR2YXIgZXZlbnQsIF9kYXRhLFxuXHRcdGkgPSAwLFxuXHRcdGwgPSB0aGlzLmxlbmd0aDtcblxuXHR0cnkge1xuXHRcdF9kYXRhXHQ9IGRhdGEgPyB7ZGV0YWlsOiBkYXRhfSA6IHVuZGVmaW5lZDtcblx0XHRldmVudFx0PSBuZXcgQ3VzdG9tRXZlbnQoZXZlbnRUeXBlLCBfZGF0YSk7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50Jyk7XG5cdFx0ZXZlbnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50VHlwZSwgdHJ1ZSwgdHJ1ZSwgZGF0YSk7XG5cdH1cblxuXHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdHRoaXNbaV0uZGlzcGF0Y2hFdmVudChldmVudCk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG4iLCJmdW5jdGlvbiBfaXNXaXRoRnVuY3Rpb24oZWxlbSwgZm4pIHtcblx0cmV0dXJuIGZuLmNhbGwoZWxlbSwgZWxlbSk7XG59XG5cbmZ1bmN0aW9uIF9pc1dpdGhFbGVtZW50KGVsZW0xLCBlbGVtMikge1xuXHRyZXR1cm4gZWxlbTEgPT09IGVsZW0yO1xufVxuXG56LmZuLmlzID0gKGZ1bmN0aW9uIF9pcygpIHtcblx0dmFyIG1hdGNoZXMsXG5cdFx0Ym9keSA9IGRvY3VtZW50LmJvZHk7XG5cblx0bWF0Y2hlc1x0PSBib2R5Lm1hdGNoZXMgfHwgYm9keS5tYXRjaGVzU2VsZWN0b3IgfHwgYm9keS5tc01hdGNoZXNTZWxlY3Rvcjtcblx0bWF0Y2hlcyA9IG1hdGNoZXMgfHwgYm9keS5tb3pNYXRjaGVzU2VsZWN0b3IgfHwgYm9keS53ZWJraXRNYXRjaGVzU2VsZWN0b3IgfHwgYm9keS5vTWF0Y2hlc1NlbGVjdG9yO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoc2VsZWN0b3IpIHtcblx0XHR2YXIgX2lzV2l0aCwgcmV0LFxuXHRcdFx0aVx0PSAwLFxuXHRcdFx0bFx0PSB0aGlzLmxlbmd0aDtcblxuXHRcdHN3aXRjaCAodHlwZW9mIHNlbGVjdG9yKSB7XG5cdFx0XHRjYXNlIFwic3RyaW5nXCI6XG5cdFx0XHRcdF9pc1dpdGggPSBtYXRjaGVzO1xuXHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgXCJmdW5jdGlvblwiOlxuXHRcdFx0XHRfaXNXaXRoID0gX2lzV2l0aEZ1bmN0aW9uO1xuXHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgXCJvYmplY3RcIjpcblx0XHRcdFx0aWYgKHNlbGVjdG9yIGluc3RhbmNlb2YgRXZlbnRUYXJnZXQpIHtcblx0XHRcdFx0XHRfaXNXaXRoID0gX2lzV2l0aEVsZW1lbnQ7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIG9mIHojaXMgaXMgaW52YWxpZFwiKTtcblx0XHRcdFx0fVxuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIG9mIHojaXMgaXMgaW52YWxpZFwiKTtcblx0XHRcdGJyZWFrO1xuXHRcdH1cblxuXHRcdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHRyZXQgPSBfaXNXaXRoKHRoaXNbaV0sIHNlbGVjdG9yKTtcblxuXHRcdFx0aWYgKHJldCkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBmYWxzZTtcblx0fTtcbn0pKCk7XG4iLCJ6LmZuLmhpZGUgPSBfZWFjaChmdW5jdGlvbiBoaWRlKCkge1xuXHR0aGlzLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcblx0cmV0dXJuIHRoaXM7XG59KTtcblxuei5mbi5zaG93ID0gX2VhY2goZnVuY3Rpb24gc2hvdygpIHtcblx0dGhpcy5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcblx0cmV0dXJuIHRoaXM7XG59KTtcblxuei5mbi5jbG9uZSA9IGZ1bmN0aW9uIChkZWVwKSB7XG5cdHZhciBpID0gMDtcblxuXHRpZiAoZGVlcCA9PT0gdW5kZWZpbmVkIHx8IGRlZXAgPT09IG51bGwpIHtcblx0XHRkZWVwID0gZmFsc2U7XG5cdH1cblxuXHRmb3IgKDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHR0aGlzW2ldID0gdGhpc1tpXS5jbG9uZU5vZGUoZGVlcCk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cbnouZm4uaHRtbCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHR2YXIgaSwgbDtcblxuXHRpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiB0aGlzLmlubmVySFRNTDtcblx0fVxuXG5cdGZvciAoaSA9IDAsIGwgPSB0aGlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuXHRcdHRoaXNbaV0uaW5uZXJIVE1MID0gdmFsdWU7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cbnouZm4udGV4dCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHR2YXIgaSwgbDtcblxuXHRpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiB0aGlzLnRleHRDb250ZW50O1xuXHR9XG5cblx0Zm9yIChpID0gMCwgbCA9IHRoaXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG5cdFx0dGhpc1tpXS50ZXh0Q29udGVudCA9IHZhbHVlO1xuXHR9XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG56LmZuLmdldEF0dHIgPSBmdW5jdGlvbiAoa2V5KSB7XG5cdGlmICgha2V5KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIG9mIHojZ2V0QXR0ciBpcyByZXF1aXJlZFwiKTtcblx0fVxuXG5cdHJldHVybiB0aGlzWzBdICYmIHRoaXNbMF0uZ2V0QXR0cmlidXRlKGtleSk7XG59O1xuXG56LmZuLnNldEF0dHIgPSBfZWFjaChmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuXHRpZiAoIWtleSkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkZpcnN0IHBhcmFtZXRlciBvZiB6I3NldEF0dHIgaXMgcmVxdWlyZWRcIik7XG5cdH0gZWxzZSBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIlNlY29uZCBwYXJhbWV0ZXIgb2YgeiNzZXRBdHRyIGlzIHJlcXVpcmVkXCIpO1xuXHR9XG5cblx0dGhpcy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG5cdHJldHVybiB0aGlzO1xufSk7XG5cbnouZm4uYXR0ciA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIHRoaXMuZ2V0QXR0cihrZXkpO1xuXHR9XG5cblx0dGhpcy5zZXRBdHRyKGtleSwgdmFsdWUpO1xuXHRyZXR1cm4gdGhpcztcbn07XG5cbnouZm4ucmVwbGFjZVdpdGggPSB6LmZuLnJlcGxhY2UgPSBfZWFjaChmdW5jdGlvbiAodmFsdWUpIHtcblx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNyZXBsYWNlIGlzIHJlcXVpcmVkXCIpO1xuXHR9XG5cblx0dGhpcy5vdXRlckhUTUwgPSB2YWx1ZTtcbn0pO1xuXG5pZiAoXCJjbGFzc0xpc3RcIiBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHtcblx0ei5mbi5hZGRDbGFzcyA9IF9lYWNoKGZ1bmN0aW9uIGFkZENsYXNzKGNsYXNzTmFtZSkge1xuXHRcdHRoaXMuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xuXHR9KTtcblxuXHR6LmZuLnJlbW92ZUNsYXNzID0gX2VhY2goZnVuY3Rpb24gcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7XG5cdFx0dGhpcy5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG5cdH0pO1xuXG5cdHouZm4udG9nZ2xlQ2xhc3MgPSBfZWFjaChmdW5jdGlvbiB0b2dnbGVDbGFzcyhjbGFzc05hbWUsIGZvcmNlKSB7XG5cdFx0aWYgKGZvcmNlID09PSB1bmRlZmluZWQpIHtcblx0XHRcdHRoaXMuY2xhc3NMaXN0LnRvZ2dsZShjbGFzc05hbWUpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHRoaXMuY2xhc3NMaXN0W2ZvcmNlID8gXCJhZGRcIiA6IFwicmVtb3ZlXCJdKGNsYXNzTmFtZSk7XG5cdH0pO1xufSBlbHNlIHtcblx0ei5mbi5hZGRDbGFzcyA9IF9lYWNoKGZ1bmN0aW9uIGFkZENsYXNzKGNsYXNzTmFtZSkge1xuXHRcdHRoaXMuY2xhc3NOYW1lICs9IFwiIFwiICsgY2xhc3NOYW1lO1xuXHR9KTtcblxuXHR6LmZuLnJlbW92ZUNsYXNzID0gX2VhY2goZnVuY3Rpb24gcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7XG5cdFx0dGhpcy5jbGFzc05hbWUgKz0gdGhpcy5jbGFzc05hbWUucmVwbGFjZShuZXcgUmVnRXhwKFwiKF58XFxcXGIpXCIgKyBjbGFzc05hbWUgKyBcIihcXFxcYnwkKVwiLCBcImdcIiksIFwiIFwiKTtcblx0fSk7XG5cblx0ei5mbi50b2dnbGVDbGFzcyA9IGZ1bmN0aW9uIChjbGFzc05hbWUsIGZvcmNlKSB7XG5cdFx0dGhpc1tmb3JjZSA/IFwiYWRkQ2xhc3NcIiA6IFwicmVtb3ZlQ2xhc3NcIl0oY2xhc3NOYW1lKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fTtcbn1cblxuei5mbi5hcHBlbmQgPSBmdW5jdGlvbiAodmFsdWUpIHtcblx0dmFyIGksIGw7XG5cblx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gdGhpcy5pbm5lckhUTUw7XG5cdH1cblxuXHRmb3IgKGkgPSAwLCBsID0gdGhpcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcblx0XHR0aGlzW2ldLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodmFsdWUpKTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufVxuIiwidmFyIF9zZWxlY3RvcnNDYWNoZSxcblx0X3NlbGVjdG9ycyA9IHt9O1xuXG5mdW5jdGlvbiBfZmluZChzY29wZSwgc3RyRWxlbSkge1xuXHR2YXIgcmV0ID0gbmV3IHpBcnJheSgpO1xuXG5cdHNjb3BlLmZvckVhY2goZnVuY3Rpb24gX2ZpbmRGb3JFYWNoKHNjb3BlZEVsZW0pIHtcblx0XHRyZXQucHVzaC5hcHBseShyZXQsIF9zZWxlY3Qoc2NvcGVkRWxlbSwgc3RyRWxlbSkpO1xuXHR9KTtcblxuXHRyZXR1cm4gcmV0O1xufVxuXG5mdW5jdGlvbiBfc2VsZWN0KHNjb3BlZEVsZW0sIHN0ckVsZW0pIHtcblx0aWYgKCF+c3RyRWxlbS5pbmRleE9mKFwiOlwiKSB8fCBfc2VsZWN0b3JzQ2FjaGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBzY29wZWRFbGVtLnF1ZXJ5U2VsZWN0b3JBbGwoc3RyRWxlbSk7XG5cdH1cblxuXHRpZiAoX3NlbGVjdG9yc0NhY2hlID09PSBmYWxzZSkge1xuXHRcdF9nZW5lcmF0ZVNlbGVjdG9yc0NhY2hlKCk7XG5cdH1cblxuXHRpZiAoIXN0ckVsZW0ubWF0Y2goX3NlbGVjdG9yc0NhY2hlKSkge1xuXHRcdHJldHVybiBzY29wZWRFbGVtLnF1ZXJ5U2VsZWN0b3JBbGwoc3RyRWxlbSk7XG5cdH1cblxuXHRyZXR1cm4gX3NlbGVjdDIoc2NvcGVkRWxlbSwgc3RyRWxlbSk7XG59XG5cbmZ1bmN0aW9uIF9zZWxlY3QyKHNjb3BlZEVsZW0sIHN0ckVsZW0pIHtcblx0dmFyIGVudHJ5LCBzZWxlY3RvcnMsXG5cdFx0c2NvcGVcdD0gbmV3IHpBcnJheShzY29wZWRFbGVtKSxcblx0XHRjdXJyZW50XHQ9IFwiXCIsXG5cdFx0ZW50cmllc1x0PSBzdHJFbGVtLnNwbGl0KC9cXHMrLyk7XG5cblx0d2hpbGUgKGVudHJ5ID0gZW50cmllcy5zaGlmdCgpKSB7XG5cdFx0c2VsZWN0b3JzID0gZW50cnkubWF0Y2goX3NlbGVjdG9yc0NhY2hlKTtcblxuXHRcdGlmICghc2VsZWN0b3JzKSB7XG5cdFx0XHRjdXJyZW50ICs9IGVudHJ5ICsgXCIgXCI7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRjdXJyZW50XHQrPSBlbnRyeS5yZXBsYWNlKF9zZWxlY3RvcnNDYWNoZSwgXCJcIikgfHwgXCIqXCI7XG5cdFx0ZW50cnlcdD0gbmV3IHpBcnJheSgpO1xuXG5cdFx0c2NvcGUuZm9yRWFjaChmdW5jdGlvbiBfc2VsZWN0Rm9yRWFjaChzY29wZWRFbGVtKSB7XG5cdFx0XHR2YXIgcmV0ID0gbmV3IHpBcnJheSgpO1xuXG5cdFx0XHRzZWxlY3RvcnMuZm9yRWFjaChmdW5jdGlvbiBzZWxlY3RvcnNGb3JFYWNoKHNlbGVjdG9yKSB7XG5cdFx0XHRcdHJldC5wdXNoLmFwcGx5KHJldCwgX3NlbGVjdG9yc1tzZWxlY3Rvcl0uY2FsbChzY29wZWRFbGVtLCBjdXJyZW50KSk7XG5cdFx0XHR9KTtcblxuXHRcdFx0ZW50cnkucHVzaC5hcHBseShlbnRyeSwgcmV0KTtcblx0XHR9KTtcblxuXHRcdHNjb3BlXHQ9IGVudHJ5O1xuXHRcdGN1cnJlbnRcdD0gXCJcIjtcblx0fVxuXG5cdGlmIChjdXJyZW50KSB7XG5cdFx0ZW50cnkgPSBuZXcgekFycmF5KCk7XG5cblx0XHRzY29wZS5mb3JFYWNoKGZ1bmN0aW9uIGN1cnJlbnRGb3JFYWNoKHNjb3BlZEVsZW0pIHtcblx0XHRcdGVudHJ5LnB1c2guYXBwbHkoZW50cnksIHNjb3BlZEVsZW0ucXVlcnlTZWxlY3RvckFsbChjdXJyZW50KSk7XG5cdFx0fSk7XG5cblx0XHRzY29wZSA9IGVudHJ5O1xuXHR9XG5cblx0cmV0dXJuIHNjb3BlO1xufVxuXG5mdW5jdGlvbiBfZ2VuZXJhdGVTZWxlY3RvcnNDYWNoZSgpIHtcblx0dmFyIHNlbGVjdG9yc1x0PSBPYmplY3Qua2V5cyhfc2VsZWN0b3JzKS5qb2luKFwifFwiKS5yZXBsYWNlKC86L2csIFwiXCIpO1xuXHRfc2VsZWN0b3JzQ2FjaGVcdD0gbmV3IFJlZ0V4cChcIjooXCIgKyBzZWxlY3RvcnMgKyBcIilcIiwgXCJnXCIpO1xufVxuIiwiei5yZWdpc3RlclNlbGVjdG9yID0gZnVuY3Rpb24gKHNlbGVjdG9yLCBmbikge1xuXHRpZiAoIXNlbGVjdG9yIHx8IHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIikge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkZpcnN0IHBhcmFtZXRlciBvZiB6I3JlZ2lzdGVyU2VsZWN0b3IgbXVzdCBiZSBhIHN0cmluZyBzZWxlY3RvclwiKTtcblx0fSBlbHNlIGlmICghZm4gfHwgdHlwZW9mIGZuICE9PSBcImZ1bmN0aW9uXCIpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJTZWNvbmQgcGFyYW1ldGVyIG9mIHojcmVnaXN0ZXJTZWxlY3RvciBtdXN0IGJlIGEgZnVuY3Rpb25cIik7XG5cdH1cblxuXHRpZiAoc2VsZWN0b3JbMF0gIT09IFwiOlwiKSB7XG5cdFx0c2VsZWN0b3IgPSBcIjpcIiArIHNlbGVjdG9yO1xuXHR9XG5cblx0X3NlbGVjdG9yc0NhY2hlXHRcdFx0PSBmYWxzZTtcblx0X3NlbGVjdG9yc1tzZWxlY3Rvcl1cdD0gZm47XG59O1xuXG56LnJlZ2lzdGVyU2VsZWN0b3IoXCI6Zmlyc3RcIiwgZnVuY3Rpb24gc2VsZWN0b3JGaXJzdChxdWVyeSkge1xuXHRyZXR1cm4geih0aGlzLnF1ZXJ5U2VsZWN0b3IocXVlcnkpKTtcbn0pO1xuXG56LnJlZ2lzdGVyU2VsZWN0b3IoXCI6aW5wdXRcIiwgKGZ1bmN0aW9uIHNlbGVjdG9yRmlyc3QoKSB7XG5cdHZhciB0YWdzID0gXCJJTlBVVCxURVhUQVJFQSxTRUxFQ1QsQlVUVE9OXCIuc3BsaXQoXCIsXCIpO1xuXG5cdGZ1bmN0aW9uIGZpbHRlcihlbGVtZW50KSB7XG5cdFx0cmV0dXJuIH50YWdzLmluZGV4T2YoZWxlbWVudC50YWdOYW1lKTtcblx0fVxuXG5cdHJldHVybiBmdW5jdGlvbiBzZWxlY3RvcklucHV0KHF1ZXJ5KSB7XG5cdFx0dmFyIGVsZW1lbnRzID0gbmV3IHpBcnJheSgpO1xuXG5cdFx0ZWxlbWVudHMucHVzaC5hcHBseShlbGVtZW50cywgW10uZmlsdGVyLmNhbGwodGhpcy5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJ5KSwgZmlsdGVyKSk7XG5cblx0XHRyZXR1cm4gZWxlbWVudHM7XG5cdH07XG59KSgpKTtcbiIsInouZm4ucGFyZW50ID0gX2VhY2hOZXcoZnVuY3Rpb24gKCkge1xuXHRyZXR1cm4gdGhpcy5wYXJlbnROb2RlO1xufSk7XG5cbnouZm4ubmV4dCA9IF9lYWNoTmV3KGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuIHRoaXMubmV4dEVsZW1lbnRTaWJsaW5nO1xufSk7XG5cbnouZm4ucHJldiA9IHouZm4ucHJldmlvdXMgPSBfZWFjaE5ldyhmdW5jdGlvbiAoKSB7XG5cdHJldHVybiB0aGlzLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XG59KTtcblxuei5mbi5zaWJsaW5ncyA9IF9lYWNoTmV3KGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuIFtdLmZpbHRlci5jYWxsKHRoaXMucGFyZW50Tm9kZS5jaGlsZHJlbiwgZnVuY3Rpb24oY2hpbGQpIHtcblx0XHRyZXR1cm4gY2hpbGQgIT09IHRoaXM7XG5cdH0sIHRoaXMpO1xufSk7XG4iLCJmdW5jdGlvbiBfY2hlY2tWYWxpZEVsZW1lbnQoZWxlbSkge1xuXHRpZiAoZWxlbSBpbnN0YW5jZW9mIHpBcnJheSkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0aWYgKGVsZW0gaW5zdGFuY2VvZiBFdmVudFRhcmdldCkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBlbGVtID09PSBcInN0cmluZ1wiKSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cbn1cblxuZnVuY3Rpb24gX2VhY2goZm4pIHtcblx0cmV0dXJuIGZ1bmN0aW9uIHJ1bkVhY2goKSB7XG5cdFx0dmFyIGlcdD0gMCxcblx0XHRcdGxcdD0gdGhpcy5sZW5ndGg7XG5cblx0XHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdFx0Zm4uYXBwbHkodGhpc1tpXSwgYXJndW1lbnRzKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fTtcbn1cblxuZnVuY3Rpb24gX2VhY2hOZXcoZm4pIHtcblx0cmV0dXJuIGZ1bmN0aW9uIHJ1bkVhY2goKSB7XG5cdFx0dmFyIHJldCxcblx0XHRcdGlcdD0gMCxcblx0XHRcdGxcdD0gdGhpcy5sZW5ndGgsXG5cdFx0XHRhcnJcdD0gbmV3IHpBcnJheSgpO1xuXG5cdFx0Zm9yICg7IGkgPCBsOyBpKyspIHtcblx0XHRcdHJldCA9IGZuLmFwcGx5KHRoaXNbaV0sIGFyZ3VtZW50cyk7XG5cblx0XHRcdGlmIChyZXQpIHtcblx0XHRcdFx0aWYgKEFycmF5LmlzQXJyYXkocmV0KSAmJiByZXQubGVuZ3RoKSB7XG5cdFx0XHRcdFx0YXJyLnB1c2guYXBwbHkoYXJyLCByZXQpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGFyci5wdXNoKHJldCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gYXJyO1xuXHR9O1xufVxuXG56LmRlZXBFeHRlbmQgPSBmdW5jdGlvbiBfZXh0ZW5kKGRlZXApIHtcblx0dmFyIG9iaiwgdGFyZ2V0LFxuXHRcdGkgPSAyO1xuXG5cdGlmICh0eXBlb2YgZGVlcCA9PT0gXCJvYmplY3RcIikge1xuXHRcdHRhcmdldFx0PSBkZWVwIHx8IHt9O1xuXHRcdGRlZXBcdD0gSW5maW5pdHk7XG5cdH0gZWxzZSB7XG5cdFx0ZGVlcFx0PSBkZWVwID09PSB0cnVlID8gSW5maW5pdHkgOiAoZGVlcCB8IDApO1xuXHRcdHRhcmdldFx0PSBhcmd1bWVudHNbMV0gfHwge307XG5cdH1cblxuXHRmb3IgKDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdG9iaiA9IGFyZ3VtZW50c1tpXTtcblxuXHRcdGlmICghb2JqKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG5cdFx0XHRpZiAob2JqLmhhc093blByb3BlcnR5KGtleSkpIHtcblx0XHRcdFx0aWYgKGRlZXAgJiYgdHlwZW9mIG9ialtrZXldID09PSBcIm9iamVjdFwiKSB7XG5cdFx0XHRcdFx0X2V4dGVuZChkZWVwIC0gMSwgdGFyZ2V0W2tleV0sIG9ialtrZXldKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0YXJnZXRba2V5XSA9IG9ialtrZXldO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRhcmdldDtcbn07XG5cbnouZXh0ZW5kID0gZnVuY3Rpb24gKCkge1xuXHRbXS51bnNoaWZ0LmNhbGwoYXJndW1lbnRzLCAwKTtcblx0cmV0dXJuIHouZGVlcEV4dGVuZC5hcHBseShudWxsLCBhcmd1bWVudHMpO1xufTtcblxuei5mbi5lYWNoID0gX2VhY2goZnVuY3Rpb24gZWFjaChmbikge1xuXHRmbi5jYWxsKHRoaXMsIHRoaXMpO1xuXHRyZXR1cm4gdGhpcztcbn0pO1xuIiwifSkod2luZG93LCBkb2N1bWVudCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=