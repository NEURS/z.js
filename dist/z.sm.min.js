!function(t,e){function n(t,e){if(t instanceof C)return t;if(t instanceof Element||t instanceof Window||t instanceof Document)return new C(t);if(void 0===t||null===t)return new C;if("string"!=typeof t)throw new Error("First parameter is invalid");if(e){if(!T(e))throw new Error("Second parameter is invalid");e=n(e)}else e=j;return d(e,t)}function r(){}function i(t,e){var n;return e?this.responseXML?this.responseXML:(n=new DOMParser,n.parseFromString(t,"application/xml")):(n=new XMLSerializer,n.serializeToString(t))}function o(t){"classList"in this?this.classList.add(t):this.className+=" "+t}function s(t){"classList"in this?this.classList.remove(t):this.className=this.className.replace(a(t)," ")}function a(t){var e=U.get("class."+t);return e||(e=new RegExp("(^|\\b)"+t+"(\\b|$)","g"),U.set("class."+t,e)),e}function f(t,e){if("classList"in t){if(t.classList.contains(e))return!0}else if(a(e).test(t.className))return!0;return!1}function u(t){for(var e,n=0,r=t.length,i={};r>n;n++)e=t[n],0===e.name.indexOf("data-")&&(i[x(e.name)]=e.value);return i}function c(t,e){return e.call(t,t)}function l(t,e){return t===e}function h(t){var e,r=0,i=[];for(t=n(t),e=t.find("script");r<e.length;r++)i.push({src:e[r].src,text:e[r].textContent}),e[r].remove();return i}function p(t){for(var n,r=0;r<t.length;r++)n=e.createElement("script"),t[r].src?n.src=t[r].src:t[r].text&&(n.text=t[r].text),e.head.appendChild(n).parentNode.removeChild(n)}function d(t,e){var n=new C;return t.forEach(function(t){n.push.apply(n,v(t,e))}),n}function v(t,e){return~e.indexOf(":")&&void 0!==O?(O===!1&&m(),e.match(O)?g(t,e):t.querySelectorAll(e)):t.querySelectorAll(e)}function g(t,e){for(var n,r,i=new C(t),o="",s=e.split(/\s+/);n=s.shift();)r=n.match(O),r?(o+=n.replace(O,"")||"*",n=new C,i.forEach(function(t){var e=new C;r.forEach(function(n){e.push.apply(e,N[n].call(t,o))}),n.push.apply(n,e)}),i=n,o=""):o+=n+" ";return o&&(n=new C,i.forEach(function(t){n.push.apply(n,t.querySelectorAll(o))}),i=n),i}function m(){var t=Object.keys(N).join("|").replace(/:/g,"");O=new RegExp(":("+t+")","g")}function y(t){return t.toLowerCase().replace(F,w)}function w(t,e){return e.toUpperCase()}function x(t){return t.replace(D,E).toLowerCase()}function E(t,e){return"-"+e.toLowerCase()}function T(t){return t instanceof C?!0:t instanceof Element||t instanceof Window||t instanceof Document?!0:"string"==typeof t?!0:void 0}function A(t){return function(){for(var e=0,n=this.length;n>e;e++)t.apply(this[e],arguments);return this}}function b(t){return function(){for(var e,n=0,r=this.length,i=new C;r>n;n++)e=t.apply(this[n],arguments),e&&(Array.isArray(e)&&e.length||e instanceof HTMLCollection?i.push.apply(i,e):i.push(e));return i}}function S(t,e){for(var n=new C;t[e]&&1===t.nodeType;)t=t[e],n.push(t);return n}var C,L,j,q=[];!function(){var n;if("ActiveXObject"in t)return n=new ActiveXObject("htmlfile"),n.open(),n.write("<script></script>"),n.close(),q.push(n),void(C=n.parentWindow.Array);try{n=e.createElement("iframe"),n.style.width=0,n.style.height=0,n.style.borderStyle="none",e.body.appendChild(n),C=n.contentWindow.Array,e.body.removeChild(n)}catch(r){C=Array}}(),t.z=n,n.fn=C.prototype,L=n(t),j=n(e),n.fn.find=function(t){if("string"!=typeof t)throw new Error("First paramater of z#find() should be a string");return d(this,t)};var M,H,z={};M={method:"GET",requestType:"text",responseType:"text",url:t.location+"",query:null,data:null,setup:r,success:r,error:r},H={text:function(t){return(t||"")+""}},n.ajax=function(t){var e=new XMLHttpRequest;if(t=n.extend({context:e},M,t),!H[t.requestType])throw new Error("Invalid option `requestType`");if(!H[t.responseType])throw new Error("Invalid option `responseType`");t.query&&~["HEAD","GET"].indexOf(t.method.toUpperCase())&&(t.url+=~t.url.indexOf("?")?"&":"?",t.url+=n.queryString(t.query),t.url=t.url.replace(/(\?|&)&/g,"$1")),e.open(t.method,t.url,!0),e.onload=function(){var n;e.status>=200&&e.status<400?(n=H[t.responseType].call(e,e.responseText,!0),t.success.call(t.context,n)):t.error.call(t.context,e.status,e.statusText)},e.onerror=function(){t.error.call(t.context,e.status,e.statusText)},~["HEAD","GET"].indexOf(t.method.toUpperCase())||e.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),t.data&&(t.data=H[t.requestType].call(e,t.data,!1)),t.setup.call(e,e),e.send(t.data)},M.requestType="detect",M.responseType="detect",n.registerAjaxType=function(t,e,n){n||"function"!=typeof e||(n=e,e=!1),H[t]=n,e&&(z[e]=t)},n.registerAjaxType("detect",function(t,e){var n,r="text";return e?(n=this.getResponseHeader("Content-Type")||"",n=n.split(";")[0].trim(),r=z[n]||"text"):t&&"object"==typeof t&&t.toString==={}.toString&&(r="json"),H[r].call(this,t,e)}),n.registerAjaxType("json","application/json",function(t,e){return e?JSON.parse(t):JSON.stringify(t)}),n.registerAjaxType("html","text/html",function(t,n){var r,i;return n?(i=new C,r=e.implementation.createHTMLDocument(""),r.documentElement.innerHTML=t,i.push.apply(i,i.slice.call(r.body.children,0)),i):t.outerHTML}),n.registerAjaxType("xml","text/xml",i),n.registerAjaxType("xml","application/xml",i),n.fn.addClass=A(o),n.fn.removeClass=A(s),n.fn.toggleClass=A(function(t,e){var n;n=void 0===e?f(this,t)?s:o:e?o:s,n.call(this,t)}),n.fn.hasClass=function(t){for(var e=0,n=this.length;n>e;e++)if(f(this[e],t))return!0;return!1},n.fn.data=function(t,e){return void 0!==t&&void 0!==e?this.setData(t,e):this.length?this.getData(t):void 0},n.fn.setData=A(function(t,e){var n=this;"dataset"in n?n.dataset[y(t)]=e:n.setAttribute(x(t),e)}),n.fn.getData=function(t){var e=this[0];if(e)return void 0!==t?"dataset"in e?e.dataset[y(t)]:e.getAttribute(x(t)):"dataset"in e?Object.create(e.dataset):u(e.attributes)},n.data=function(t,e,r){n(t).data(e,r)},n.fn.on=n.fn.bind=A(function(t,e){this.addEventListener(t,e,!1)}),n.fn.one=A(function(t,e){var r=!1;n(this).on(t,function i(o){r||(r=!0,n(this).off(t,i),e.call(this,o))})}),n.fn.off=n.fn.unbind=A(function(t,e){this.removeEventListener(t,e,!1)}),n.fn.trigger=function(t,n){var r,i=0,o=this.length;void 0===n&&(n={}),n.event=n;try{r=new CustomEvent(t,{detail:n})}catch(s){r=e.createEvent("CustomEvent"),r.initCustomEvent(t,!0,!0,n)}for(;o>i;i++)this[i].dispatchEvent(r);return this},n.fn.is=function(){var t,n=e.body;return t=n.matches||n.matchesSelector||n.webkitMatchesSelector,t=t||n.mozMatchesSelector||n.msMatchesSelector||n.oMatchesSelector,function(e){var n,r,i=0,o=this.length;switch(typeof e){case"string":n=t;break;case"function":n=c;break;case"object":if(!(e instanceof Element||e instanceof Window||e instanceof Document))throw new Error("First parameter of z#is is invalid");n=l;break;default:throw new Error("First parameter of z#is is invalid")}for(;o>i;i++)if(r=n(this[i],e))return r;return!1}}(),n.fn.hide=A(function(){return this.style.display="none",this}),n.fn.show=A(function(){return this.style.display="",this}),n.fn.clone=function(t){var e=0;for((void 0===t||null===t)&&(t=!1);e<this.length;e++)this[e]=this[e].cloneNode(t);return this},n.fn.html=function(t){var e,n;if(void 0===t)return this[0].innerHTML;for(e=0,n=this.length;n>e;e++)this[e].innerHTML=t;return this},n.fn.text=function(t){var e,n;if(void 0===t)return this.textContent;for(e=0,n=this.length;n>e;e++)this[e].textContent=t;return this},n.fn.getAttr=function(t){if(!t)throw new Error("First parameter of z#getAttr is required");return this[0]&&this[0].getAttribute(t)},n.fn.setAttr=A(function(t,e){if(!t)throw new Error("First parameter of z#setAttr is required");if(void 0===e)throw new Error("Second parameter of z#setAttr is required");this.setAttribute(t,e)}),n.fn.attr=function(t,e){return void 0===e?this.getAttr(t):(this.setAttr(t,e),this)},n.fn.replaceWith=n.fn.replace=A(function(t){var e;void 0===t||null===t?this.remove():t instanceof C||t instanceof EventTarget?(e=h(t),t instanceof C&&(t=t[0]),this.parentNode.replaceChild(t,this),p(e)):this.outerHTML=t}),n.fn.append=function(t){var e=0,n=this.length;if(void 0===t)throw new Error("First parameter of z#append is required.");if("string"==typeof t){for(;n>e;e++)this[e].insertAdjacentHTML("beforeend",t);return this}for(t instanceof C&&(t=t[0]);n>e;e++)this[e].appendChild(t);return this},n.fn.prepend=function(t){var e=0,n=this.length;if(void 0===t)throw new Error("First parameter of z#prepend is required.");if("string"==typeof t){for(;n>e;e++)this[e].insertAdjacentHTML("afterbegin",t);return this}for(t instanceof C&&(t=t[0]);n>e;e++)this[e].insertBefore(t,this[e].firstChild);return this},n.fn.after=function(t){var e=0,n=this.length;if(void 0===t)throw new Error("First parameter of z#append is required.");if("string"==typeof t){for(;n>e;e++)this[e].insertAdjacentHTML("afterend",t);return this}for(t instanceof C&&(t=t[0]);n>e;e++)this[e].insertAdjacentHTML("afterend",t.outerHTML);return this},n.fn.css=function(t,e){var n=0,r=this.length;if(void 0===t)throw new Error("First parameter of z#css is required.");if(void 0===e)return getComputedStyle(this[0])[t];for(t=t.replace(/-./g,function(t){return t.substr(1).toUpperCase()});r>n;n++)this[n].style[t]=e;return this},n.fn.remove=A(function(){this.parentNode.removeChild(this)}),n.fn.empty=A(function(){this.innerHTML=""});var O,N={};n.registerSelector=function(t,e){if(!t||"string"!=typeof t)throw new Error("First parameter of z#registerSelector must be a string selector");if(!e||"function"!=typeof e)throw new Error("Second parameter of z#registerSelector must be a function");":"!==t[0]&&(t=":"+t),O=!1,N[t]=e},n.registerSelector(":first",function(t){return n(this.querySelector(t))}),n.registerSelector(":input",function(){function t(t){return~e.indexOf(t.tagName)}var e="INPUT,TEXTAREA,SELECT,BUTTON".split(",");return function(e){var n=new C;return n.push.apply(n,[].filter.call(this.querySelectorAll(e),t)),n}}()),n.fn.parent=b(function(){return this.parentNode}),n.fn.next=b(function(){return this.nextElementSibling}),n.fn.prev=n.fn.previous=b(function(){return this.previousElementSibling}),n.fn.siblings=b(function(){return[].filter.call(this.parentNode.children,function(t){return t!==this},this)}),n.fn.nextAll=b(function(){return S(this,"nextElementSibling")}),n.fn.prevAll=b(function(){return S(this,"previousElementSibling")}),n.fn.children=b(function(){return this.children});var F=/-(.)/g,D=/(?!^)([A-Z])/g,U=function(){var e;return"Map"in t?new Map:(e={},{set:function(t,n){e[t]=n},get:function(t){return e[t]}})};n.deepExtend=function R(t){var e,n,r=2;for("object"==typeof t?(n=t||{},t=1/0):(t=t===!0?1/0:0|t,n=arguments[1]||{});r<arguments.length;r++)if(e=arguments[r])for(var i in e)e.hasOwnProperty(i)&&(t&&"object"==typeof e[i]?R(t-1,n[i],e[i]):n[i]=e[i]);return n},n.extend=function(){return[].unshift.call(arguments,0),n.deepExtend.apply(null,arguments)},n.fn.each=A(function(t){return t.call(this,this),this}),n.queryString=function(t,e){var r,i,o,s=[];for(r in t)t.hasOwnProperty(r)&&(i=e?e+"["+r+"]":r,o=t[r],s.push(o&&"object"==typeof o?n.queryString(o,i):encodeURIComponent(i)+"="+encodeURIComponent(o)));return s.join("&")}}(window,document);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiei5zbS5taW4uanMiLCJzb3VyY2VzIjpbIl9oZWFkZXIuanMiLCJfYmFzZS5qcyIsImFqYXguanMiLCJhamF4X3R5cGVzLmpzIiwiY2xhc3Nlcy5qcyIsImRhdGEuanMiLCJldmVudHMuanMiLCJmaWx0ZXJpbmcuanMiLCJtYW5pcHVsYXRpb24uanMiLCJzZWxlY3RvcnMuanMiLCJzZWxlY3RvcnNfY3VzdG9tLmpzIiwidHJhdmVyc2luZy5qcyIsInV0aWxzLmpzIiwiX2Zvb3Rlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FVQSxTQUFBLEVBQUEsR0NQQSxRQUFBLEdBQUEsRUFBQSxHQUNBLEdBQUEsWUFBQSxHQUNBLE1BQUEsRUFDQSxJQUFBLFlBQUEsVUFBQSxZQUFBLFNBQUEsWUFBQSxVQUNBLE1BQUEsSUFBQSxHQUFBLEVBQ0EsSUFBQSxTQUFBLEdBQUEsT0FBQSxFQUNBLE1BQUEsSUFBQSxFQUNBLElBQUEsZ0JBQUEsR0FDQSxLQUFBLElBQUEsT0FBQSw2QkFHQSxJQUFBLEVBQUEsQ0FDQSxJQUFBLEVBQUEsR0FDQSxLQUFBLElBQUEsT0FBQSw4QkFHQSxHQUFBLEVBQUEsT0FFQSxHQUFBLENBR0EsT0FBQSxHQUFBLEVBQUEsR0FHQSxRQUFBLE1DOEJBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsR0FBQSxFQUVBLE9BQUEsR0FLQSxLQUFBLFlBQ0EsS0FBQSxhQUdBLEVBQUEsR0FBQSxXQUNBLEVBQUEsZ0JBQUEsRUFBQSxxQkFUQSxFQUFBLEdBQUEsZUFDQSxFQUFBLGtCQUFBLElDakNBLFFBQUEsR0FBQSxHQUNBLGFBQUEsTUFDQSxLQUFBLFVBQUEsSUFBQSxHQUVBLEtBQUEsV0FBQSxJQUFBLEVBSUEsUUFBQSxHQUFBLEdBR0EsYUFBQSxNQUNBLEtBQUEsVUFBQSxPQUFBLEdBRUEsS0FBQSxVQUFBLEtBQUEsVUFBQSxRQUFBLEVBQUEsR0FBQSxLQUlBLFFBQUEsR0FBQSxHQUNBLEdBQUEsR0FBQSxFQUFBLElBQUEsU0FBQSxFQU9BLE9BTEEsS0FDQSxFQUFBLEdBQUEsUUFBQSxVQUFBLEVBQUEsVUFBQSxLQUNBLEVBQUEsSUFBQSxTQUFBLEVBQUEsSUFHQSxFQUdBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsR0FBQSxhQUFBLElBQ0EsR0FBQSxFQUFBLFVBQUEsU0FBQSxHQUNBLE9BQUEsTUFFQSxJQUFBLEVBQUEsR0FBQSxLQUFBLEVBQUEsV0FDQSxPQUFBLENBR0EsUUFBQSxFQy9CQSxRQUFBLEdBQUEsR0FNQSxJQUxBLEdBQUEsR0FDQSxFQUFBLEVBQ0EsRUFBQSxFQUFBLE9BQ0EsS0FFQSxFQUFBLEVBQUEsSUFDQSxFQUFBLEVBQUEsR0FFQSxJQUFBLEVBQUEsS0FBQSxRQUFBLFdBQ0EsRUFBQSxFQUFBLEVBQUEsT0FBQSxFQUFBLE1BSUEsT0FBQSxHQ2xEQSxRQUFBLEdBQUEsRUFBQSxHQUNBLE1BQUEsR0FBQSxLQUFBLEVBQUEsR0FHQSxRQUFBLEdBQUEsRUFBQSxHQUNBLE1BQUEsS0FBQSxFQzhGQSxRQUFBLEdBQUEsR0FDQSxHQUFBLEdBQ0EsRUFBQSxFQUNBLElBS0EsS0FIQSxFQUFBLEVBQUEsR0FDQSxFQUFBLEVBQUEsS0FBQSxVQUVBLEVBQUEsRUFBQSxPQUFBLElBQ0EsRUFBQSxNQUNBLElBQUEsRUFBQSxHQUFBLElBQ0EsS0FBQSxFQUFBLEdBQUEsY0FHQSxFQUFBLEdBQUEsUUFHQSxPQUFBLEdBR0EsUUFBQSxHQUFBLEdBSUEsSUFIQSxHQUFBLEdBQ0EsRUFBQSxFQUVBLEVBQUEsRUFBQSxPQUFBLElBQ0EsRUFBQSxFQUFBLGNBQUEsVUFFQSxFQUFBLEdBQUEsSUFDQSxFQUFBLElBQUEsRUFBQSxHQUFBLElBQ0EsRUFBQSxHQUFBLE9BQ0EsRUFBQSxLQUFBLEVBQUEsR0FBQSxNQUdBLEVBQUEsS0FBQSxZQUFBLEdBQUEsV0FBQSxZQUFBLEdDaklBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsR0FBQSxHQUFBLEdBQUEsRUFNQSxPQUpBLEdBQUEsUUFBQSxTQUFBLEdBQ0EsRUFBQSxLQUFBLE1BQUEsRUFBQSxFQUFBLEVBQUEsTUFHQSxFQUdBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsT0FBQSxFQUFBLFFBQUEsTUFBQSxTQUFBLEdBSUEsS0FBQSxHQUNBLElBR0EsRUFBQSxNQUFBLEdBSUEsRUFBQSxFQUFBLEdBSEEsRUFBQSxpQkFBQSxJQVJBLEVBQUEsaUJBQUEsR0FjQSxRQUFBLEdBQUEsRUFBQSxHQU1BLElBTEEsR0FBQSxHQUFBLEVBQ0EsRUFBQSxHQUFBLEdBQUEsR0FDQSxFQUFBLEdBQ0EsRUFBQSxFQUFBLE1BQUEsT0FFQSxFQUFBLEVBQUEsU0FDQSxFQUFBLEVBQUEsTUFBQSxHQUVBLEdBS0EsR0FBQSxFQUFBLFFBQUEsRUFBQSxLQUFBLElBQ0EsRUFBQSxHQUFBLEdBRUEsRUFBQSxRQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsR0FBQSxFQUVBLEdBQUEsUUFBQSxTQUFBLEdBQ0EsRUFBQSxLQUFBLE1BQUEsRUFBQSxFQUFBLEdBQUEsS0FBQSxFQUFBLE1BR0EsRUFBQSxLQUFBLE1BQUEsRUFBQSxLQUdBLEVBQUEsRUFDQSxFQUFBLElBbEJBLEdBQUEsRUFBQSxHQStCQSxPQVZBLEtBQ0EsRUFBQSxHQUFBLEdBRUEsRUFBQSxRQUFBLFNBQUEsR0FDQSxFQUFBLEtBQUEsTUFBQSxFQUFBLEVBQUEsaUJBQUEsTUFHQSxFQUFBLEdBR0EsRUFHQSxRQUFBLEtBQ0EsR0FBQSxHQUFBLE9BQUEsS0FBQSxHQUFBLEtBQUEsS0FBQSxRQUFBLEtBQUEsR0FDQSxHQUFBLEdBQUEsUUFBQSxLQUFBLEVBQUEsSUFBQSxLQ3hFQSxRQUFBLEdBQUEsR0FDQSxNQUFBLEdBQUEsY0FBQSxRQUFBLEVBQUEsR0FHQSxRQUFBLEdBQUEsRUFBQSxHQUNBLE1BQUEsR0FBQSxjQUdBLFFBQUEsR0FBQSxHQUNBLE1BQUEsR0FBQSxRQUFBLEVBQUEsR0FBQSxjQUdBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsTUFBQSxJQUFBLEVBQUEsY0FzQkEsUUFBQSxHQUFBLEdBQ0EsTUFBQSxhQUFBLElBQ0EsRUFHQSxZQUFBLFVBQUEsWUFBQSxTQUFBLFlBQUEsV0FDQSxFQUdBLGdCQUFBLElBQ0EsRUFEQSxPQUtBLFFBQUEsR0FBQSxHQUNBLE1BQUEsWUFJQSxJQUhBLEdBQUEsR0FBQSxFQUNBLEVBQUEsS0FBQSxPQUVBLEVBQUEsRUFBQSxJQUNBLEVBQUEsTUFBQSxLQUFBLEdBQUEsVUFHQSxPQUFBLE9BSUEsUUFBQSxHQUFBLEdBQ0EsTUFBQSxZQU1BLElBTEEsR0FBQSxHQUNBLEVBQUEsRUFDQSxFQUFBLEtBQUEsT0FDQSxFQUFBLEdBQUEsR0FFQSxFQUFBLEVBQUEsSUFDQSxFQUFBLEVBQUEsTUFBQSxLQUFBLEdBQUEsV0FFQSxJQUNBLE1BQUEsUUFBQSxJQUFBLEVBQUEsUUFBQSxZQUFBLGdCQUNBLEVBQUEsS0FBQSxNQUFBLEVBQUEsR0FFQSxFQUFBLEtBQUEsR0FLQSxPQUFBLElBSUEsUUFBQSxHQUFBLEVBQUEsR0FHQSxJQUZBLEdBQUEsR0FBQSxHQUFBLEdBRUEsRUFBQSxJQUFBLElBQUEsRUFBQSxVQUNBLEVBQUEsRUFBQSxHQUNBLEVBQUEsS0FBQSxFQUdBLE9BQUEsR1BoR0EsR0FBQSxHQUFBLEVBQUEsRUFDQSxNQTRCQSxXQUNBLEdBQUEsRUFFQSxJQUFBLGlCQUFBLEdBU0EsTUFSQSxHQUFBLEdBQUEsZUFBQSxZQUVBLEVBQUEsT0FDQSxFQUFBLE1BQUEscUJBQ0EsRUFBQSxRQUNBLEVBQUEsS0FBQSxRQUVBLEVBQUEsRUFBQSxhQUFBLE1BSUEsS0FDQSxFQUFBLEVBQUEsY0FBQSxVQUVBLEVBQUEsTUFBQSxNQUFBLEVBQ0EsRUFBQSxNQUFBLE9BQUEsRUFDQSxFQUFBLE1BQUEsWUFBQSxPQUVBLEVBQUEsS0FBQSxZQUFBLEdBRUEsRUFBQSxFQUFBLGNBQUEsTUFFQSxFQUFBLEtBQUEsWUFBQSxHQUNBLE1BQUEsR0FDQSxFQUFBLFVBS0EsRUFBQSxFQUFBLEVBQ0EsRUFBQSxHQUFBLEVBQUEsVUFDQSxFQUFBLEVBQUEsR0FDQSxFQUFBLEVBQUEsR0FFQSxFQUFBLEdBQUEsS0FBQSxTQUFBLEdBQ0EsR0FBQSxnQkFBQSxHQUNBLEtBQUEsSUFBQSxPQUFBLGlEQUdBLE9BQUEsR0FBQSxLQUFBLEdReEVBLElBQUEsR0FBQSxFQUNBLElBRUEsSUFDQSxPQUFBLE1BQ0EsWUFBQSxPQUNBLGFBQUEsT0FDQSxJQUFBLEVBQUEsU0FBQSxHQUNBLE1BQUEsS0FDQSxLQUFBLEtBQ0EsTUFBQSxFQUNBLFFBQUEsRUFDQSxNQUFBLEdBR0EsR0FDQSxLQUFBLFNBQUEsR0FDQSxPQUFBLEdBQUEsSUFBQSxLQUlBLEVBQUEsS0FBQSxTQUFBLEdBQ0EsR0FDQSxHQUFBLEdBQUEsZUFNQSxJQUpBLEVBQUEsRUFBQSxRQUNBLFFBQUEsR0FDQSxFQUFBLElBRUEsRUFBQSxFQUFBLGFBQ0EsS0FBQSxJQUFBLE9BQUEsK0JBQ0EsS0FBQSxFQUFBLEVBQUEsY0FDQSxLQUFBLElBQUEsT0FBQSxnQ0FHQSxHQUFBLFNBQUEsT0FBQSxPQUFBLFFBQUEsRUFBQSxPQUFBLGlCQUNBLEVBQUEsTUFBQSxFQUFBLElBQUEsUUFBQSxLQUFBLElBQUEsSUFDQSxFQUFBLEtBQUEsRUFBQSxZQUFBLEVBQUEsT0FDQSxFQUFBLElBQUEsRUFBQSxJQUFBLFFBQUEsV0FBQSxPQUdBLEVBQUEsS0FBQSxFQUFBLE9BQUEsRUFBQSxLQUFBLEdBRUEsRUFBQSxPQUFBLFdBQ0EsR0FBQSxFQUVBLEdBQUEsUUFBQSxLQUFBLEVBQUEsT0FBQSxLQUNBLEVBQUEsRUFBQSxFQUFBLGNBQUEsS0FBQSxFQUFBLEVBQUEsY0FBQSxHQUNBLEVBQUEsUUFBQSxLQUFBLEVBQUEsUUFBQSxJQUVBLEVBQUEsTUFBQSxLQUFBLEVBQUEsUUFBQSxFQUFBLE9BQUEsRUFBQSxhQUlBLEVBQUEsUUFBQSxXQUNBLEVBQUEsTUFBQSxLQUFBLEVBQUEsUUFBQSxFQUFBLE9BQUEsRUFBQSxlQUdBLE9BQUEsT0FBQSxRQUFBLEVBQUEsT0FBQSxnQkFDQSxFQUFBLGlCQUFBLGVBQUEsb0RBR0EsRUFBQSxPQUNBLEVBQUEsS0FBQSxFQUFBLEVBQUEsYUFBQSxLQUFBLEVBQUEsRUFBQSxNQUFBLElBR0EsRUFBQSxNQUFBLEtBQUEsRUFBQSxHQUVBLEVBQUEsS0FBQSxFQUFBLE9QcEVBLEVBQUEsWUFBQSxTQUNBLEVBQUEsYUFBQSxTQUVBLEVBQUEsaUJBQUEsU0FBQSxFQUFBLEVBQUEsR0FDQSxHQUFBLGtCQUFBLEtBQ0EsRUFBQSxFQUNBLEdBQUEsR0FHQSxFQUFBLEdBQUEsRUFFQSxJQUNBLEVBQUEsR0FBQSxJQUlBLEVBQUEsaUJBQUEsU0FBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQ0EsRUFBQSxNQVlBLE9BVkEsSUFDQSxFQUFBLEtBQUEsa0JBQUEsaUJBQUEsR0FDQSxFQUFBLEVBQUEsTUFBQSxLQUFBLEdBQUEsT0FDQSxFQUFBLEVBQUEsSUFBQSxRQUVBLEdBQUEsZ0JBQUEsSUFBQSxFQUFBLGNBQUEsV0FDQSxFQUFBLFFBSUEsRUFBQSxHQUFBLEtBQUEsS0FBQSxFQUFBLEtBR0EsRUFBQSxpQkFBQSxPQUFBLG1CQUFBLFNBQUEsRUFBQSxHQUNBLE1BQUEsR0FBQSxLQUFBLE1BQUEsR0FBQSxLQUFBLFVBQUEsS0FHQSxFQUFBLGlCQUFBLE9BQUEsWUFBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsQ0FFQSxPQUFBLElBSUEsRUFBQSxHQUFBLEdBQ0EsRUFBQSxFQUFBLGVBQUEsbUJBQUEsSUFFQSxFQUFBLGdCQUFBLFVBQUEsRUFFQSxFQUFBLEtBQUEsTUFBQSxFQUFBLEVBQUEsTUFBQSxLQUFBLEVBQUEsS0FBQSxTQUFBLElBRUEsR0FWQSxFQUFBLFlBYUEsRUFBQSxpQkFBQSxNQUFBLFdBQUEsR0FDQSxFQUFBLGlCQUFBLE1BQUEsa0JBQUEsR0N2REEsRUFBQSxHQUFBLFNBQUEsRUFBQSxHQUVBLEVBQUEsR0FBQSxZQUFBLEVBQUEsR0FFQSxFQUFBLEdBQUEsWUFBQSxFQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsRUFHQSxHQURBLFNBQUEsRUFDQSxFQUFBLEtBQUEsR0FBQSxFQUFBLEVBRUEsRUFBQSxFQUFBLEVBR0EsRUFBQSxLQUFBLEtBQUEsS0FHQSxFQUFBLEdBQUEsU0FBQSxTQUFBLEdBSUEsSUFIQSxHQUFBLEdBQUEsRUFDQSxFQUFBLEtBQUEsT0FFQSxFQUFBLEVBQUEsSUFDQSxHQUFBLEVBQUEsS0FBQSxHQUFBLEdBQ0EsT0FBQSxDQUlBLFFBQUEsR0MxQkEsRUFBQSxHQUFBLEtBQUEsU0FBQSxFQUFBLEdBQ0EsTUFBQSxVQUFBLEdBQUEsU0FBQSxFQUNBLEtBQUEsUUFBQSxFQUFBLEdBQ0EsS0FBQSxPQUNBLEtBQUEsUUFBQSxHQURBLFFBS0EsRUFBQSxHQUFBLFFBQUEsRUFBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsSUFFQSxZQUFBLEdBQ0EsRUFBQSxRQUFBLEVBQUEsSUFBQSxFQUVBLEVBQUEsYUFBQSxFQUFBLEdBQUEsS0FJQSxFQUFBLEdBQUEsUUFBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLEtBQUEsRUFFQSxJQUFBLEVBRUEsTUFBQSxVQUFBLEVBQ0EsV0FBQSxHQUNBLEVBQUEsUUFBQSxFQUFBLElBRUEsRUFBQSxhQUFBLEVBQUEsSUFFQSxXQUFBLEdBQ0EsT0FBQSxPQUFBLEVBQUEsU0FHQSxFQUFBLEVBQUEsYUFvQkEsRUFBQSxLQUFBLFNBQUEsRUFBQSxFQUFBLEdBQ0EsRUFBQSxHQUFBLEtBQUEsRUFBQSxJTXREQSxFQUFBLEdBQUEsR0FBQSxFQUFBLEdBQUEsS0FBQSxFQUFBLFNBQUEsRUFBQSxHQUNBLEtBQUEsaUJBQUEsRUFBQSxHQUFBLEtBR0EsRUFBQSxHQUFBLElBQUEsRUFBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLElBQUEsQ0FFQSxHQUFBLE1BQUEsR0FBQSxFQUFBLFFBQUEsR0FBQSxHQUNBLElBSUEsR0FBQSxFQUNBLEVBQUEsTUFBQSxJQUFBLEVBQUEsR0FFQSxFQUFBLEtBQUEsS0FBQSxRQUlBLEVBQUEsR0FBQSxJQUFBLEVBQUEsR0FBQSxPQUFBLEVBQUEsU0FBQSxFQUFBLEdBQ0EsS0FBQSxvQkFBQSxFQUFBLEdBQUEsS0FHQSxFQUFBLEdBQUEsUUFBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQ0EsRUFBQSxFQUNBLEVBQUEsS0FBQSxNQUVBLFVBQUEsSUFDQSxNQUdBLEVBQUEsTUFBQSxDQUVBLEtBQ0EsRUFBQSxHQUFBLGFBQUEsR0FDQSxPQUFBLElBRUEsTUFBQSxHQUNBLEVBQUEsRUFBQSxZQUFBLGVBQ0EsRUFBQSxnQkFBQSxHQUFBLEdBQUEsRUFBQSxHQUdBLEtBQUEsRUFBQSxFQUFBLElBQ0EsS0FBQSxHQUFBLGNBQUEsRUFHQSxPQUFBLE9MdkNBLEVBQUEsR0FBQSxHQUFBLFdBQ0EsR0FBQSxHQUNBLEVBQUEsRUFBQSxJQUtBLE9BSEEsR0FBQSxFQUFBLFNBQUEsRUFBQSxpQkFBQSxFQUFBLHNCQUNBLEVBQUEsR0FBQSxFQUFBLG9CQUFBLEVBQUEsbUJBQUEsRUFBQSxpQkFFQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLEVBQ0EsRUFBQSxFQUNBLEVBQUEsS0FBQSxNQUVBLGNBQUEsSUFDQSxJQUFBLFNBQ0EsRUFBQSxDQUNBLE1BRUEsS0FBQSxXQUNBLEVBQUEsQ0FDQSxNQUVBLEtBQUEsU0FDQSxLQUNBLFlBQUEsVUFDQSxZQUFBLFNBQ0EsWUFBQSxXQUlBLEtBQUEsSUFBQSxPQUFBLHFDQUZBLEdBQUEsQ0FJQSxNQUVBLFNBQ0EsS0FBQSxJQUFBLE9BQUEsc0NBSUEsS0FBQSxFQUFBLEVBQUEsSUFHQSxHQUZBLEVBQUEsRUFBQSxLQUFBLEdBQUEsR0FHQSxNQUFBLEVBSUEsUUFBQSxNQ3REQSxFQUFBLEdBQUEsS0FBQSxFQUFBLFdBRUEsTUFEQSxNQUFBLE1BQUEsUUFBQSxPQUNBLE9BR0EsRUFBQSxHQUFBLEtBQUEsRUFBQSxXQUVBLE1BREEsTUFBQSxNQUFBLFFBQUEsR0FDQSxPQUdBLEVBQUEsR0FBQSxNQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsQ0FNQSxNQUpBLFNBQUEsR0FBQSxPQUFBLEtBQ0EsR0FBQSxHQUdBLEVBQUEsS0FBQSxPQUFBLElBQ0EsS0FBQSxHQUFBLEtBQUEsR0FBQSxVQUFBLEVBR0EsT0FBQSxPQUdBLEVBQUEsR0FBQSxLQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsQ0FFQSxJQUFBLFNBQUEsRUFDQSxNQUFBLE1BQUEsR0FBQSxTQUdBLEtBQUEsRUFBQSxFQUFBLEVBQUEsS0FBQSxPQUFBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxVQUFBLENBR0EsT0FBQSxPQUdBLEVBQUEsR0FBQSxLQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsQ0FFQSxJQUFBLFNBQUEsRUFDQSxNQUFBLE1BQUEsV0FHQSxLQUFBLEVBQUEsRUFBQSxFQUFBLEtBQUEsT0FBQSxFQUFBLEVBQUEsSUFDQSxLQUFBLEdBQUEsWUFBQSxDQUdBLE9BQUEsT0FHQSxFQUFBLEdBQUEsUUFBQSxTQUFBLEdBQ0EsSUFBQSxFQUNBLEtBQUEsSUFBQSxPQUFBLDJDQUdBLE9BQUEsTUFBQSxJQUFBLEtBQUEsR0FBQSxhQUFBLElBR0EsRUFBQSxHQUFBLFFBQUEsRUFBQSxTQUFBLEVBQUEsR0FDQSxJQUFBLEVBQ0EsS0FBQSxJQUFBLE9BQUEsMkNBQ0EsSUFBQSxTQUFBLEVBQ0EsS0FBQSxJQUFBLE9BQUEsNENBR0EsTUFBQSxhQUFBLEVBQUEsS0FHQSxFQUFBLEdBQUEsS0FBQSxTQUFBLEVBQUEsR0FDQSxNQUFBLFVBQUEsRUFDQSxLQUFBLFFBQUEsSUFHQSxLQUFBLFFBQUEsRUFBQSxHQUNBLE9BR0EsRUFBQSxHQUFBLFlBQUEsRUFBQSxHQUFBLFFBQUEsRUFBQSxTQUFBLEdBQ0EsR0FBQSxFQUVBLFVBQUEsR0FBQSxPQUFBLEVBQ0EsS0FBQSxTQUNBLFlBQUEsSUFBQSxZQUFBLGNBQ0EsRUFBQSxFQUFBLEdBRUEsWUFBQSxLQUNBLEVBQUEsRUFBQSxJQUdBLEtBQUEsV0FBQSxhQUFBLEVBQUEsTUFFQSxFQUFBLElBRUEsS0FBQSxVQUFBLElBeUNBLEVBQUEsR0FBQSxPQUFBLFNBQUEsR0FDQSxHQUNBLEdBQUEsRUFDQSxFQUFBLEtBQUEsTUFFQSxJQUFBLFNBQUEsRUFDQSxLQUFBLElBQUEsT0FBQSwyQ0FHQSxJQUFBLGdCQUFBLEdBQUEsQ0FDQSxLQUFBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxtQkFBQSxZQUFBLEVBR0EsT0FBQSxNQU9BLElBSkEsWUFBQSxLQUNBLEVBQUEsRUFBQSxJQUdBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxZQUFBLEVBR0EsT0FBQSxPQUdBLEVBQUEsR0FBQSxRQUFBLFNBQUEsR0FDQSxHQUNBLEdBQUEsRUFDQSxFQUFBLEtBQUEsTUFFQSxJQUFBLFNBQUEsRUFDQSxLQUFBLElBQUEsT0FBQSw0Q0FHQSxJQUFBLGdCQUFBLEdBQUEsQ0FDQSxLQUFBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxtQkFBQSxhQUFBLEVBR0EsT0FBQSxNQU9BLElBSkEsWUFBQSxLQUNBLEVBQUEsRUFBQSxJQUdBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxhQUFBLEVBQUEsS0FBQSxHQUFBLFdBR0EsT0FBQSxPQUdBLEVBQUEsR0FBQSxNQUFBLFNBQUEsR0FDQSxHQUNBLEdBQUEsRUFDQSxFQUFBLEtBQUEsTUFFQSxJQUFBLFNBQUEsRUFDQSxLQUFBLElBQUEsT0FBQSwyQ0FHQSxJQUFBLGdCQUFBLEdBQUEsQ0FDQSxLQUFBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxtQkFBQSxXQUFBLEVBR0EsT0FBQSxNQU9BLElBSkEsWUFBQSxLQUNBLEVBQUEsRUFBQSxJQUdBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxtQkFBQSxXQUFBLEVBQUEsVUFHQSxPQUFBLE9BR0EsRUFBQSxHQUFBLElBQUEsU0FBQSxFQUFBLEdBQ0EsR0FBQSxHQUFBLEVBQ0EsRUFBQSxLQUFBLE1BRUEsSUFBQSxTQUFBLEVBQ0EsS0FBQSxJQUFBLE9BQUEsd0NBR0EsSUFBQSxTQUFBLEVBQ0EsTUFBQSxrQkFBQSxLQUFBLElBQUEsRUFNQSxLQUpBLEVBQUEsRUFBQSxRQUFBLE1BQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxPQUFBLEdBQUEsZ0JBR0EsRUFBQSxFQUFBLElBQ0EsS0FBQSxHQUFBLE1BQUEsR0FBQSxDQUlBLE9BQUEsT0FHQSxFQUFBLEdBQUEsT0FBQSxFQUFBLFdBQ0EsS0FBQSxXQUFBLFlBQUEsUUFHQSxFQUFBLEdBQUEsTUFBQSxFQUFBLFdBQ0EsS0FBQSxVQUFBLElDeFBBLElBQUEsR0FDQSxJSURBLEdBQUEsaUJBQUEsU0FBQSxFQUFBLEdBQ0EsSUFBQSxHQUFBLGdCQUFBLEdBQ0EsS0FBQSxJQUFBLE9BQUEsa0VBQ0EsS0FBQSxHQUFBLGtCQUFBLEdBQ0EsS0FBQSxJQUFBLE9BQUEsNERBR0EsT0FBQSxFQUFBLEtBQ0EsRUFBQSxJQUFBLEdBR0EsR0FBQSxFQUNBLEVBQUEsR0FBQSxHQUdBLEVBQUEsaUJBQUEsU0FBQSxTQUFBLEdBQ0EsTUFBQSxHQUFBLEtBQUEsY0FBQSxNQUdBLEVBQUEsaUJBQUEsU0FBQSxXQUdBLFFBQUEsR0FBQSxHQUNBLE9BQUEsRUFBQSxRQUFBLEVBQUEsU0FIQSxHQUFBLEdBQUEsK0JBQUEsTUFBQSxJQU1BLE9BQUEsVUFBQSxHQUNBLEdBQUEsR0FBQSxHQUFBLEVBSUEsT0FGQSxHQUFBLEtBQUEsTUFBQSxLQUFBLE9BQUEsS0FBQSxLQUFBLGlCQUFBLEdBQUEsSUFFQSxPQy9CQSxFQUFBLEdBQUEsT0FBQSxFQUFBLFdBQ0EsTUFBQSxNQUFBLGFBR0EsRUFBQSxHQUFBLEtBQUEsRUFBQSxXQUNBLE1BQUEsTUFBQSxxQkFHQSxFQUFBLEdBQUEsS0FBQSxFQUFBLEdBQUEsU0FBQSxFQUFBLFdBQ0EsTUFBQSxNQUFBLHlCQUdBLEVBQUEsR0FBQSxTQUFBLEVBQUEsV0FDQSxTQUFBLE9BQUEsS0FBQSxLQUFBLFdBQUEsU0FBQSxTQUFBLEdBQ0EsTUFBQSxLQUFBLE1BQ0EsUUFHQSxFQUFBLEdBQUEsUUFBQSxFQUFBLFdBQ0EsTUFBQSxHQUFBLEtBQUEsd0JBR0EsRUFBQSxHQUFBLFFBQUEsRUFBQSxXQUNBLE1BQUEsR0FBQSxLQUFBLDRCQUdBLEVBQUEsR0FBQSxTQUFBLEVBQUEsV0FDQSxNQUFBLE1BQUEsVUozQkEsSUFBQSxHQUFBLFFBQ0EsRUFBQSxnQkFrQkEsRUFBQSxXQUNBLEdBQUEsRUFFQSxPQUFBLE9BQUEsR0FDQSxHQUFBLE1BR0EsTUFHQSxJQUFBLFNBQUEsRUFBQSxHQUNBLEVBQUEsR0FBQSxHQUVBLElBQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxNQWtFQSxHQUFBLFdBQUEsUUFBQSxHQUFBLEdBQ0EsR0FBQSxHQUFBLEVBQ0EsRUFBQSxDQVVBLEtBUkEsZ0JBQUEsSUFDQSxFQUFBLE1BQ0EsRUFBQSxNQUVBLEVBQUEsS0FBQSxFQUFBLElBQUEsRUFBQSxFQUNBLEVBQUEsVUFBQSxRQUdBLEVBQUEsVUFBQSxPQUFBLElBR0EsR0FGQSxFQUFBLFVBQUEsR0FNQSxJQUFBLEdBQUEsS0FBQSxHQUNBLEVBQUEsZUFBQSxLQUNBLEdBQUEsZ0JBQUEsR0FBQSxHQUNBLEVBQUEsRUFBQSxFQUFBLEVBQUEsR0FBQSxFQUFBLElBRUEsRUFBQSxHQUFBLEVBQUEsR0FNQSxPQUFBLElBR0EsRUFBQSxPQUFBLFdBRUEsU0FEQSxRQUFBLEtBQUEsVUFBQSxHQUNBLEVBQUEsV0FBQSxNQUFBLEtBQUEsWUFHQSxFQUFBLEdBQUEsS0FBQSxFQUFBLFNBQUEsR0FFQSxNQURBLEdBQUEsS0FBQSxLQUFBLE1BQ0EsT0FHQSxFQUFBLFlBQUEsU0FBQSxFQUFBLEdBQ0EsR0FBQSxHQUFBLEVBQUEsRUFDQSxJQUVBLEtBQUEsSUFBQSxHQUNBLEVBQUEsZUFBQSxLQUVBLEVBREEsRUFDQSxFQUFBLElBQUEsRUFBQSxJQUVBLEVBR0EsRUFBQSxFQUFBLEdBR0EsRUFBQSxLQURBLEdBQUEsZ0JBQUEsR0FDQSxFQUFBLFlBQUEsRUFBQSxHQUVBLG1CQUFBLEdBQUEsSUFBQSxtQkFBQSxJQUtBLE9BQUEsR0FBQSxLQUFBLE9LcEtBLE9BQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIHouanMgSmF2YVNjcmlwdCBMaWJyYXJ5IHZAVkVSU0lPTlxuICogaHR0cHM6Ly9naXRodWIuY29tL05FVVJTL3ouanNcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNCBORVVSUyBMTEMsIEtldmluIEouIE1hcnRpbiwgYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTkVVUlMvei5qcy9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKlxuICogRGF0ZTogQERBVEVcbiAqL1xuOyhmdW5jdGlvbiAod2luZG93LCBkb2N1bWVudCkge1xuIiwidmFyIHpBcnJheSwgX3dpbmRvdywgX2RvY3VtZW50LFxuXHRjYWNoZSA9IFtdO1xuXG5mdW5jdGlvbiB6KGVsZW0sIHNjb3BlKSB7XG5cdGlmIChlbGVtIGluc3RhbmNlb2YgekFycmF5KSB7XG5cdFx0cmV0dXJuIGVsZW07XG5cdH0gZWxzZSBpZiAoZWxlbSBpbnN0YW5jZW9mIEVsZW1lbnQgfHwgZWxlbSBpbnN0YW5jZW9mIFdpbmRvdyB8fCBlbGVtIGluc3RhbmNlb2YgRG9jdW1lbnQpIHtcblx0XHRyZXR1cm4gbmV3IHpBcnJheShlbGVtKTtcblx0fSBlbHNlIGlmIChlbGVtID09PSB1bmRlZmluZWQgfHwgZWxlbSA9PT0gbnVsbCkge1xuXHRcdHJldHVybiBuZXcgekFycmF5KCk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGVsZW0gIT09IFwic3RyaW5nXCIpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgaXMgaW52YWxpZFwiKTtcblx0fVxuXG5cdGlmIChzY29wZSkge1xuXHRcdGlmICghX2NoZWNrVmFsaWRFbGVtZW50KHNjb3BlKSkge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiU2Vjb25kIHBhcmFtZXRlciBpcyBpbnZhbGlkXCIpO1xuXHRcdH1cblxuXHRcdHNjb3BlID0geihzY29wZSk7XG5cdH0gZWxzZSB7XG5cdFx0c2NvcGUgPSBfZG9jdW1lbnQ7XG5cdH1cblxuXHRyZXR1cm4gX2ZpbmQoc2NvcGUsIGVsZW0pO1xufVxuXG5mdW5jdGlvbiBub29wKCl7fVxuXG4oZnVuY3Rpb24gKCkge1xuXHR2YXIgc2NvcGU7XG5cblx0aWYgKCdBY3RpdmVYT2JqZWN0JyBpbiB3aW5kb3cpIHtcblx0XHRzY29wZSA9IG5ldyBBY3RpdmVYT2JqZWN0KFwiaHRtbGZpbGVcIik7XG5cblx0XHRzY29wZS5vcGVuKCk7XG5cdFx0c2NvcGUud3JpdGUoXCI8c2NyaXB0PjxcXC9zY3JpcHQ+XCIpO1xuXHRcdHNjb3BlLmNsb3NlKCk7XG5cdFx0Y2FjaGUucHVzaChzY29wZSk7XG5cblx0XHR6QXJyYXkgPSBzY29wZS5wYXJlbnRXaW5kb3cuQXJyYXk7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0dHJ5IHtcblx0XHRzY29wZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7XG5cblx0XHRzY29wZS5zdHlsZS53aWR0aCAgICAgICAgICAgID0gMDtcblx0XHRzY29wZS5zdHlsZS5oZWlnaHQgICAgICAgICAgICA9IDA7XG5cdFx0c2NvcGUuc3R5bGUuYm9yZGVyU3R5bGUgICAgPSBcIm5vbmVcIjtcblxuXHRcdGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NvcGUpO1xuXG5cdFx0ekFycmF5ID0gc2NvcGUuY29udGVudFdpbmRvdy5BcnJheTtcblxuXHRcdGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoc2NvcGUpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0ekFycmF5ID0gQXJyYXk7XG5cdH1cbn0pKCk7XG5cbi8vd2luZG93LiRcdD0gejtcbndpbmRvdy56XHQ9IHo7XG56LmZuXHRcdD0gekFycmF5LnByb3RvdHlwZTtcbl93aW5kb3dcdFx0PSB6KHdpbmRvdyk7XG5fZG9jdW1lbnRcdD0geihkb2N1bWVudCk7XG5cbnouZm4uZmluZCA9IGZ1bmN0aW9uIChzdHJFbGVtKSB7XG5cdGlmICh0eXBlb2Ygc3RyRWxlbSAhPT0gXCJzdHJpbmdcIikge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkZpcnN0IHBhcmFtYXRlciBvZiB6I2ZpbmQoKSBzaG91bGQgYmUgYSBzdHJpbmdcIik7XG5cdH1cblxuXHRyZXR1cm4gX2ZpbmQodGhpcywgc3RyRWxlbSk7XG59O1xuIiwidmFyIGFqYXhEZWZhdWx0cywgYWpheFR5cGVzLFxuXHRhamF4TWltZXNcdD0ge31cblxuYWpheERlZmF1bHRzID0ge1xuXHRtZXRob2Q6IFwiR0VUXCIsXG5cdHJlcXVlc3RUeXBlOiBcInRleHRcIixcblx0cmVzcG9uc2VUeXBlOiBcInRleHRcIixcblx0dXJsOiB3aW5kb3cubG9jYXRpb24gKyBcIlwiLFxuXHRxdWVyeTogbnVsbCxcblx0ZGF0YTogbnVsbCxcblx0c2V0dXA6IG5vb3AsXG5cdHN1Y2Nlc3M6IG5vb3AsXG5cdGVycm9yOiBub29wXG59O1xuXG5hamF4VHlwZXMgPSB7XG5cdHRleHQ6IGZ1bmN0aW9uIChkYXRhKSB7XG5cdFx0cmV0dXJuIChkYXRhIHx8IFwiXCIpICsgXCJcIjtcblx0fVxufTtcblxuei5hamF4ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcblx0dmFyIGRhdGEsXG5cdFx0cmVxID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cblx0b3B0aW9ucyA9IHouZXh0ZW5kKHtcblx0XHRjb250ZXh0OiByZXFcblx0fSwgYWpheERlZmF1bHRzLCBvcHRpb25zKTtcblxuXHRpZiAoIWFqYXhUeXBlc1tvcHRpb25zLnJlcXVlc3RUeXBlXSkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgb3B0aW9uIGByZXF1ZXN0VHlwZWBcIik7XG5cdH0gZWxzZSBpZiAoIWFqYXhUeXBlc1tvcHRpb25zLnJlc3BvbnNlVHlwZV0pIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIG9wdGlvbiBgcmVzcG9uc2VUeXBlYFwiKTtcblx0fVxuXG5cdGlmIChvcHRpb25zLnF1ZXJ5ICYmIH5bXCJIRUFEXCIsIFwiR0VUXCJdLmluZGV4T2Yob3B0aW9ucy5tZXRob2QudG9VcHBlckNhc2UoKSkpIHtcblx0XHRvcHRpb25zLnVybFx0Kz0gfm9wdGlvbnMudXJsLmluZGV4T2YoXCI/XCIpID8gXCImXCIgOiBcIj9cIjtcblx0XHRvcHRpb25zLnVybFx0Kz0gei5xdWVyeVN0cmluZyhvcHRpb25zLnF1ZXJ5KTtcblx0XHRvcHRpb25zLnVybFx0PSBvcHRpb25zLnVybC5yZXBsYWNlKC8oXFw/fCYpJi9nLCBcIiQxXCIpO1xuXHR9XG5cblx0cmVxLm9wZW4ob3B0aW9ucy5tZXRob2QsIG9wdGlvbnMudXJsLCB0cnVlKTtcblxuXHRyZXEub25sb2FkID0gZnVuY3Rpb24gKCkge1xuXHRcdHZhciByZXNwO1xuXG5cdFx0aWYgKHJlcS5zdGF0dXMgPj0gMjAwICYmIHJlcS5zdGF0dXMgPCA0MDApIHtcblx0XHRcdHJlc3AgPSBhamF4VHlwZXNbb3B0aW9ucy5yZXNwb25zZVR5cGVdLmNhbGwocmVxLCByZXEucmVzcG9uc2VUZXh0LCB0cnVlKTtcblx0XHRcdG9wdGlvbnMuc3VjY2Vzcy5jYWxsKG9wdGlvbnMuY29udGV4dCwgcmVzcCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdG9wdGlvbnMuZXJyb3IuY2FsbChvcHRpb25zLmNvbnRleHQsIHJlcS5zdGF0dXMsIHJlcS5zdGF0dXNUZXh0KTtcblx0XHR9XG5cdH07XG5cblx0cmVxLm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7XG5cdFx0b3B0aW9ucy5lcnJvci5jYWxsKG9wdGlvbnMuY29udGV4dCwgcmVxLnN0YXR1cywgcmVxLnN0YXR1c1RleHQpO1xuXHR9O1xuXG5cdGlmICghfltcIkhFQURcIiwgXCJHRVRcIl0uaW5kZXhPZihvcHRpb25zLm1ldGhvZC50b1VwcGVyQ2FzZSgpKSkge1xuXHRcdHJlcS5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04XCIpO1xuXHR9XG5cblx0aWYgKG9wdGlvbnMuZGF0YSkge1xuXHRcdG9wdGlvbnMuZGF0YSA9IGFqYXhUeXBlc1tvcHRpb25zLnJlcXVlc3RUeXBlXS5jYWxsKHJlcSwgb3B0aW9ucy5kYXRhLCBmYWxzZSk7XG5cdH1cblxuXHRvcHRpb25zLnNldHVwLmNhbGwocmVxLCByZXEpO1xuXG5cdHJlcS5zZW5kKG9wdGlvbnMuZGF0YSk7XG59O1xuIiwiYWpheERlZmF1bHRzLnJlcXVlc3RUeXBlXHQ9IFwiZGV0ZWN0XCI7XG5hamF4RGVmYXVsdHMucmVzcG9uc2VUeXBlXHQ9IFwiZGV0ZWN0XCI7XG5cbnoucmVnaXN0ZXJBamF4VHlwZSA9IGZ1bmN0aW9uICh0eXBlLCBtaW1lLCBmbikge1xuXHRpZiAoIWZuICYmIHR5cGVvZiBtaW1lID09PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRmblx0XHQ9IG1pbWU7XG5cdFx0bWltZVx0PSBmYWxzZTtcblx0fVxuXG5cdGFqYXhUeXBlc1t0eXBlXSA9IGZuO1xuXG5cdGlmIChtaW1lKSB7XG5cdFx0YWpheE1pbWVzW21pbWVdID0gdHlwZTtcblx0fVxufTtcblxuei5yZWdpc3RlckFqYXhUeXBlKFwiZGV0ZWN0XCIsIGZ1bmN0aW9uIChkYXRhLCBpc1Jlc3BvbnNlKSB7XG5cdHZhciBoZWFkZXIsXG5cdFx0dHlwZSA9IFwidGV4dFwiO1xuXG5cdGlmIChpc1Jlc3BvbnNlKSB7XG5cdFx0aGVhZGVyXHQ9IHRoaXMuZ2V0UmVzcG9uc2VIZWFkZXIoXCJDb250ZW50LVR5cGVcIikgfHwgXCJcIixcblx0XHRoZWFkZXJcdD0gaGVhZGVyLnNwbGl0KFwiO1wiKVswXS50cmltKCk7XG5cdFx0dHlwZVx0PSBhamF4TWltZXNbaGVhZGVyXSB8fCBcInRleHRcIjtcblx0fSBlbHNlIHtcblx0XHRpZiAoZGF0YSAmJiB0eXBlb2YgZGF0YSA9PT0gXCJvYmplY3RcIiAmJiBkYXRhLnRvU3RyaW5nID09PSAoe30pLnRvU3RyaW5nKSB7XG5cdFx0XHR0eXBlID0gXCJqc29uXCI7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGFqYXhUeXBlc1t0eXBlXS5jYWxsKHRoaXMsIGRhdGEsIGlzUmVzcG9uc2UpO1xufSk7XG5cbnoucmVnaXN0ZXJBamF4VHlwZShcImpzb25cIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIsIGZ1bmN0aW9uIChkYXRhLCBpc1Jlc3BvbnNlKSB7XG5cdHJldHVybiBpc1Jlc3BvbnNlID8gSlNPTi5wYXJzZShkYXRhKSA6IEpTT04uc3RyaW5naWZ5KGRhdGEpO1xufSk7XG5cbnoucmVnaXN0ZXJBamF4VHlwZShcImh0bWxcIiwgXCJ0ZXh0L2h0bWxcIiwgZnVuY3Rpb24gKGRhdGEsIGlzUmVzcG9uc2UpIHtcblx0dmFyIGRvYywgYXJyO1xuXG5cdGlmICghaXNSZXNwb25zZSkge1xuXHRcdHJldHVybiBkYXRhLm91dGVySFRNTDtcblx0fVxuXG5cdGFyclx0PSBuZXcgekFycmF5KCk7XG5cdGRvYyA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudChcIlwiKTtcblxuXHRkb2MuZG9jdW1lbnRFbGVtZW50LmlubmVySFRNTCA9IGRhdGE7XG5cblx0YXJyLnB1c2guYXBwbHkoYXJyLCBhcnIuc2xpY2UuY2FsbChkb2MuYm9keS5jaGlsZHJlbiwgMCkpO1xuXG5cdHJldHVybiBhcnI7XG59KTtcblxuei5yZWdpc3RlckFqYXhUeXBlKFwieG1sXCIsIFwidGV4dC94bWxcIiwgYWpheFhNTFBhcnNlcik7XG56LnJlZ2lzdGVyQWpheFR5cGUoXCJ4bWxcIiwgXCJhcHBsaWNhdGlvbi94bWxcIiwgYWpheFhNTFBhcnNlcik7XG5cbmZ1bmN0aW9uIGFqYXhYTUxQYXJzZXIoZGF0YSwgaXNSZXNwb25zZSkge1xuXHR2YXIgcGFyc2VyO1xuXG5cdGlmICghaXNSZXNwb25zZSkge1xuXHRcdHBhcnNlciA9IG5ldyBYTUxTZXJpYWxpemVyKCk7XG5cdFx0cmV0dXJuIHBhcnNlci5zZXJpYWxpemVUb1N0cmluZyhkYXRhKTtcblx0fVxuXG5cdGlmICh0aGlzLnJlc3BvbnNlWE1MKSB7XG5cdFx0cmV0dXJuIHRoaXMucmVzcG9uc2VYTUw7XG5cdH1cblxuXHRwYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG5cdHJldHVybiBwYXJzZXIucGFyc2VGcm9tU3RyaW5nKGRhdGEsIFwiYXBwbGljYXRpb24veG1sXCIpO1xufVxuIiwiei5mbi5hZGRDbGFzcyA9IF9lYWNoKF9hZGRDbGFzcyk7XG5cbnouZm4ucmVtb3ZlQ2xhc3MgPSBfZWFjaChfcmVtb3ZlQ2xhc3MpO1xuXG56LmZuLnRvZ2dsZUNsYXNzID0gX2VhY2goZnVuY3Rpb24gdG9nZ2xlQ2xhc3MoY2xhc3NOYW1lLCBmb3JjZSkge1xuXHR2YXIgZm47XG5cblx0aWYgKGZvcmNlID09PSB1bmRlZmluZWQpIHtcblx0XHRmbiA9IF9lbGVtSGFzQ2xhc3ModGhpcywgY2xhc3NOYW1lKSA/IF9yZW1vdmVDbGFzcyA6IF9hZGRDbGFzcztcblx0fSBlbHNlIHtcblx0XHRmbiA9IGZvcmNlID8gX2FkZENsYXNzIDogX3JlbW92ZUNsYXNzO1xuXHR9XG5cblx0Zm4uY2FsbCh0aGlzLCBjbGFzc05hbWUpO1xufSk7XG5cbnouZm4uaGFzQ2xhc3MgPSBmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG5cdHZhciBpID0gMCxcblx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0Zm9yICg7IGkgPCBsOyBpKyspIHtcblx0XHRpZiAoX2VsZW1IYXNDbGFzcyh0aGlzW2ldLCBjbGFzc05hbWUpKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZmFsc2U7XG59O1xuXG5mdW5jdGlvbiBfYWRkQ2xhc3MoY2xhc3NOYW1lKSB7XG5cdGlmIChcImNsYXNzTGlzdFwiIGluIHRoaXMpIHtcblx0XHR0aGlzLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtcblx0fSBlbHNlIHtcblx0XHR0aGlzLmNsYXNzTmFtZSArPSBcIiBcIiArIGNsYXNzTmFtZTtcblx0fVxufVxuXG5mdW5jdGlvbiBfcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7XG5cdHZhciByZWdleHA7XG5cblx0aWYgKFwiY2xhc3NMaXN0XCIgaW4gdGhpcykge1xuXHRcdHRoaXMuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO1xuXHR9IGVsc2Uge1xuXHRcdHRoaXMuY2xhc3NOYW1lID0gdGhpcy5jbGFzc05hbWUucmVwbGFjZShfY2xhc3NSZWdleHAoY2xhc3NOYW1lKSwgXCIgXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIF9jbGFzc1JlZ2V4cChjbGFzc05hbWUpIHtcblx0dmFyIHJlZ2V4cCA9IF9jYWNoZS5nZXQoXCJjbGFzcy5cIiArIGNsYXNzTmFtZSk7XG5cblx0aWYgKCFyZWdleHApIHtcblx0XHRyZWdleHAgPSBuZXcgUmVnRXhwKFwiKF58XFxcXGIpXCIgKyBjbGFzc05hbWUgKyBcIihcXFxcYnwkKVwiLCBcImdcIik7XG5cdFx0X2NhY2hlLnNldChcImNsYXNzLlwiICsgY2xhc3NOYW1lLCByZWdleHApO1xuXHR9XG5cblx0cmV0dXJuIHJlZ2V4cDtcbn1cblxuZnVuY3Rpb24gX2VsZW1IYXNDbGFzcyhlbGVtLCBjbGFzc05hbWUpIHtcblx0aWYgKFwiY2xhc3NMaXN0XCIgaW4gZWxlbSkge1xuXHRcdGlmIChlbGVtLmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cdH0gZWxzZSBpZiAoX2NsYXNzUmVnZXhwKGNsYXNzTmFtZSkudGVzdChlbGVtLmNsYXNzTmFtZSkpIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdHJldHVybiBmYWxzZTtcbn1cbiIsInouZm4uZGF0YSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdGlmIChrZXkgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIHRoaXMuc2V0RGF0YShrZXksIHZhbHVlKTtcblx0fSBlbHNlIGlmICh0aGlzLmxlbmd0aCkge1xuXHRcdHJldHVybiB0aGlzLmdldERhdGEoa2V5KTtcblx0fVxufTtcblxuei5mbi5zZXREYXRhID0gX2VhY2goZnVuY3Rpb24gX3NldERhdGEoa2V5LCB2YWx1ZSkge1xuXHR2YXIgZWxlbSA9IHRoaXM7XG5cblx0aWYgKFwiZGF0YXNldFwiIGluIGVsZW0pIHtcblx0XHRlbGVtLmRhdGFzZXRbX3RvQ2FtZWxDYXNlKGtleSldID0gdmFsdWU7XG5cdH0gZWxzZSB7XG5cdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoX3RvRGFzaGVzKGtleSksIHZhbHVlKTtcblx0fVxufSk7XG5cbnouZm4uZ2V0RGF0YSA9IGZ1bmN0aW9uIChrZXkpIHtcblx0dmFyIGVsZW0gPSB0aGlzWzBdO1xuXG5cdGlmICghZWxlbSkge1xuXHRcdHJldHVybjtcblx0fSBlbHNlIGlmIChrZXkgIT09IHVuZGVmaW5lZCkge1xuXHRcdGlmIChcImRhdGFzZXRcIiBpbiBlbGVtKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kYXRhc2V0W190b0NhbWVsQ2FzZShrZXkpXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKF90b0Rhc2hlcyhrZXkpKTtcblx0XHR9XG5cdH0gZWxzZSBpZiAoXCJkYXRhc2V0XCIgaW4gZWxlbSkge1xuXHRcdHJldHVybiBPYmplY3QuY3JlYXRlKGVsZW0uZGF0YXNldCk7XG5cdH1cblxuXHRyZXR1cm4gX2dldERhdGFBdHRycyhlbGVtLmF0dHJpYnV0ZXMpO1xufTtcblxuZnVuY3Rpb24gX2dldERhdGFBdHRycyhhdHRycykge1xuXHR2YXIgYXR0cixcblx0XHRpXHQ9IDAsXG5cdFx0bFx0PSBhdHRycy5sZW5ndGgsXG5cdFx0cmV0XHQ9IHt9O1xuXG5cdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0YXR0ciA9IGF0dHJzW2ldO1xuXG5cdFx0aWYgKGF0dHIubmFtZS5pbmRleE9mKFwiZGF0YS1cIikgPT09IDApIHtcblx0XHRcdHJldFtfdG9EYXNoZXMoYXR0ci5uYW1lKV0gPSBhdHRyLnZhbHVlO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiByZXQ7XG59XG5cbnouZGF0YSA9IGZ1bmN0aW9uIChlbGVtLCBrZXksIHZhbHVlKSB7XG5cdHooZWxlbSkuZGF0YShrZXksIHZhbHVlKTtcbn07XG4iLCJ6LmZuLm9uID0gei5mbi5iaW5kID0gX2VhY2goZnVuY3Rpb24gX29uKGV2ZW50VHlwZSwgZm4pIHtcblx0dGhpcy5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgZm4sIGZhbHNlKTtcbn0pO1xuXG56LmZuLm9uZSA9IF9lYWNoKGZ1bmN0aW9uIChldmVudCwgZm4pIHtcblx0dmFyIGNhbGxlZCA9IGZhbHNlO1xuXG5cdHoodGhpcykub24oZXZlbnQsIGZ1bmN0aW9uIG9uY2VGbihlKSB7XG5cdFx0aWYgKGNhbGxlZCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNhbGxlZCA9IHRydWU7XG5cdFx0eih0aGlzKS5vZmYoZXZlbnQsIG9uY2VGbik7XG5cblx0XHRmbi5jYWxsKHRoaXMsIGUpO1xuXHR9KTtcbn0pO1xuXG56LmZuLm9mZiA9IHouZm4udW5iaW5kID0gX2VhY2goZnVuY3Rpb24gX29mZihldmVudFR5cGUsIGZuKSB7XG5cdHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGZuLCBmYWxzZSk7XG59KTtcblxuei5mbi50cmlnZ2VyID0gZnVuY3Rpb24gKGV2ZW50VHlwZSwgZGF0YSkge1xuXHR2YXIgZXZlbnQsXG5cdFx0aSA9IDAsXG5cdFx0bCA9IHRoaXMubGVuZ3RoO1xuXG5cdGlmIChkYXRhID09PSB1bmRlZmluZWQpIHtcblx0XHRkYXRhID0ge307XG5cdH1cblxuXHRkYXRhLmV2ZW50ID0gZGF0YTtcblxuXHR0cnkge1xuXHRcdGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KGV2ZW50VHlwZSwge1xuXHRcdFx0ZGV0YWlsOiBkYXRhXG5cdFx0fSk7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50Jyk7XG5cdFx0ZXZlbnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50VHlwZSwgdHJ1ZSwgdHJ1ZSwgZGF0YSk7XG5cdH1cblxuXHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdHRoaXNbaV0uZGlzcGF0Y2hFdmVudChldmVudCk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG4iLCJmdW5jdGlvbiBfaXNXaXRoRnVuY3Rpb24oZWxlbSwgZm4pIHtcblx0cmV0dXJuIGZuLmNhbGwoZWxlbSwgZWxlbSk7XG59XG5cbmZ1bmN0aW9uIF9pc1dpdGhFbGVtZW50KGVsZW0xLCBlbGVtMikge1xuXHRyZXR1cm4gZWxlbTEgPT09IGVsZW0yO1xufVxuXG56LmZuLmlzID0gKGZ1bmN0aW9uIF9pcygpIHtcblx0dmFyIG1hdGNoZXMsXG5cdFx0Ym9keSA9IGRvY3VtZW50LmJvZHk7XG5cblx0bWF0Y2hlc1x0PSBib2R5Lm1hdGNoZXMgfHwgYm9keS5tYXRjaGVzU2VsZWN0b3IgfHwgYm9keS53ZWJraXRNYXRjaGVzU2VsZWN0b3I7XG5cdG1hdGNoZXMgPSBtYXRjaGVzIHx8IGJvZHkubW96TWF0Y2hlc1NlbGVjdG9yIHx8IGJvZHkubXNNYXRjaGVzU2VsZWN0b3IgfHwgYm9keS5vTWF0Y2hlc1NlbGVjdG9yO1xuXG5cdHJldHVybiBmdW5jdGlvbiBpcyhzZWxlY3Rvcikge1xuXHRcdHZhciBfaXNXaXRoLCByZXQsXG5cdFx0XHRpXHQ9IDAsXG5cdFx0XHRsXHQ9IHRoaXMubGVuZ3RoO1xuXG5cdFx0c3dpdGNoICh0eXBlb2Ygc2VsZWN0b3IpIHtcblx0XHRcdGNhc2UgXCJzdHJpbmdcIjpcblx0XHRcdFx0X2lzV2l0aCA9IG1hdGNoZXM7XG5cdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSBcImZ1bmN0aW9uXCI6XG5cdFx0XHRcdF9pc1dpdGggPSBfaXNXaXRoRnVuY3Rpb247XG5cdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSBcIm9iamVjdFwiOlxuXHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0c2VsZWN0b3IgaW5zdGFuY2VvZiBFbGVtZW50IHx8XG5cdFx0XHRcdFx0c2VsZWN0b3IgaW5zdGFuY2VvZiBXaW5kb3cgfHxcblx0XHRcdFx0XHRzZWxlY3RvciBpbnN0YW5jZW9mIERvY3VtZW50XG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdF9pc1dpdGggPSBfaXNXaXRoRWxlbWVudDtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNpcyBpcyBpbnZhbGlkXCIpO1xuXHRcdFx0XHR9XG5cdFx0XHRicmVhaztcblxuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIG9mIHojaXMgaXMgaW52YWxpZFwiKTtcblx0XHRcdC8vYnJlYWs7XG5cdFx0fVxuXG5cdFx0Zm9yICg7IGkgPCBsOyBpKyspIHtcblx0XHRcdHJldCA9IF9pc1dpdGgodGhpc1tpXSwgc2VsZWN0b3IpO1xuXG5cdFx0XHRpZiAocmV0KSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9O1xufSkoKTtcbiIsInouZm4uaGlkZSA9IF9lYWNoKGZ1bmN0aW9uIGhpZGUoKSB7XG5cdHRoaXMuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXHRyZXR1cm4gdGhpcztcbn0pO1xuXG56LmZuLnNob3cgPSBfZWFjaChmdW5jdGlvbiBzaG93KCkge1xuXHR0aGlzLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuXHRyZXR1cm4gdGhpcztcbn0pO1xuXG56LmZuLmNsb25lID0gZnVuY3Rpb24gKGRlZXApIHtcblx0dmFyIGkgPSAwO1xuXG5cdGlmIChkZWVwID09PSB1bmRlZmluZWQgfHwgZGVlcCA9PT0gbnVsbCkge1xuXHRcdGRlZXAgPSBmYWxzZTtcblx0fVxuXG5cdGZvciAoOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdHRoaXNbaV0gPSB0aGlzW2ldLmNsb25lTm9kZShkZWVwKTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufTtcblxuei5mbi5odG1sID0gZnVuY3Rpb24gKHZhbHVlKSB7XG5cdHZhciBpLCBsO1xuXG5cdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIHRoaXNbMF0uaW5uZXJIVE1MO1xuXHR9XG5cblx0Zm9yIChpID0gMCwgbCA9IHRoaXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG5cdFx0dGhpc1tpXS5pbm5lckhUTUwgPSB2YWx1ZTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufTtcblxuei5mbi50ZXh0ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG5cdHZhciBpLCBsO1xuXG5cdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIHRoaXMudGV4dENvbnRlbnQ7XG5cdH1cblxuXHRmb3IgKGkgPSAwLCBsID0gdGhpcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcblx0XHR0aGlzW2ldLnRleHRDb250ZW50ID0gdmFsdWU7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cbnouZm4uZ2V0QXR0ciA9IGZ1bmN0aW9uIChrZXkpIHtcblx0aWYgKCFrZXkpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNnZXRBdHRyIGlzIHJlcXVpcmVkXCIpO1xuXHR9XG5cblx0cmV0dXJuIHRoaXNbMF0gJiYgdGhpc1swXS5nZXRBdHRyaWJ1dGUoa2V5KTtcbn07XG5cbnouZm4uc2V0QXR0ciA9IF9lYWNoKGZ1bmN0aW9uIHNldEF0dHIoa2V5LCB2YWx1ZSkge1xuXHRpZiAoIWtleSkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkZpcnN0IHBhcmFtZXRlciBvZiB6I3NldEF0dHIgaXMgcmVxdWlyZWRcIik7XG5cdH0gZWxzZSBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIlNlY29uZCBwYXJhbWV0ZXIgb2YgeiNzZXRBdHRyIGlzIHJlcXVpcmVkXCIpO1xuXHR9XG5cblx0dGhpcy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG59KTtcblxuei5mbi5hdHRyID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcblx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gdGhpcy5nZXRBdHRyKGtleSk7XG5cdH1cblxuXHR0aGlzLnNldEF0dHIoa2V5LCB2YWx1ZSk7XG5cdHJldHVybiB0aGlzO1xufTtcblxuei5mbi5yZXBsYWNlV2l0aCA9IHouZm4ucmVwbGFjZSA9IF9lYWNoKGZ1bmN0aW9uIHJlcGxhY2VXaXRoKHZhbHVlKSB7XG5cdHZhciBzY3JpcHRzO1xuXG5cdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XG5cdFx0dGhpcy5yZW1vdmUoKTtcblx0fSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIHpBcnJheSB8fCB2YWx1ZSBpbnN0YW5jZW9mIEV2ZW50VGFyZ2V0KSB7XG5cdFx0c2NyaXB0cyA9IF9leHRyYWN0U2NyaXB0cyh2YWx1ZSk7XG5cblx0XHRpZiAodmFsdWUgaW5zdGFuY2VvZiB6QXJyYXkpIHtcblx0XHRcdHZhbHVlID0gdmFsdWVbMF07XG5cdFx0fVxuXG5cdFx0dGhpcy5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZCh2YWx1ZSwgdGhpcyk7XG5cblx0XHRfYWRkU2NyaXB0cyhzY3JpcHRzKTtcblx0fSBlbHNlIHtcblx0XHR0aGlzLm91dGVySFRNTCA9IHZhbHVlO1xuXHR9XG59KTtcblxuZnVuY3Rpb24gX2V4dHJhY3RTY3JpcHRzKGVsZW0pIHtcblx0dmFyIHNjcmlwdHMsXG5cdFx0aVx0PSAwLFxuXHRcdHJldFx0PSBbXTtcblxuXHRlbGVtXHQ9IHooZWxlbSk7XG5cdHNjcmlwdHNcdD0gZWxlbS5maW5kKFwic2NyaXB0XCIpO1xuXG5cdGZvciAoOyBpIDwgc2NyaXB0cy5sZW5ndGg7IGkrKykge1xuXHRcdHJldC5wdXNoKHtcblx0XHRcdHNyYzogc2NyaXB0c1tpXS5zcmMsXG5cdFx0XHR0ZXh0OiBzY3JpcHRzW2ldLnRleHRDb250ZW50XG5cdFx0fSk7XG5cblx0XHRzY3JpcHRzW2ldLnJlbW92ZSgpO1xuXHR9XG5cblx0cmV0dXJuIHJldDtcbn1cblxuZnVuY3Rpb24gX2FkZFNjcmlwdHMoc2NyaXB0cykge1xuXHR2YXIgc2NyaXB0LFxuXHRcdGkgPSAwO1xuXG5cdGZvciAoOyBpIDwgc2NyaXB0cy5sZW5ndGg7IGkrKykge1xuXHRcdHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG5cblx0XHRpZiAoc2NyaXB0c1tpXS5zcmMpIHtcblx0XHRcdHNjcmlwdC5zcmMgPSBzY3JpcHRzW2ldLnNyYztcblx0XHR9IGVsc2UgaWYgKHNjcmlwdHNbaV0udGV4dCkge1xuXHRcdFx0c2NyaXB0LnRleHQgPSBzY3JpcHRzW2ldLnRleHQ7XG5cdFx0fVxuXG5cdFx0ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcblx0fVxufVxuXG56LmZuLmFwcGVuZCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHR2YXIgZWxlbWVudCxcblx0XHRpID0gMCxcblx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNhcHBlbmQgaXMgcmVxdWlyZWQuXCIpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuXHRcdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHR0aGlzW2ldLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgdmFsdWUpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cblx0aWYgKHZhbHVlIGluc3RhbmNlb2YgekFycmF5KSB7XG5cdFx0dmFsdWUgPSB2YWx1ZVswXTtcblx0fVxuXG5cdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0dGhpc1tpXS5hcHBlbmRDaGlsZCh2YWx1ZSk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cbnouZm4ucHJlcGVuZCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHR2YXIgZWxlbWVudCxcblx0XHRpID0gMCxcblx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNwcmVwZW5kIGlzIHJlcXVpcmVkLlwiKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcblx0XHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdFx0dGhpc1tpXS5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCB2YWx1ZSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblxuXHRpZiAodmFsdWUgaW5zdGFuY2VvZiB6QXJyYXkpIHtcblx0XHR2YWx1ZSA9IHZhbHVlWzBdO1xuXHR9XG5cblx0Zm9yICg7IGkgPCBsOyBpKyspIHtcblx0XHR0aGlzW2ldLmluc2VydEJlZm9yZSh2YWx1ZSwgdGhpc1tpXS5maXJzdENoaWxkKTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufTtcblxuei5mbi5hZnRlciA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHR2YXIgZWxlbWVudCxcblx0XHRpID0gMCxcblx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNhcHBlbmQgaXMgcmVxdWlyZWQuXCIpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuXHRcdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHR0aGlzW2ldLmluc2VydEFkamFjZW50SFRNTChcImFmdGVyZW5kXCIsIHZhbHVlKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdGlmICh2YWx1ZSBpbnN0YW5jZW9mIHpBcnJheSkge1xuXHRcdHZhbHVlID0gdmFsdWVbMF07XG5cdH1cblxuXHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdHRoaXNbaV0uaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYWZ0ZXJlbmRcIiwgdmFsdWUub3V0ZXJIVE1MKTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufTtcblxuei5mbi5jc3MgPSBmdW5jdGlvbiAocnVsZSwgdmFsdWUpIHtcblx0dmFyIGkgPSAwLFxuXHRcdGwgPSB0aGlzLmxlbmd0aDtcblxuXHRpZiAocnVsZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIG9mIHojY3NzIGlzIHJlcXVpcmVkLlwiKTtcblx0fVxuXG5cdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGdldENvbXB1dGVkU3R5bGUodGhpc1swXSlbcnVsZV07XG5cdH0gZWxzZSB7XG5cdFx0cnVsZSA9IHJ1bGUucmVwbGFjZSgvLS4vZywgZnVuY3Rpb24gKHJlc3VsdCkge1xuXHRcdCAgICByZXR1cm4gcmVzdWx0LnN1YnN0cigxKS50b1VwcGVyQ2FzZSgpO1xuXHRcdH0pO1xuXG5cdFx0Zm9yICg7IGkgPCBsOyBpKyspIHtcblx0XHRcdHRoaXNbaV0uc3R5bGVbcnVsZV0gPSB2YWx1ZTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cbnouZm4ucmVtb3ZlID0gX2VhY2goZnVuY3Rpb24gcmVtb3ZlKCkge1xuXHR0aGlzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcyk7XG59KTtcblxuei5mbi5lbXB0eSA9IF9lYWNoKGZ1bmN0aW9uIGVtcHR5KCkge1xuXHR0aGlzLmlubmVySFRNTCA9ICcnO1xufSk7XG4iLCJ2YXIgX3NlbGVjdG9yc0NhY2hlLFxuXHRfc2VsZWN0b3JzID0ge307XG5cbmZ1bmN0aW9uIF9maW5kKHNjb3BlLCBzdHJFbGVtKSB7XG5cdHZhciByZXQgPSBuZXcgekFycmF5KCk7XG5cblx0c2NvcGUuZm9yRWFjaChmdW5jdGlvbiBfZmluZEZvckVhY2goc2NvcGVkRWxlbSkge1xuXHRcdHJldC5wdXNoLmFwcGx5KHJldCwgX3NlbGVjdChzY29wZWRFbGVtLCBzdHJFbGVtKSk7XG5cdH0pO1xuXG5cdHJldHVybiByZXQ7XG59XG5cbmZ1bmN0aW9uIF9zZWxlY3Qoc2NvcGVkRWxlbSwgc3RyRWxlbSkge1xuXHRpZiAoIX5zdHJFbGVtLmluZGV4T2YoXCI6XCIpIHx8IF9zZWxlY3RvcnNDYWNoZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIHNjb3BlZEVsZW0ucXVlcnlTZWxlY3RvckFsbChzdHJFbGVtKTtcblx0fVxuXG5cdGlmIChfc2VsZWN0b3JzQ2FjaGUgPT09IGZhbHNlKSB7XG5cdFx0X2dlbmVyYXRlU2VsZWN0b3JzQ2FjaGUoKTtcblx0fVxuXG5cdGlmICghc3RyRWxlbS5tYXRjaChfc2VsZWN0b3JzQ2FjaGUpKSB7XG5cdFx0cmV0dXJuIHNjb3BlZEVsZW0ucXVlcnlTZWxlY3RvckFsbChzdHJFbGVtKTtcblx0fVxuXG5cdHJldHVybiBfc2VsZWN0MihzY29wZWRFbGVtLCBzdHJFbGVtKTtcbn1cblxuZnVuY3Rpb24gX3NlbGVjdDIoc2NvcGVkRWxlbSwgc3RyRWxlbSkge1xuXHR2YXIgZW50cnksIHNlbGVjdG9ycyxcblx0XHRzY29wZVx0PSBuZXcgekFycmF5KHNjb3BlZEVsZW0pLFxuXHRcdGN1cnJlbnRcdD0gXCJcIixcblx0XHRlbnRyaWVzXHQ9IHN0ckVsZW0uc3BsaXQoL1xccysvKTtcblxuXHR3aGlsZSAoZW50cnkgPSBlbnRyaWVzLnNoaWZ0KCkpIHtcblx0XHRzZWxlY3RvcnMgPSBlbnRyeS5tYXRjaChfc2VsZWN0b3JzQ2FjaGUpO1xuXG5cdFx0aWYgKCFzZWxlY3RvcnMpIHtcblx0XHRcdGN1cnJlbnQgKz0gZW50cnkgKyBcIiBcIjtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGN1cnJlbnRcdCs9IGVudHJ5LnJlcGxhY2UoX3NlbGVjdG9yc0NhY2hlLCBcIlwiKSB8fCBcIipcIjtcblx0XHRlbnRyeVx0PSBuZXcgekFycmF5KCk7XG5cblx0XHRzY29wZS5mb3JFYWNoKGZ1bmN0aW9uIF9zZWxlY3RGb3JFYWNoKHNjb3BlZEVsZW0pIHtcblx0XHRcdHZhciByZXQgPSBuZXcgekFycmF5KCk7XG5cblx0XHRcdHNlbGVjdG9ycy5mb3JFYWNoKGZ1bmN0aW9uIHNlbGVjdG9yc0ZvckVhY2goc2VsZWN0b3IpIHtcblx0XHRcdFx0cmV0LnB1c2guYXBwbHkocmV0LCBfc2VsZWN0b3JzW3NlbGVjdG9yXS5jYWxsKHNjb3BlZEVsZW0sIGN1cnJlbnQpKTtcblx0XHRcdH0pO1xuXG5cdFx0XHRlbnRyeS5wdXNoLmFwcGx5KGVudHJ5LCByZXQpO1xuXHRcdH0pO1xuXG5cdFx0c2NvcGVcdD0gZW50cnk7XG5cdFx0Y3VycmVudFx0PSBcIlwiO1xuXHR9XG5cblx0aWYgKGN1cnJlbnQpIHtcblx0XHRlbnRyeSA9IG5ldyB6QXJyYXkoKTtcblxuXHRcdHNjb3BlLmZvckVhY2goZnVuY3Rpb24gY3VycmVudEZvckVhY2goc2NvcGVkRWxlbSkge1xuXHRcdFx0ZW50cnkucHVzaC5hcHBseShlbnRyeSwgc2NvcGVkRWxlbS5xdWVyeVNlbGVjdG9yQWxsKGN1cnJlbnQpKTtcblx0XHR9KTtcblxuXHRcdHNjb3BlID0gZW50cnk7XG5cdH1cblxuXHRyZXR1cm4gc2NvcGU7XG59XG5cbmZ1bmN0aW9uIF9nZW5lcmF0ZVNlbGVjdG9yc0NhY2hlKCkge1xuXHR2YXIgc2VsZWN0b3JzXHQ9IE9iamVjdC5rZXlzKF9zZWxlY3RvcnMpLmpvaW4oXCJ8XCIpLnJlcGxhY2UoLzovZywgXCJcIik7XG5cdF9zZWxlY3RvcnNDYWNoZVx0PSBuZXcgUmVnRXhwKFwiOihcIiArIHNlbGVjdG9ycyArIFwiKVwiLCBcImdcIik7XG59XG4iLCJ6LnJlZ2lzdGVyU2VsZWN0b3IgPSBmdW5jdGlvbiAoc2VsZWN0b3IsIGZuKSB7XG5cdGlmICghc2VsZWN0b3IgfHwgdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIG9mIHojcmVnaXN0ZXJTZWxlY3RvciBtdXN0IGJlIGEgc3RyaW5nIHNlbGVjdG9yXCIpO1xuXHR9IGVsc2UgaWYgKCFmbiB8fCB0eXBlb2YgZm4gIT09IFwiZnVuY3Rpb25cIikge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIlNlY29uZCBwYXJhbWV0ZXIgb2YgeiNyZWdpc3RlclNlbGVjdG9yIG11c3QgYmUgYSBmdW5jdGlvblwiKTtcblx0fVxuXG5cdGlmIChzZWxlY3RvclswXSAhPT0gXCI6XCIpIHtcblx0XHRzZWxlY3RvciA9IFwiOlwiICsgc2VsZWN0b3I7XG5cdH1cblxuXHRfc2VsZWN0b3JzQ2FjaGVcdFx0XHQ9IGZhbHNlO1xuXHRfc2VsZWN0b3JzW3NlbGVjdG9yXVx0PSBmbjtcbn07XG5cbnoucmVnaXN0ZXJTZWxlY3RvcihcIjpmaXJzdFwiLCBmdW5jdGlvbiBzZWxlY3RvckZpcnN0KHF1ZXJ5KSB7XG5cdHJldHVybiB6KHRoaXMucXVlcnlTZWxlY3RvcihxdWVyeSkpO1xufSk7XG5cbnoucmVnaXN0ZXJTZWxlY3RvcihcIjppbnB1dFwiLCAoZnVuY3Rpb24gc2VsZWN0b3JGaXJzdCgpIHtcblx0dmFyIHRhZ3MgPSBcIklOUFVULFRFWFRBUkVBLFNFTEVDVCxCVVRUT05cIi5zcGxpdChcIixcIik7XG5cblx0ZnVuY3Rpb24gZmlsdGVyKGVsZW1lbnQpIHtcblx0XHRyZXR1cm4gfnRhZ3MuaW5kZXhPZihlbGVtZW50LnRhZ05hbWUpO1xuXHR9XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHNlbGVjdG9ySW5wdXQocXVlcnkpIHtcblx0XHR2YXIgZWxlbWVudHMgPSBuZXcgekFycmF5KCk7XG5cblx0XHRlbGVtZW50cy5wdXNoLmFwcGx5KGVsZW1lbnRzLCBbXS5maWx0ZXIuY2FsbCh0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwocXVlcnkpLCBmaWx0ZXIpKTtcblxuXHRcdHJldHVybiBlbGVtZW50cztcblx0fTtcbn0pKCkpO1xuIiwiei5mbi5wYXJlbnQgPSBfZWFjaE5ldyhmdW5jdGlvbiBwYXJlbnQoKSB7XG5cdHJldHVybiB0aGlzLnBhcmVudE5vZGU7XG59KTtcblxuei5mbi5uZXh0ID0gX2VhY2hOZXcoZnVuY3Rpb24gbmV4dCgpIHtcblx0cmV0dXJuIHRoaXMubmV4dEVsZW1lbnRTaWJsaW5nO1xufSk7XG5cbnouZm4ucHJldiA9IHouZm4ucHJldmlvdXMgPSBfZWFjaE5ldyhmdW5jdGlvbiBwcmV2KCkge1xuXHRyZXR1cm4gdGhpcy5wcmV2aW91c0VsZW1lbnRTaWJsaW5nO1xufSk7XG5cbnouZm4uc2libGluZ3MgPSBfZWFjaE5ldyhmdW5jdGlvbiBzaWJsaW5ncygpIHtcblx0cmV0dXJuIFtdLmZpbHRlci5jYWxsKHRoaXMucGFyZW50Tm9kZS5jaGlsZHJlbiwgZnVuY3Rpb24oY2hpbGQpIHtcblx0XHRyZXR1cm4gY2hpbGQgIT09IHRoaXM7XG5cdH0sIHRoaXMpO1xufSk7XG5cbnouZm4ubmV4dEFsbCA9IF9lYWNoTmV3KGZ1bmN0aW9uIG5leHRBbGwoKXtcblx0cmV0dXJuIGRpcih0aGlzLCBcIm5leHRFbGVtZW50U2libGluZ1wiKTtcbn0pO1xuXG56LmZuLnByZXZBbGwgPSBfZWFjaE5ldyhmdW5jdGlvbiBwcmV2QWxsKCl7XG5cdHJldHVybiBkaXIodGhpcywgXCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nXCIpO1xufSk7XG5cbnouZm4uY2hpbGRyZW4gPSBfZWFjaE5ldyhmdW5jdGlvbiBjaGlsZHJlbihzZWxlY3Rvcikge1xuXHRyZXR1cm4gdGhpcy5jaGlsZHJlbjtcbn0pO1xuIiwidmFyIHJlZ2V4cERhc2hcdFx0PSAvLSguKS9nLFxuXHRyZWdleHBVcHBlckNhc2VcdD0gLyg/IV4pKFtBLVpdKS9nO1xuXG5mdW5jdGlvbiBfdG9DYW1lbENhc2Uoc3RyaW5nKSB7XG5cdHJldHVybiBzdHJpbmcudG9Mb3dlckNhc2UoKS5yZXBsYWNlKHJlZ2V4cERhc2gsIF90b0NhbWVsQ2FzZUhlbHBlcik7XG59XG5cbmZ1bmN0aW9uIF90b0NhbWVsQ2FzZUhlbHBlcihtYXRjaCwgZ3JvdXApIHtcblx0cmV0dXJuIGdyb3VwLnRvVXBwZXJDYXNlKCk7XG59XG5cbmZ1bmN0aW9uIF90b0Rhc2hlcyhzdHJpbmcpIHtcblx0cmV0dXJuIHN0cmluZy5yZXBsYWNlKHJlZ2V4cFVwcGVyQ2FzZSwgX3RvRGFzaGVzSGVscGVyKS50b0xvd2VyQ2FzZSgpO1xufVxuXG5mdW5jdGlvbiBfdG9EYXNoZXNIZWxwZXIobWF0Y2gsIGdyb3VwKSB7XG5cdHJldHVybiAnLScgKyBncm91cC50b0xvd2VyQ2FzZSgpO1xufVxuXG52YXIgX2NhY2hlID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIGNhY2hlO1xuXG5cdGlmIChcIk1hcFwiIGluIHdpbmRvdykge1xuXHRcdHJldHVybiBuZXcgTWFwKCk7XG5cdH1cblxuXHRjYWNoZSA9IHt9O1xuXG5cdHJldHVybiB7XG5cdFx0c2V0OiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuXHRcdFx0Y2FjaGVba2V5XSA9IHZhbHVlO1xuXHRcdH0sXG5cdFx0Z2V0OiBmdW5jdGlvbiAoa2V5KSB7XG5cdFx0XHRyZXR1cm4gY2FjaGVba2V5XTtcblx0XHR9XG5cdH07XG59KTtcblxuZnVuY3Rpb24gX2NoZWNrVmFsaWRFbGVtZW50KGVsZW0pIHtcblx0aWYgKGVsZW0gaW5zdGFuY2VvZiB6QXJyYXkpIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdGlmIChlbGVtIGluc3RhbmNlb2YgRWxlbWVudCB8fCBlbGVtIGluc3RhbmNlb2YgV2luZG93IHx8IGVsZW0gaW5zdGFuY2VvZiBEb2N1bWVudCkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBlbGVtID09PSBcInN0cmluZ1wiKSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cbn1cblxuZnVuY3Rpb24gX2VhY2goZm4pIHtcblx0cmV0dXJuIGZ1bmN0aW9uIHJ1bkVhY2goKSB7XG5cdFx0dmFyIGlcdD0gMCxcblx0XHRcdGxcdD0gdGhpcy5sZW5ndGg7XG5cblx0XHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdFx0Zm4uYXBwbHkodGhpc1tpXSwgYXJndW1lbnRzKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fTtcbn1cblxuZnVuY3Rpb24gX2VhY2hOZXcoZm4pIHtcblx0cmV0dXJuIGZ1bmN0aW9uIHJ1bkVhY2goKSB7XG5cdFx0dmFyIHJldCxcblx0XHRcdGlcdD0gMCxcblx0XHRcdGxcdD0gdGhpcy5sZW5ndGgsXG5cdFx0XHRhcnJcdD0gbmV3IHpBcnJheSgpO1xuXG5cdFx0Zm9yICg7IGkgPCBsOyBpKyspIHtcblx0XHRcdHJldCA9IGZuLmFwcGx5KHRoaXNbaV0sIGFyZ3VtZW50cyk7XG5cblx0XHRcdGlmIChyZXQpIHtcblx0XHRcdFx0aWYgKEFycmF5LmlzQXJyYXkocmV0KSAmJiByZXQubGVuZ3RoIHx8IHJldCBpbnN0YW5jZW9mIEhUTUxDb2xsZWN0aW9uKSB7XG5cdFx0XHRcdFx0YXJyLnB1c2guYXBwbHkoYXJyLCByZXQpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGFyci5wdXNoKHJldCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gYXJyO1xuXHR9O1xufVxuXG5mdW5jdGlvbiBkaXIoZWxlbSwga2V5KSB7XG5cdHZhciBtYXRjaGVkID0gbmV3IHpBcnJheSgpO1xuXG5cdHdoaWxlIChlbGVtW2tleV0gJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSkge1xuXHRcdGVsZW0gPSBlbGVtW2tleV07XG5cdFx0bWF0Y2hlZC5wdXNoKGVsZW0pO1xuXHR9XG5cblx0cmV0dXJuIG1hdGNoZWQ7XG59XG5cbnouZGVlcEV4dGVuZCA9IGZ1bmN0aW9uIF9leHRlbmQoZGVlcCkge1xuXHR2YXIgb2JqLCB0YXJnZXQsXG5cdFx0aSA9IDI7XG5cblx0aWYgKHR5cGVvZiBkZWVwID09PSBcIm9iamVjdFwiKSB7XG5cdFx0dGFyZ2V0XHQ9IGRlZXAgfHwge307XG5cdFx0ZGVlcFx0PSBJbmZpbml0eTtcblx0fSBlbHNlIHtcblx0XHRkZWVwXHQ9IGRlZXAgPT09IHRydWUgPyBJbmZpbml0eSA6IChkZWVwIHwgMCk7XG5cdFx0dGFyZ2V0XHQ9IGFyZ3VtZW50c1sxXSB8fCB7fTtcblx0fVxuXG5cdGZvciAoOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0b2JqID0gYXJndW1lbnRzW2ldO1xuXG5cdFx0aWYgKCFvYmopIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGtleSBpbiBvYmopIHtcblx0XHRcdGlmIChvYmouaGFzT3duUHJvcGVydHkoa2V5KSkge1xuXHRcdFx0XHRpZiAoZGVlcCAmJiB0eXBlb2Ygb2JqW2tleV0gPT09IFwib2JqZWN0XCIpIHtcblx0XHRcdFx0XHRfZXh0ZW5kKGRlZXAgLSAxLCB0YXJnZXRba2V5XSwgb2JqW2tleV0pO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRhcmdldFtrZXldID0gb2JqW2tleV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxuei5leHRlbmQgPSBmdW5jdGlvbiAoKSB7XG5cdFtdLnVuc2hpZnQuY2FsbChhcmd1bWVudHMsIDApO1xuXHRyZXR1cm4gei5kZWVwRXh0ZW5kLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG59O1xuXG56LmZuLmVhY2ggPSBfZWFjaChmdW5jdGlvbiBlYWNoKGZuKSB7XG5cdGZuLmNhbGwodGhpcywgdGhpcyk7XG5cdHJldHVybiB0aGlzO1xufSk7XG5cbnoucXVlcnlTdHJpbmcgPSBmdW5jdGlvbiAob2JqLCBwcmVmaXgpIHtcblx0dmFyIGksIGtleSwgdmFsLFxuXHRcdHN0cmluZ3MgPSBbXTtcblxuXHRmb3IgKGkgaW4gb2JqKSB7XG5cdFx0aWYgKG9iai5oYXNPd25Qcm9wZXJ0eShpKSkge1xuXHRcdFx0aWYgKHByZWZpeCkge1xuXHRcdFx0XHRrZXkgPSBwcmVmaXggKyBcIltcIiArIGkgKyBcIl1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGtleSA9IGk7XG5cdFx0XHR9XG5cblx0XHRcdHZhbCA9IG9ialtpXTtcblxuXHRcdFx0aWYgKHZhbCAmJiB0eXBlb2YgdmFsID09PSBcIm9iamVjdFwiKSB7XG5cdFx0XHRcdHN0cmluZ3MucHVzaCh6LnF1ZXJ5U3RyaW5nKHZhbCwga2V5KSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzdHJpbmdzLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGtleSkgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gc3RyaW5ncy5qb2luKFwiJlwiKTtcbn07XG4iLCJ9KSh3aW5kb3csIGRvY3VtZW50KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==