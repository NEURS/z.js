!function(t,e){function n(t,e){if(t instanceof C)return t;if(t instanceof Element||t instanceof Window||t instanceof Document)return new C(t);if(void 0===t||null===t)return new C;if("string"!=typeof t)throw new Error("First parameter is invalid");if(e){if(!T(e))throw new Error("Second parameter is invalid");e=n(e)}else e=j;return d(e,t)}function r(){}function i(t,e){var n;return e?this.responseXML?this.responseXML:(n=new DOMParser,n.parseFromString(t,"application/xml")):(n=new XMLSerializer,n.serializeToString(t))}function o(t){"classList"in this?this.classList.add(t):this.setAttribute("class",this.getAttribute("class")+" "+t)}function s(t){var e;"classList"in this?this.classList.remove(t):(e=this.getAttribute("class").replace(a(t)," "),this.setAttribute("class",e))}function a(t){var e=U.get("class."+t);return e||(e=new RegExp("(^|\\b)"+t+"(\\b|$)","g"),U.set("class."+t,e)),e}function u(t,e){if("classList"in t){if(t.classList.contains(e))return!0}else if(a(e).test(t.className))return!0;return!1}function f(t){for(var e,n=0,r=t.length,i={};r>n;n++)e=t[n],0===e.name.indexOf("data-")&&(i[y(e.name.replace(/^data-/,""))]=e.value);return i}function c(t,e){return e.call(t,t)}function l(t,e){return t===e}function h(t){var e,r=0,i=[];for(t=n(t),e=t.find("script");r<e.length;r++)i.push({src:e[r].src,text:e[r].textContent}),e[r].remove();return i}function p(t){for(var n,r=0;r<t.length;r++)n=e.createElement("script"),t[r].src?n.src=t[r].src:t[r].text&&(n.text=t[r].text),e.head.appendChild(n).parentNode.removeChild(n)}function d(t,e){var n=new C;return t.forEach(function(t){n.push.apply(n,v(t,e))}),n}function v(t,e){return~e.indexOf(":")&&void 0!==O?(O===!1&&m(),e.match(O)?g(t,e):t.querySelectorAll(e)):t.querySelectorAll(e)}function g(t,e){for(var n,r,i=new C(t),o="",s=e.split(/\s+/);n=s.shift();)r=n.match(O),r?(o+=n.replace(O,"")||"*",n=new C,i.forEach(function(t){var e=new C;r.forEach(function(n){e.push.apply(e,F[n].call(t,o))}),n.push.apply(n,e)}),i=n,o=""):o+=n+" ";return o&&(n=new C,i.forEach(function(t){n.push.apply(n,t.querySelectorAll(o))}),i=n),i}function m(){var t=Object.keys(F).join("|").replace(/:/g,"");O=new RegExp(":("+t+")","g")}function y(t){return t.toLowerCase().replace(N,w)}function w(t,e){return e.toUpperCase()}function x(t){return t.replace(D,E).toLowerCase()}function E(t,e){return"-"+e.toLowerCase()}function T(t){return t instanceof C?!0:t instanceof Element||t instanceof Window||t instanceof Document?!0:"string"==typeof t?!0:void 0}function A(t){return function(){for(var e=0,n=this.length;n>e;e++)t.apply(this[e],arguments);return this}}function b(t){return function(){for(var e,n=0,r=this.length,i=new C;r>n;n++)e=t.apply(this[n],arguments),e&&(Array.isArray(e)&&e.length||e instanceof HTMLCollection?i.push.apply(i,e):i.push(e));return i}}function S(t,e){for(var n=new C;t[e]&&1===t.nodeType;)t=t[e],n.push(t);return n}var C,L,j,q=[];!function(){var n;if("ActiveXObject"in t)return n=new ActiveXObject("htmlfile"),n.open(),n.write("<script></script>"),n.close(),q.push(n),void(C=n.parentWindow.Array);try{n=e.createElement("iframe"),n.style.width=0,n.style.height=0,n.style.borderStyle="none",e.body.appendChild(n),C=n.contentWindow.Array,e.body.removeChild(n)}catch(r){C=Array}}(),t.z=n,n.fn=C.prototype,L=n(t),j=n(e),n.fn.find=function(t){if("string"!=typeof t)throw new Error("First paramater of z#find() should be a string");return d(this,t)};var M,H,z={};M={method:"GET",requestType:"text",responseType:"text",url:t.location+"",query:null,data:null,setup:r,success:r,error:r},H={text:function(t){return(t||"")+""}},n.ajax=function(t){var e=new XMLHttpRequest;if(t=n.extend({context:e},M,t),!H[t.requestType])throw new Error("Invalid option `requestType`");if(!H[t.responseType])throw new Error("Invalid option `responseType`");t.query&&~["HEAD","GET"].indexOf(t.method.toUpperCase())&&(t.url+=~t.url.indexOf("?")?"&":"?",t.url+=n.queryString(t.query),t.url=t.url.replace(/(\?|&)&/g,"$1")),e.open(t.method,t.url,!0),e.onload=function(){var n;e.status>=200&&e.status<400?(n=H[t.responseType].call(e,e.responseText,!0),t.success.call(t.context,n)):t.error.call(t.context,e.status,e.statusText)},e.onerror=function(){t.error.call(t.context,e.status,e.statusText)},~["HEAD","GET"].indexOf(t.method.toUpperCase())||e.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),t.data&&(t.data=H[t.requestType].call(e,t.data,!1)),t.setup.call(e,e),e.send(t.data)},M.requestType="detect",M.responseType="detect",n.registerAjaxType=function(t,e,n){n||"function"!=typeof e||(n=e,e=!1),H[t]=n,e&&(z[e]=t)},n.registerAjaxType("detect",function(t,e){var n,r="text";return e?(n=this.getResponseHeader("Content-Type")||"",n=n.split(";")[0].trim(),r=z[n]||"text"):t&&"object"==typeof t&&t.toString==={}.toString&&(r="json"),H[r].call(this,t,e)}),n.registerAjaxType("json","application/json",function(t,e){return e?JSON.parse(t):JSON.stringify(t)}),n.registerAjaxType("html","text/html",function(t,n){var r,i;return n?(i=new C,r=e.implementation.createHTMLDocument(""),r.documentElement.innerHTML=t,i.push.apply(i,i.slice.call(r.body.children,0)),i):t.outerHTML}),n.registerAjaxType("xml","text/xml",i),n.registerAjaxType("xml","application/xml",i),n.fn.addClass=A(o),n.fn.removeClass=A(s),n.fn.toggleClass=A(function(t,e){var n;n=void 0===e?u(this,t)?s:o:e?o:s,n.call(this,t)}),n.fn.hasClass=function(t){for(var e=0,n=this.length;n>e;e++)if(u(this[e],t))return!0;return!1},n.fn.data=function(t,e){return void 0!==t&&void 0!==e?this.setData(t,e):this.length?this.getData(t):void 0},n.fn.setData=A(function(t,e){var n=this;"dataset"in n?n.dataset[y(t)]=e:n.setAttribute("data-"+x(t),e)}),n.fn.getData=function(t){var e=this[0];if(e)return void 0!==t?"dataset"in e?e.dataset[y(t)]:e.getAttribute("data-"+x(t)):"dataset"in e?Object.create(e.dataset):f(e.attributes)},n.data=function(t,e,r){n(t).data(e,r)},n.fn.on=n.fn.bind=A(function(t,e){this.addEventListener(t,e,!1)}),n.fn.one=A(function(t,e){var r=!1;n(this).on(t,function i(o){r||(r=!0,n(this).off(t,i),e.call(this,o))})}),n.fn.off=n.fn.unbind=A(function(t,e){this.removeEventListener(t,e,!1)}),n.fn.trigger=function(t,n){var r,i=0,o=this.length;void 0===n&&(n={}),n.event=n;try{r=new CustomEvent(t,{detail:n})}catch(s){r=e.createEvent("CustomEvent"),r.initCustomEvent(t,!0,!0,n)}for(;o>i;i++)this[i].dispatchEvent(r);return this},n.fn.is=function(){var t,n=e.body;return t=n.matches||n.matchesSelector||n.webkitMatchesSelector,t=t||n.mozMatchesSelector||n.msMatchesSelector||n.oMatchesSelector,function(e){var n,r,i=0,o=this.length;switch(typeof e){case"string":n=t;break;case"function":n=c;break;case"object":if(!(e instanceof Element||e instanceof Window||e instanceof Document))throw new Error("First parameter of z#is is invalid");n=l;break;default:throw new Error("First parameter of z#is is invalid")}for(;o>i;i++)if(r=n(this[i],e))return r;return!1}}(),n.fn.hide=A(function(){return this.style.display="none",this}),n.fn.show=A(function(){return this.style.display="",this}),n.fn.clone=function(t){var e=0;for((void 0===t||null===t)&&(t=!1);e<this.length;e++)this[e]=this[e].cloneNode(t);return this},n.fn.html=function(t){var e,n;if(void 0===t)return this[0].innerHTML;for(e=0,n=this.length;n>e;e++)this[e].innerHTML=t;return this},n.fn.text=function(t){var e,n;if(void 0===t)return this.textContent;for(e=0,n=this.length;n>e;e++)this[e].textContent=t;return this},n.fn.getAttr=function(t){if(!t)throw new Error("First parameter of z#getAttr is required");return this[0]&&this[0].getAttribute(t)},n.fn.setAttr=A(function(t,e){if(!t)throw new Error("First parameter of z#setAttr is required");if(void 0===e)throw new Error("Second parameter of z#setAttr is required");this.setAttribute(t,e)}),n.fn.attr=function(t,e){return void 0===e?this.getAttr(t):(this.setAttr(t,e),this)},n.fn.replaceWith=n.fn.replace=A(function(t){var e;void 0===t||null===t?this.remove():t instanceof C||t instanceof EventTarget?(e=h(t),t instanceof C&&(t=t[0]),this.parentNode.replaceChild(t,this),p(e)):this.outerHTML=t}),n.fn.append=function(t){var e=0,n=this.length;if(void 0===t)throw new Error("First parameter of z#append is required.");if("string"==typeof t){for(;n>e;e++)this[e].insertAdjacentHTML("beforeend",t);return this}for(t instanceof C&&(t=t[0]);n>e;e++)this[e].appendChild(t);return this},n.fn.prepend=function(t){var e=0,n=this.length;if(void 0===t)throw new Error("First parameter of z#prepend is required.");if("string"==typeof t){for(;n>e;e++)this[e].insertAdjacentHTML("afterbegin",t);return this}for(t instanceof C&&(t=t[0]);n>e;e++)this[e].insertBefore(t,this[e].firstChild);return this},n.fn.after=function(t){var e=0,n=this.length;if(void 0===t)throw new Error("First parameter of z#append is required.");if("string"==typeof t){for(;n>e;e++)this[e].insertAdjacentHTML("afterend",t);return this}for(t instanceof C&&(t=t[0]);n>e;e++)this[e].insertAdjacentHTML("afterend",t.outerHTML);return this},n.fn.css=function(t,e){var n=0,r=this.length;if(void 0===t)throw new Error("First parameter of z#css is required.");if(void 0===e)return getComputedStyle(this[0])[t];for(t=t.replace(/-./g,function(t){return t.substr(1).toUpperCase()});r>n;n++)this[n].style[t]=e;return this},n.fn.remove=A(function(){this.parentNode.removeChild(this)}),n.fn.empty=A(function(){this.innerHTML=""});var O,F={};n.registerSelector=function(t,e){if(!t||"string"!=typeof t)throw new Error("First parameter of z#registerSelector must be a string selector");if(!e||"function"!=typeof e)throw new Error("Second parameter of z#registerSelector must be a function");":"!==t[0]&&(t=":"+t),O=!1,F[t]=e},n.registerSelector(":first",function(t){return n(this.querySelector(t))}),n.registerSelector(":input",function(){function t(t){return~e.indexOf(t.tagName)}var e="INPUT,TEXTAREA,SELECT,BUTTON".split(",");return function(e){var n=new C;return n.push.apply(n,[].filter.call(this.querySelectorAll(e),t)),n}}()),n.fn.parent=b(function(){return this.parentNode}),n.fn.next=b(function(){return this.nextElementSibling}),n.fn.prev=n.fn.previous=b(function(){return this.previousElementSibling}),n.fn.siblings=b(function(){return[].filter.call(this.parentNode.children,function(t){return t!==this},this)}),n.fn.nextAll=b(function(){return S(this,"nextElementSibling")}),n.fn.prevAll=b(function(){return S(this,"previousElementSibling")}),n.fn.children=b(function(){return this.children});var N=/-(.)/g,D=/(?!^)([A-Z])/g,U=function(){var e;return"Map"in t?new Map:(e={},{set:function(t,n){e[t]=n},get:function(t){return e[t]}})}();n.deepExtend=function R(t){var e,n,r=2;for("object"==typeof t?(n=t||{},t=1/0):(t=t===!0?1/0:0|t,n=arguments[1]||{});r<arguments.length;r++)if(e=arguments[r])for(var i in e)e.hasOwnProperty(i)&&(t&&"object"==typeof e[i]?R(t-1,n[i],e[i]):n[i]=e[i]);return n},n.extend=function(){return[].unshift.call(arguments,0),n.deepExtend.apply(null,arguments)},n.fn.each=A(function(t){return t.call(this,this),this}),n.queryString=function(t,e){var r,i,o,s=[];for(r in t)t.hasOwnProperty(r)&&(i=e?e+"["+r+"]":r,o=t[r],s.push(o&&"object"==typeof o?n.queryString(o,i):encodeURIComponent(i)+"="+encodeURIComponent(o)));return s.join("&")}}(window,document);
//# sourceMappingURL=data:application/json;base64,