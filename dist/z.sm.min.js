!function(t,e){function n(t,e){if(t instanceof g)return t;if(t instanceof Element||t instanceof Window||t instanceof Document)return new g(t);if(void 0===t||null===t)return new g;if("string"!=typeof t)throw new Error("First parameter is invalid");if(e){if(!p(e))throw new Error("Second parameter is invalid");e=n(e)}else e=w;return u(e,t)}function r(){}function i(t,e){var n;return e?this.responseXML?this.responseXML:(n=new DOMParser,n.parseFromString(t,"application/xml")):(n=new XMLSerializer,n.serializeToString(t))}function s(t,e){return e.call(t,t)}function o(t,e){return t===e}function a(t){var e,r=0,i=[];for(t=n(t),e=t.find("script");r<e.length;r++)i.push({src:e[r].src,text:e[r].textContent}),e[r].remove();return i}function f(t){for(var n,r=0;r<t.length;r++)n=e.createElement("script"),t[r].src?n.src=t[r].src:t[r].text&&(n.text=t[r].text),e.head.appendChild(n).parentNode.removeChild(n)}function u(t,e){var n=new g;return t.forEach(function(t){n.push.apply(n,c(t,e))}),n}function c(t,e){return~e.indexOf(":")&&void 0!==A?(A===!1&&h(),e.match(A)?l(t,e):t.querySelectorAll(e)):t.querySelectorAll(e)}function l(t,e){for(var n,r,i=new g(t),s="",o=e.split(/\s+/);n=o.shift();)r=n.match(A),r?(s+=n.replace(A,"")||"*",n=new g,i.forEach(function(t){var e=new g;r.forEach(function(n){e.push.apply(e,C[n].call(t,s))}),n.push.apply(n,e)}),i=n,s=""):s+=n+" ";return s&&(n=new g,i.forEach(function(t){n.push.apply(n,t.querySelectorAll(s))}),i=n),i}function h(){var t=Object.keys(C).join("|").replace(/:/g,"");A=new RegExp(":("+t+")","g")}function p(t){return t instanceof g?!0:t instanceof Element||t instanceof Window||t instanceof Document?!0:"string"==typeof t?!0:void 0}function d(t){return function(){for(var e=0,n=this.length;n>e;e++)t.apply(this[e],arguments);return this}}function v(t){return function(){for(var e,n=0,r=this.length,i=new g;r>n;n++)e=t.apply(this[n],arguments),e&&(Array.isArray(e)&&e.length||e instanceof HTMLCollection?i.push.apply(i,e):i.push(e));return i}}function m(t,e){for(var n=new g;t[e]&&1===t.nodeType;)t=t[e],n.push(t);return n}var g,y,w,E=[];!function(){var n;if("ActiveXObject"in t)return n=new ActiveXObject("htmlfile"),n.open(),n.write("<script></script>"),n.close(),E.push(n),void(g=n.parentWindow.Array);try{n=e.createElement("iframe"),n.style.width=0,n.style.height=0,n.style.borderStyle="none",e.body.appendChild(n),g=n.contentWindow.Array,e.body.removeChild(n)}catch(r){g=Array}}(),t.z=n,n.fn=g.prototype,y=n(t),w=n(e),n.fn.find=function(t){if("string"!=typeof t)throw new Error("First paramater of z#find() should be a string");return u(this,t)};var x,T,b={};x={method:"GET",requestType:"text",responseType:"text",url:t.location+"",query:null,data:null,setup:r,success:r,error:r},T={text:function(t){return(t||"")+""}},n.ajax=function(t){var e=new XMLHttpRequest;if(t=n.extend({context:e},x,t),!T[t.requestType])throw new Error("Invalid option `requestType`");if(!T[t.responseType])throw new Error("Invalid option `responseType`");t.query&&~["HEAD","GET"].indexOf(t.method.toUpperCase())&&(t.url+=~t.url.indexOf("?")?"&":"?",t.url+=n.queryString(t.query),t.url=t.url.replace(/(\?|&)&/g,"$1")),e.open(t.method,t.url,!0),e.onload=function(){var n;e.status>=200&&e.status<400?(n=T[t.responseType].call(e,e.responseText,!0),t.success.call(t.context,n)):t.error.call(t.context,e.status,e.statusText)},e.onerror=function(){t.error.call(t.context,e.status,e.statusText)},~["HEAD","GET"].indexOf(t.method.toUpperCase())||e.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),t.data&&(t.data=T[t.requestType].call(e,t.data,!1)),t.setup.call(e,e),e.send(t.data)},x.requestType="detect",x.responseType="detect",n.registerAjaxType=function(t,e,n){n||"function"!=typeof e||(n=e,e=!1),T[t]=n,e&&(b[e]=t)},n.registerAjaxType("detect",function(t,e){var n,r="text";return e?(n=this.getResponseHeader("Content-Type")||"",n=n.split(";")[0].trim(),r=b[n]||"text"):t&&"object"==typeof t&&t.toString==={}.toString&&(r="json"),T[r].call(this,t,e)}),n.registerAjaxType("json","application/json",function(t,e){return e?JSON.parse(t):JSON.stringify(t)}),n.registerAjaxType("html","text/html",function(t,n){var r,i;return n?(i=new g,r=e.implementation.createHTMLDocument(""),r.documentElement.innerHTML=t,i.push.apply(i,i.slice.call(r.body.children,0)),i):t.outerHTML}),n.registerAjaxType("xml","text/xml",i),n.registerAjaxType("xml","application/xml",i),n.fn.data="dataset"in e.body?function(t,e){var n,r;if(this.length){if(void 0===t)return this[0].dataset;if(void 0===e)return this[0].dataset[t];for(n=0,r=this.length;r>n;n++)this[n].dataset[t]=e;return this}}:function(t,e){var n,r,i="data-"+(t||"");if(this.length){if(void 0===t)return n={},[].forEach.call(this[0].attributes,function(t){return n[t.name]=t.value}),n;if(void 0===e)return this[0].attributes[i];for(n=0,r=this.length;r>n;n++)this[n].dataset[i]=e;return this}},n.data=function(t,e,r){n(t).data(e,r)},n.fn.on=n.fn.bind=d(function(t,e){this.addEventListener(t,e,!1)}),n.fn.one=d(function(t,e){var r=!1;n(this).on(t,function i(s){r||(r=!0,n(this).off(t,i),e.call(this,s))})}),n.fn.off=n.fn.unbind=d(function(t,e){this.removeEventListener(t,e,!1)}),n.fn.trigger=function(t,n){var r,i=0,s=this.length;void 0===n&&(n={}),n.event=n;try{r=new CustomEvent(t,{detail:n})}catch(o){r=e.createEvent("CustomEvent"),r.initCustomEvent(t,!0,!0,n)}for(;s>i;i++)this[i].dispatchEvent(r);return this},n.fn.is=function(){var t,n=e.body;return t=n.matches||n.matchesSelector||n.msMatchesSelector,t=t||n.mozMatchesSelector||n.webkitMatchesSelector||n.oMatchesSelector,function(e){var n,r,i=0,a=this.length;switch(typeof e){case"string":n=t;break;case"function":n=s;break;case"object":if(!(e instanceof Element||e instanceof Window||e instanceof Document))throw new Error("First parameter of z#is is invalid");n=o;default:throw new Error("First parameter of z#is is invalid")}for(;a>i;i++)if(r=n(this[i],e))return r;return!1}}(),n.fn.hide=d(function(){return this.style.display="none",this}),n.fn.show=d(function(){return this.style.display="",this}),n.fn.clone=function(t){var e=0;for((void 0===t||null===t)&&(t=!1);e<this.length;e++)this[e]=this[e].cloneNode(t);return this},n.fn.html=function(t){var e,n;if(void 0===t)return this[0].innerHTML;for(e=0,n=this.length;n>e;e++)this[e].innerHTML=t;return this},n.fn.text=function(t){var e,n;if(void 0===t)return this.textContent;for(e=0,n=this.length;n>e;e++)this[e].textContent=t;return this},n.fn.getAttr=function(t){if(!t)throw new Error("First parameter of z#getAttr is required");return this[0]&&this[0].getAttribute(t)},n.fn.setAttr=d(function(t,e){if(!t)throw new Error("First parameter of z#setAttr is required");if(void 0===e)throw new Error("Second parameter of z#setAttr is required");return this.setAttribute(t,e),this}),n.fn.attr=function(t,e){return void 0===e?this.getAttr(t):(this.setAttr(t,e),this)},n.fn.replaceWith=n.fn.replace=d(function(t){var e;void 0===t||null===t?this.remove():t instanceof g||t instanceof EventTarget?(e=a(t),t instanceof g&&(t=t[0]),this.parentNode.replaceChild(t,this),f(e)):this.outerHTML=t}),"classList"in e.documentElement?(n.fn.addClass=d(function(t){this.classList.add(t)}),n.fn.removeClass=d(function(t){this.classList.remove(t)}),n.fn.toggleClass=d(function(t,e){return void 0===e?void this.classList.toggle(t):void this.classList[e?"add":"remove"](t)}),n.fn.hasClass=function(t){for(var e=0,n=this.length;n>e;e++)if(this[e].classList.contains(t))return!0;return!1}):(n.fn.addClass=d(function(t){this.className+=" "+t}),n.fn.removeClass=d(function(t){this.className+=this.className.replace(new RegExp("(^|\\b)"+t+"(\\b|$)","g")," ")}),n.fn.toggleClass=function(t,e){return this[e?"addClass":"removeClass"](t),this},n.fn.hasClass=function(t){for(var e=0,n=this.length,r=new RegExp("(^| )"+t+"( |$)","gi");n>e;e++)if(r.test(this[e].className))return!0;return!1}),n.fn.append=function(t){var e=0,n=this.length;if(void 0===t)throw new Error("First parameter of z#append is required.");if("string"==typeof t){for(;n>e;e++)this[e].insertAdjacentHTML("beforeend",t);return this}for(t instanceof g&&(t=t[0]);n>e;e++)this[e].appendChild(t);return this},n.fn.prepend=function(t){var e=0,n=this.length;if(void 0===t)throw new Error("First parameter of z#prepend is required.");if("string"==typeof t){for(;n>e;e++)this[e].insertAdjacentHTML("afterbegin",t);return this}for(t instanceof g&&(t=t[0]);n>e;e++)this[e].insertBefore(t,this[e].firstChild);return this},n.fn.after=function(t){var e=0,n=this.length;if(void 0===t)throw new Error("First parameter of z#append is required.");if("string"==typeof t){for(;n>e;e++)this[e].insertAdjacentHTML("afterend",t);return this}for(t instanceof g&&(t=t[0]);n>e;e++)this[e].insertAdjacentHTML("afterend",t.outerHTML);return this},n.fn.css=function(t,e){var n=0,r=this.length;if(void 0===t)throw new Error("First parameter of z#css is required.");if(void 0===e)return getComputedStyle(this[0])[t];for(t=t.replace(/-./g,function(t){return t.substr(1).toUpperCase()});r>n;n++)this[n].style[t]=e;return this},n.fn.remove=d(function(){this.parentNode.removeChild(this)}),n.fn.empty=d(function(){this.innerHTML=""});var A,C={};n.registerSelector=function(t,e){if(!t||"string"!=typeof t)throw new Error("First parameter of z#registerSelector must be a string selector");if(!e||"function"!=typeof e)throw new Error("Second parameter of z#registerSelector must be a function");":"!==t[0]&&(t=":"+t),A=!1,C[t]=e},n.registerSelector(":first",function(t){return n(this.querySelector(t))}),n.registerSelector(":input",function(){function t(t){return~e.indexOf(t.tagName)}var e="INPUT,TEXTAREA,SELECT,BUTTON".split(",");return function(e){var n=new g;return n.push.apply(n,[].filter.call(this.querySelectorAll(e),t)),n}}()),n.fn.parent=v(function(){return this.parentNode}),n.fn.next=v(function(){return this.nextElementSibling}),n.fn.prev=n.fn.previous=v(function(){return this.previousElementSibling}),n.fn.siblings=v(function(){return[].filter.call(this.parentNode.children,function(t){return t!==this},this)}),n.fn.prevAll=v(function(){return m(this,"previousElementSibling")}),n.fn.children=v(function(){return this.children}),n.deepExtend=function S(t){var e,n,r=2;for("object"==typeof t?(n=t||{},t=1/0):(t=t===!0?1/0:0|t,n=arguments[1]||{});r<arguments.length;r++)if(e=arguments[r])for(var i in e)e.hasOwnProperty(i)&&(t&&"object"==typeof e[i]?S(t-1,n[i],e[i]):n[i]=e[i]);return n},n.extend=function(){return[].unshift.call(arguments,0),n.deepExtend.apply(null,arguments)},n.fn.each=d(function(t){return t.call(this,this),this}),n.queryString=function(t,e){var r,i,s,o=[];for(r in t)t.hasOwnProperty(r)&&(i=e?e+"["+r+"]":r,s=t[r],o.push(s&&"object"==typeof s?n.queryString(s,i):encodeURIComponent(i)+"="+encodeURIComponent(s)));return o.join("&")}}(window,document);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiei5zbS5taW4uanMiLCJzb3VyY2VzIjpbIl9oZWFkZXIuanMiLCJfYmFzZS5qcyIsImFqYXguanMiLCJhamF4X3R5cGVzLmpzIiwiZGF0YS5qcyIsImV2ZW50cy5qcyIsImZpbHRlcmluZy5qcyIsIm1hbmlwdWxhdGlvbi5qcyIsInNlbGVjdG9ycy5qcyIsInNlbGVjdG9yc19jdXN0b20uanMiLCJ0cmF2ZXJzaW5nLmpzIiwidXRpbHMuanMiLCJfZm9vdGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJDQVVBLFNBQUEsRUFBQSxHQ1BBLFFBQUEsR0FBQSxFQUFBLEdBQ0EsR0FBQSxZQUFBLEdBQ0EsTUFBQSxFQUNBLElBQUEsWUFBQSxVQUFBLFlBQUEsU0FBQSxZQUFBLFVBQ0EsTUFBQSxJQUFBLEdBQUEsRUFDQSxJQUFBLFNBQUEsR0FBQSxPQUFBLEVBQ0EsTUFBQSxJQUFBLEVBQ0EsSUFBQSxnQkFBQSxHQUNBLEtBQUEsSUFBQSxPQUFBLDZCQUdBLElBQUEsRUFBQSxDQUNBLElBQUEsRUFBQSxHQUNBLEtBQUEsSUFBQSxPQUFBLDhCQUdBLEdBQUEsRUFBQSxPQUVBLEdBQUEsQ0FHQSxPQUFBLEdBQUEsRUFBQSxHQUdBLFFBQUEsTUM4QkEsUUFBQSxHQUFBLEVBQUEsR0FDQSxHQUFBLEVBRUEsT0FBQSxHQUtBLEtBQUEsWUFDQSxLQUFBLGFBR0EsRUFBQSxHQUFBLFdBQ0EsRUFBQSxnQkFBQSxFQUFBLHFCQVRBLEVBQUEsR0FBQSxlQUNBLEVBQUEsa0JBQUEsSUM5REEsUUFBQSxHQUFBLEVBQUEsR0FDQSxNQUFBLEdBQUEsS0FBQSxFQUFBLEdBR0EsUUFBQSxHQUFBLEVBQUEsR0FDQSxNQUFBLEtBQUEsRUMrRkEsUUFBQSxHQUFBLEdBQ0EsR0FBQSxHQUNBLEVBQUEsRUFDQSxJQUtBLEtBSEEsRUFBQSxFQUFBLEdBQ0EsRUFBQSxFQUFBLEtBQUEsVUFFQSxFQUFBLEVBQUEsT0FBQSxJQUNBLEVBQUEsTUFDQSxJQUFBLEVBQUEsR0FBQSxJQUNBLEtBQUEsRUFBQSxHQUFBLGNBR0EsRUFBQSxHQUFBLFFBR0EsT0FBQSxHQUdBLFFBQUEsR0FBQSxHQUlBLElBSEEsR0FBQSxHQUNBLEVBQUEsRUFFQSxFQUFBLEVBQUEsT0FBQSxJQUNBLEVBQUEsRUFBQSxjQUFBLFVBRUEsRUFBQSxHQUFBLElBQ0EsRUFBQSxJQUFBLEVBQUEsR0FBQSxJQUNBLEVBQUEsR0FBQSxPQUNBLEVBQUEsS0FBQSxFQUFBLEdBQUEsTUFHQSxFQUFBLEtBQUEsWUFBQSxHQUFBLFdBQUEsWUFBQSxHQ2xJQSxRQUFBLEdBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxHQUFBLEVBTUEsT0FKQSxHQUFBLFFBQUEsU0FBQSxHQUNBLEVBQUEsS0FBQSxNQUFBLEVBQUEsRUFBQSxFQUFBLE1BR0EsRUFHQSxRQUFBLEdBQUEsRUFBQSxHQUNBLE9BQUEsRUFBQSxRQUFBLE1BQUEsU0FBQSxHQUlBLEtBQUEsR0FDQSxJQUdBLEVBQUEsTUFBQSxHQUlBLEVBQUEsRUFBQSxHQUhBLEVBQUEsaUJBQUEsSUFSQSxFQUFBLGlCQUFBLEdBY0EsUUFBQSxHQUFBLEVBQUEsR0FNQSxJQUxBLEdBQUEsR0FBQSxFQUNBLEVBQUEsR0FBQSxHQUFBLEdBQ0EsRUFBQSxHQUNBLEVBQUEsRUFBQSxNQUFBLE9BRUEsRUFBQSxFQUFBLFNBQ0EsRUFBQSxFQUFBLE1BQUEsR0FFQSxHQUtBLEdBQUEsRUFBQSxRQUFBLEVBQUEsS0FBQSxJQUNBLEVBQUEsR0FBQSxHQUVBLEVBQUEsUUFBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLEdBQUEsRUFFQSxHQUFBLFFBQUEsU0FBQSxHQUNBLEVBQUEsS0FBQSxNQUFBLEVBQUEsRUFBQSxHQUFBLEtBQUEsRUFBQSxNQUdBLEVBQUEsS0FBQSxNQUFBLEVBQUEsS0FHQSxFQUFBLEVBQ0EsRUFBQSxJQWxCQSxHQUFBLEVBQUEsR0ErQkEsT0FWQSxLQUNBLEVBQUEsR0FBQSxHQUVBLEVBQUEsUUFBQSxTQUFBLEdBQ0EsRUFBQSxLQUFBLE1BQUEsRUFBQSxFQUFBLGlCQUFBLE1BR0EsRUFBQSxHQUdBLEVBR0EsUUFBQSxLQUNBLEdBQUEsR0FBQSxPQUFBLEtBQUEsR0FBQSxLQUFBLEtBQUEsUUFBQSxLQUFBLEdBQ0EsR0FBQSxHQUFBLFFBQUEsS0FBQSxFQUFBLElBQUEsS0MzRUEsUUFBQSxHQUFBLEdBQ0EsTUFBQSxhQUFBLElBQ0EsRUFHQSxZQUFBLFVBQUEsWUFBQSxTQUFBLFlBQUEsV0FDQSxFQUdBLGdCQUFBLElBQ0EsRUFEQSxPQUtBLFFBQUEsR0FBQSxHQUNBLE1BQUEsWUFJQSxJQUhBLEdBQUEsR0FBQSxFQUNBLEVBQUEsS0FBQSxPQUVBLEVBQUEsRUFBQSxJQUNBLEVBQUEsTUFBQSxLQUFBLEdBQUEsVUFHQSxPQUFBLE9BSUEsUUFBQSxHQUFBLEdBQ0EsTUFBQSxZQU1BLElBTEEsR0FBQSxHQUNBLEVBQUEsRUFDQSxFQUFBLEtBQUEsT0FDQSxFQUFBLEdBQUEsR0FFQSxFQUFBLEVBQUEsSUFDQSxFQUFBLEVBQUEsTUFBQSxLQUFBLEdBQUEsV0FFQSxJQUNBLE1BQUEsUUFBQSxJQUFBLEVBQUEsUUFBQSxZQUFBLGdCQUNBLEVBQUEsS0FBQSxNQUFBLEVBQUEsR0FFQSxFQUFBLEtBQUEsR0FLQSxPQUFBLElBSUEsUUFBQSxHQUFBLEVBQUEsR0FHQSxJQUZBLEdBQUEsR0FBQSxHQUFBLEdBRUEsRUFBQSxJQUFBLElBQUEsRUFBQSxVQUNBLEVBQUEsRUFBQSxHQUNBLEVBQUEsS0FBQSxFQUdBLE9BQUEsR0wxREEsR0FBQSxHQUFBLEVBQUEsRUFDQSxNQTRCQSxXQUNBLEdBQUEsRUFFQSxJQUFBLGlCQUFBLEdBU0EsTUFSQSxHQUFBLEdBQUEsZUFBQSxZQUVBLEVBQUEsT0FDQSxFQUFBLE1BQUEscUJBQ0EsRUFBQSxRQUNBLEVBQUEsS0FBQSxRQUVBLEVBQUEsRUFBQSxhQUFBLE1BSUEsS0FDQSxFQUFBLEVBQUEsY0FBQSxVQUVBLEVBQUEsTUFBQSxNQUFBLEVBQ0EsRUFBQSxNQUFBLE9BQUEsRUFDQSxFQUFBLE1BQUEsWUFBQSxPQUVBLEVBQUEsS0FBQSxZQUFBLEdBRUEsRUFBQSxFQUFBLGNBQUEsTUFFQSxFQUFBLEtBQUEsWUFBQSxHQUNBLE1BQUEsR0FDQSxFQUFBLFVBS0EsRUFBQSxFQUFBLEVBQ0EsRUFBQSxHQUFBLEVBQUEsVUFDQSxFQUFBLEVBQUEsR0FDQSxFQUFBLEVBQUEsR0FFQSxFQUFBLEdBQUEsS0FBQSxTQUFBLEdBQ0EsR0FBQSxnQkFBQSxHQUNBLEtBQUEsSUFBQSxPQUFBLGlEQUdBLE9BQUEsR0FBQSxLQUFBLEdNeEVBLElBQUEsR0FBQSxFQUNBLElBRUEsSUFDQSxPQUFBLE1BQ0EsWUFBQSxPQUNBLGFBQUEsT0FDQSxJQUFBLEVBQUEsU0FBQSxHQUNBLE1BQUEsS0FDQSxLQUFBLEtBQ0EsTUFBQSxFQUNBLFFBQUEsRUFDQSxNQUFBLEdBR0EsR0FDQSxLQUFBLFNBQUEsR0FDQSxPQUFBLEdBQUEsSUFBQSxLQUlBLEVBQUEsS0FBQSxTQUFBLEdBQ0EsR0FDQSxHQUFBLEdBQUEsZUFNQSxJQUpBLEVBQUEsRUFBQSxRQUNBLFFBQUEsR0FDQSxFQUFBLElBRUEsRUFBQSxFQUFBLGFBQ0EsS0FBQSxJQUFBLE9BQUEsK0JBQ0EsS0FBQSxFQUFBLEVBQUEsY0FDQSxLQUFBLElBQUEsT0FBQSxnQ0FHQSxHQUFBLFNBQUEsT0FBQSxPQUFBLFFBQUEsRUFBQSxPQUFBLGlCQUNBLEVBQUEsTUFBQSxFQUFBLElBQUEsUUFBQSxLQUFBLElBQUEsSUFDQSxFQUFBLEtBQUEsRUFBQSxZQUFBLEVBQUEsT0FDQSxFQUFBLElBQUEsRUFBQSxJQUFBLFFBQUEsV0FBQSxPQUdBLEVBQUEsS0FBQSxFQUFBLE9BQUEsRUFBQSxLQUFBLEdBRUEsRUFBQSxPQUFBLFdBQ0EsR0FBQSxFQUVBLEdBQUEsUUFBQSxLQUFBLEVBQUEsT0FBQSxLQUNBLEVBQUEsRUFBQSxFQUFBLGNBQUEsS0FBQSxFQUFBLEVBQUEsY0FBQSxHQUNBLEVBQUEsUUFBQSxLQUFBLEVBQUEsUUFBQSxJQUVBLEVBQUEsTUFBQSxLQUFBLEVBQUEsUUFBQSxFQUFBLE9BQUEsRUFBQSxhQUlBLEVBQUEsUUFBQSxXQUNBLEVBQUEsTUFBQSxLQUFBLEVBQUEsUUFBQSxFQUFBLE9BQUEsRUFBQSxlQUdBLE9BQUEsT0FBQSxRQUFBLEVBQUEsT0FBQSxnQkFDQSxFQUFBLGlCQUFBLGVBQUEsb0RBR0EsRUFBQSxPQUNBLEVBQUEsS0FBQSxFQUFBLEVBQUEsYUFBQSxLQUFBLEVBQUEsRUFBQSxNQUFBLElBR0EsRUFBQSxNQUFBLEtBQUEsRUFBQSxHQUVBLEVBQUEsS0FBQSxFQUFBLE9McEVBLEVBQUEsWUFBQSxTQUNBLEVBQUEsYUFBQSxTQUVBLEVBQUEsaUJBQUEsU0FBQSxFQUFBLEVBQUEsR0FDQSxHQUFBLGtCQUFBLEtBQ0EsRUFBQSxFQUNBLEdBQUEsR0FHQSxFQUFBLEdBQUEsRUFFQSxJQUNBLEVBQUEsR0FBQSxJQUlBLEVBQUEsaUJBQUEsU0FBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQ0EsRUFBQSxNQVlBLE9BVkEsSUFDQSxFQUFBLEtBQUEsa0JBQUEsaUJBQUEsR0FDQSxFQUFBLEVBQUEsTUFBQSxLQUFBLEdBQUEsT0FDQSxFQUFBLEVBQUEsSUFBQSxRQUVBLEdBQUEsZ0JBQUEsSUFBQSxFQUFBLGNBQUEsV0FDQSxFQUFBLFFBSUEsRUFBQSxHQUFBLEtBQUEsS0FBQSxFQUFBLEtBR0EsRUFBQSxpQkFBQSxPQUFBLG1CQUFBLFNBQUEsRUFBQSxHQUNBLE1BQUEsR0FBQSxLQUFBLE1BQUEsR0FBQSxLQUFBLFVBQUEsS0FHQSxFQUFBLGlCQUFBLE9BQUEsWUFBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsQ0FFQSxPQUFBLElBSUEsRUFBQSxHQUFBLEdBQ0EsRUFBQSxFQUFBLGVBQUEsbUJBQUEsSUFFQSxFQUFBLGdCQUFBLFVBQUEsRUFFQSxFQUFBLEtBQUEsTUFBQSxFQUFBLEVBQUEsTUFBQSxLQUFBLEVBQUEsS0FBQSxTQUFBLElBRUEsR0FWQSxFQUFBLFlBYUEsRUFBQSxpQkFBQSxNQUFBLFdBQUEsR0FDQSxFQUFBLGlCQUFBLE1BQUEsa0JBQUEsR010REEsRUFBQSxHQUFBLEtBREEsV0FBQSxHQUFBLEtBQ0EsU0FBQSxFQUFBLEdBQ0EsR0FBQSxHQUFBLENBRUEsSUFBQSxLQUFBLE9BQUEsQ0FJQSxHQUFBLFNBQUEsRUFDQSxNQUFBLE1BQUEsR0FBQSxPQUNBLElBQUEsU0FBQSxFQUNBLE1BQUEsTUFBQSxHQUFBLFFBQUEsRUFHQSxLQUFBLEVBQUEsRUFBQSxFQUFBLEtBQUEsT0FBQSxFQUFBLEVBQUEsSUFDQSxLQUFBLEdBQUEsUUFBQSxHQUFBLENBR0EsT0FBQSxRQUdBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxFQUNBLEVBQUEsU0FBQSxHQUFBLEdBRUEsSUFBQSxLQUFBLE9BQUEsQ0FJQSxHQUFBLFNBQUEsRUFPQSxNQU5BLFNBRUEsUUFBQSxLQUFBLEtBQUEsR0FBQSxXQUFBLFNBQUEsR0FDQSxNQUFBLEdBQUEsRUFBQSxNQUFBLEVBQUEsUUFHQSxDQUNBLElBQUEsU0FBQSxFQUNBLE1BQUEsTUFBQSxHQUFBLFdBQUEsRUFHQSxLQUFBLEVBQUEsRUFBQSxFQUFBLEtBQUEsT0FBQSxFQUFBLEVBQUEsSUFDQSxLQUFBLEdBQUEsUUFBQSxHQUFBLENBR0EsT0FBQSxRQUlBLEVBQUEsS0FBQSxTQUFBLEVBQUEsRUFBQSxHQUNBLEVBQUEsR0FBQSxLQUFBLEVBQUEsSUNsREEsRUFBQSxHQUFBLEdBQUEsRUFBQSxHQUFBLEtBQUEsRUFBQSxTQUFBLEVBQUEsR0FDQSxLQUFBLGlCQUFBLEVBQUEsR0FBQSxLQUdBLEVBQUEsR0FBQSxJQUFBLEVBQUEsU0FBQSxFQUFBLEdBQ0EsR0FBQSxJQUFBLENBRUEsR0FBQSxNQUFBLEdBQUEsRUFBQSxRQUFBLEdBQUEsR0FDQSxJQUlBLEdBQUEsRUFDQSxFQUFBLE1BQUEsSUFBQSxFQUFBLEdBRUEsRUFBQSxLQUFBLEtBQUEsUUFJQSxFQUFBLEdBQUEsSUFBQSxFQUFBLEdBQUEsT0FBQSxFQUFBLFNBQUEsRUFBQSxHQUNBLEtBQUEsb0JBQUEsRUFBQSxHQUFBLEtBR0EsRUFBQSxHQUFBLFFBQUEsU0FBQSxFQUFBLEdBQ0EsR0FBQSxHQUNBLEVBQUEsRUFDQSxFQUFBLEtBQUEsTUFFQSxVQUFBLElBQ0EsTUFHQSxFQUFBLE1BQUEsQ0FFQSxLQUNBLEVBQUEsR0FBQSxhQUFBLEdBQ0EsT0FBQSxJQUVBLE1BQUEsR0FDQSxFQUFBLEVBQUEsWUFBQSxlQUNBLEVBQUEsZ0JBQUEsR0FBQSxHQUFBLEVBQUEsR0FHQSxLQUFBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxjQUFBLEVBR0EsT0FBQSxPTnZDQSxFQUFBLEdBQUEsR0FBQSxXQUNBLEdBQUEsR0FDQSxFQUFBLEVBQUEsSUFLQSxPQUhBLEdBQUEsRUFBQSxTQUFBLEVBQUEsaUJBQUEsRUFBQSxrQkFDQSxFQUFBLEdBQUEsRUFBQSxvQkFBQSxFQUFBLHVCQUFBLEVBQUEsaUJBRUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxFQUNBLEVBQUEsRUFDQSxFQUFBLEtBQUEsTUFFQSxjQUFBLElBQ0EsSUFBQSxTQUNBLEVBQUEsQ0FDQSxNQUVBLEtBQUEsV0FDQSxFQUFBLENBQ0EsTUFFQSxLQUFBLFNBQ0EsS0FBQSxZQUFBLFVBQUEsWUFBQSxTQUFBLFlBQUEsV0FHQSxLQUFBLElBQUEsT0FBQSxxQ0FGQSxHQUFBLENBSUEsU0FDQSxLQUFBLElBQUEsT0FBQSxzQ0FJQSxLQUFBLEVBQUEsRUFBQSxJQUdBLEdBRkEsRUFBQSxFQUFBLEtBQUEsR0FBQSxHQUdBLE1BQUEsRUFJQSxRQUFBLE1DaERBLEVBQUEsR0FBQSxLQUFBLEVBQUEsV0FFQSxNQURBLE1BQUEsTUFBQSxRQUFBLE9BQ0EsT0FHQSxFQUFBLEdBQUEsS0FBQSxFQUFBLFdBRUEsTUFEQSxNQUFBLE1BQUEsUUFBQSxHQUNBLE9BR0EsRUFBQSxHQUFBLE1BQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxDQU1BLE1BSkEsU0FBQSxHQUFBLE9BQUEsS0FDQSxHQUFBLEdBR0EsRUFBQSxLQUFBLE9BQUEsSUFDQSxLQUFBLEdBQUEsS0FBQSxHQUFBLFVBQUEsRUFHQSxPQUFBLE9BR0EsRUFBQSxHQUFBLEtBQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxDQUVBLElBQUEsU0FBQSxFQUNBLE1BQUEsTUFBQSxHQUFBLFNBR0EsS0FBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLE9BQUEsRUFBQSxFQUFBLElBQ0EsS0FBQSxHQUFBLFVBQUEsQ0FHQSxPQUFBLE9BR0EsRUFBQSxHQUFBLEtBQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxDQUVBLElBQUEsU0FBQSxFQUNBLE1BQUEsTUFBQSxXQUdBLEtBQUEsRUFBQSxFQUFBLEVBQUEsS0FBQSxPQUFBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxZQUFBLENBR0EsT0FBQSxPQUdBLEVBQUEsR0FBQSxRQUFBLFNBQUEsR0FDQSxJQUFBLEVBQ0EsS0FBQSxJQUFBLE9BQUEsMkNBR0EsT0FBQSxNQUFBLElBQUEsS0FBQSxHQUFBLGFBQUEsSUFHQSxFQUFBLEdBQUEsUUFBQSxFQUFBLFNBQUEsRUFBQSxHQUNBLElBQUEsRUFDQSxLQUFBLElBQUEsT0FBQSwyQ0FDQSxJQUFBLFNBQUEsRUFDQSxLQUFBLElBQUEsT0FBQSw0Q0FJQSxPQURBLE1BQUEsYUFBQSxFQUFBLEdBQ0EsT0FHQSxFQUFBLEdBQUEsS0FBQSxTQUFBLEVBQUEsR0FDQSxNQUFBLFVBQUEsRUFDQSxLQUFBLFFBQUEsSUFHQSxLQUFBLFFBQUEsRUFBQSxHQUNBLE9BR0EsRUFBQSxHQUFBLFlBQUEsRUFBQSxHQUFBLFFBQUEsRUFBQSxTQUFBLEdBQ0EsR0FBQSxFQUVBLFVBQUEsR0FBQSxPQUFBLEVBQ0EsS0FBQSxTQUNBLFlBQUEsSUFBQSxZQUFBLGNBQ0EsRUFBQSxFQUFBLEdBRUEsWUFBQSxLQUNBLEVBQUEsRUFBQSxJQUdBLEtBQUEsV0FBQSxhQUFBLEVBQUEsTUFFQSxFQUFBLElBRUEsS0FBQSxVQUFBLElBeUNBLGFBQUEsR0FBQSxpQkFDQSxFQUFBLEdBQUEsU0FBQSxFQUFBLFNBQUEsR0FDQSxLQUFBLFVBQUEsSUFBQSxLQUdBLEVBQUEsR0FBQSxZQUFBLEVBQUEsU0FBQSxHQUNBLEtBQUEsVUFBQSxPQUFBLEtBR0EsRUFBQSxHQUFBLFlBQUEsRUFBQSxTQUFBLEVBQUEsR0FDQSxNQUFBLFVBQUEsTUFDQSxNQUFBLFVBQUEsT0FBQSxPQUlBLE1BQUEsVUFBQSxFQUFBLE1BQUEsVUFBQSxLQUdBLEVBQUEsR0FBQSxTQUFBLFNBQUEsR0FJQSxJQUhBLEdBQUEsR0FBQSxFQUNBLEVBQUEsS0FBQSxPQUVBLEVBQUEsRUFBQSxJQUNBLEdBQUEsS0FBQSxHQUFBLFVBQUEsU0FBQSxHQUNBLE9BQUEsQ0FJQSxRQUFBLEtBR0EsRUFBQSxHQUFBLFNBQUEsRUFBQSxTQUFBLEdBQ0EsS0FBQSxXQUFBLElBQUEsSUFHQSxFQUFBLEdBQUEsWUFBQSxFQUFBLFNBQUEsR0FDQSxLQUFBLFdBQUEsS0FBQSxVQUFBLFFBQUEsR0FBQSxRQUFBLFVBQUEsRUFBQSxVQUFBLEtBQUEsT0FHQSxFQUFBLEdBQUEsWUFBQSxTQUFBLEVBQUEsR0FFQSxNQURBLE1BQUEsRUFBQSxXQUFBLGVBQUEsR0FDQSxNQUdBLEVBQUEsR0FBQSxTQUFBLFNBQUEsR0FLQSxJQUpBLEdBQUEsR0FBQSxFQUNBLEVBQUEsS0FBQSxPQUNBLEVBQUEsR0FBQSxRQUFBLFFBQUEsRUFBQSxRQUFBLE1BRUEsRUFBQSxFQUFBLElBQ0EsR0FBQSxFQUFBLEtBQUEsS0FBQSxHQUFBLFdBQ0EsT0FBQSxDQUlBLFFBQUEsSUFJQSxFQUFBLEdBQUEsT0FBQSxTQUFBLEdBQ0EsR0FDQSxHQUFBLEVBQ0EsRUFBQSxLQUFBLE1BRUEsSUFBQSxTQUFBLEVBQ0EsS0FBQSxJQUFBLE9BQUEsMkNBR0EsSUFBQSxnQkFBQSxHQUFBLENBQ0EsS0FBQSxFQUFBLEVBQUEsSUFDQSxLQUFBLEdBQUEsbUJBQUEsWUFBQSxFQUdBLE9BQUEsTUFPQSxJQUpBLFlBQUEsS0FDQSxFQUFBLEVBQUEsSUFHQSxFQUFBLEVBQUEsSUFDQSxLQUFBLEdBQUEsWUFBQSxFQUdBLE9BQUEsT0FHQSxFQUFBLEdBQUEsUUFBQSxTQUFBLEdBQ0EsR0FDQSxHQUFBLEVBQ0EsRUFBQSxLQUFBLE1BRUEsSUFBQSxTQUFBLEVBQ0EsS0FBQSxJQUFBLE9BQUEsNENBR0EsSUFBQSxnQkFBQSxHQUFBLENBQ0EsS0FBQSxFQUFBLEVBQUEsSUFDQSxLQUFBLEdBQUEsbUJBQUEsYUFBQSxFQUdBLE9BQUEsTUFPQSxJQUpBLFlBQUEsS0FDQSxFQUFBLEVBQUEsSUFHQSxFQUFBLEVBQUEsSUFDQSxLQUFBLEdBQUEsYUFBQSxFQUFBLEtBQUEsR0FBQSxXQUdBLE9BQUEsT0FHQSxFQUFBLEdBQUEsTUFBQSxTQUFBLEdBQ0EsR0FDQSxHQUFBLEVBQ0EsRUFBQSxLQUFBLE1BRUEsSUFBQSxTQUFBLEVBQ0EsS0FBQSxJQUFBLE9BQUEsMkNBR0EsSUFBQSxnQkFBQSxHQUFBLENBQ0EsS0FBQSxFQUFBLEVBQUEsSUFDQSxLQUFBLEdBQUEsbUJBQUEsV0FBQSxFQUdBLE9BQUEsTUFPQSxJQUpBLFlBQUEsS0FDQSxFQUFBLEVBQUEsSUFHQSxFQUFBLEVBQUEsSUFDQSxLQUFBLEdBQUEsbUJBQUEsV0FBQSxFQUFBLFVBR0EsT0FBQSxPQUdBLEVBQUEsR0FBQSxJQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxFQUNBLEVBQUEsS0FBQSxNQUVBLElBQUEsU0FBQSxFQUNBLEtBQUEsSUFBQSxPQUFBLHdDQUdBLElBQUEsU0FBQSxFQUNBLE1BQUEsa0JBQUEsS0FBQSxJQUFBLEVBTUEsS0FKQSxFQUFBLEVBQUEsUUFBQSxNQUFBLFNBQUEsR0FDQSxNQUFBLEdBQUEsT0FBQSxHQUFBLGdCQUdBLEVBQUEsRUFBQSxJQUNBLEtBQUEsR0FBQSxNQUFBLEdBQUEsQ0FJQSxPQUFBLE9BR0EsRUFBQSxHQUFBLE9BQUEsRUFBQSxXQUNBLEtBQUEsV0FBQSxZQUFBLFFBR0EsRUFBQSxHQUFBLE1BQUEsRUFBQSxXQUNBLEtBQUEsVUFBQSxJQ3BUQSxJQUFBLEdBQ0EsSUtEQSxHQUFBLGlCQUFBLFNBQUEsRUFBQSxHQUNBLElBQUEsR0FBQSxnQkFBQSxHQUNBLEtBQUEsSUFBQSxPQUFBLGtFQUNBLEtBQUEsR0FBQSxrQkFBQSxHQUNBLEtBQUEsSUFBQSxPQUFBLDREQUdBLE9BQUEsRUFBQSxLQUNBLEVBQUEsSUFBQSxHQUdBLEdBQUEsRUFDQSxFQUFBLEdBQUEsR0FHQSxFQUFBLGlCQUFBLFNBQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxLQUFBLGNBQUEsTUFHQSxFQUFBLGlCQUFBLFNBQUEsV0FHQSxRQUFBLEdBQUEsR0FDQSxPQUFBLEVBQUEsUUFBQSxFQUFBLFNBSEEsR0FBQSxHQUFBLCtCQUFBLE1BQUEsSUFNQSxPQUFBLFVBQUEsR0FDQSxHQUFBLEdBQUEsR0FBQSxFQUlBLE9BRkEsR0FBQSxLQUFBLE1BQUEsS0FBQSxPQUFBLEtBQUEsS0FBQSxpQkFBQSxHQUFBLElBRUEsT0MvQkEsRUFBQSxHQUFBLE9BQUEsRUFBQSxXQUNBLE1BQUEsTUFBQSxhQUdBLEVBQUEsR0FBQSxLQUFBLEVBQUEsV0FDQSxNQUFBLE1BQUEscUJBR0EsRUFBQSxHQUFBLEtBQUEsRUFBQSxHQUFBLFNBQUEsRUFBQSxXQUNBLE1BQUEsTUFBQSx5QkFHQSxFQUFBLEdBQUEsU0FBQSxFQUFBLFdBQ0EsU0FBQSxPQUFBLEtBQUEsS0FBQSxXQUFBLFNBQUEsU0FBQSxHQUNBLE1BQUEsS0FBQSxNQUNBLFFBR0EsRUFBQSxHQUFBLFFBQUEsRUFBQSxXQUNBLE1BQUEsR0FBQSxLQUFBLDRCQUdBLEVBQUEsR0FBQSxTQUFBLEVBQUEsV0FDQSxNQUFBLE1BQUEsV0xzQ0EsRUFBQSxXQUFBLFFBQUEsR0FBQSxHQUNBLEdBQUEsR0FBQSxFQUNBLEVBQUEsQ0FVQSxLQVJBLGdCQUFBLElBQ0EsRUFBQSxNQUNBLEVBQUEsTUFFQSxFQUFBLEtBQUEsRUFBQSxJQUFBLEVBQUEsRUFDQSxFQUFBLFVBQUEsUUFHQSxFQUFBLFVBQUEsT0FBQSxJQUdBLEdBRkEsRUFBQSxVQUFBLEdBTUEsSUFBQSxHQUFBLEtBQUEsR0FDQSxFQUFBLGVBQUEsS0FDQSxHQUFBLGdCQUFBLEdBQUEsR0FDQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEdBQUEsRUFBQSxJQUVBLEVBQUEsR0FBQSxFQUFBLEdBTUEsT0FBQSxJQUdBLEVBQUEsT0FBQSxXQUVBLFNBREEsUUFBQSxLQUFBLFVBQUEsR0FDQSxFQUFBLFdBQUEsTUFBQSxLQUFBLFlBR0EsRUFBQSxHQUFBLEtBQUEsRUFBQSxTQUFBLEdBRUEsTUFEQSxHQUFBLEtBQUEsS0FBQSxNQUNBLE9BR0EsRUFBQSxZQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxFQUFBLEVBQ0EsSUFFQSxLQUFBLElBQUEsR0FDQSxFQUFBLGVBQUEsS0FFQSxFQURBLEVBQ0EsRUFBQSxJQUFBLEVBQUEsSUFFQSxFQUdBLEVBQUEsRUFBQSxHQUdBLEVBQUEsS0FEQSxHQUFBLGdCQUFBLEdBQ0EsRUFBQSxZQUFBLEVBQUEsR0FFQSxtQkFBQSxHQUFBLElBQUEsbUJBQUEsSUFLQSxPQUFBLEdBQUEsS0FBQSxPTTlIQSxPQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiB6LmpzIEphdmFTY3JpcHQgTGlicmFyeSB2QFZFUlNJT05cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ORVVSUy96LmpzXG4gKlxuICogQ29weXJpZ2h0IDIwMTQgTkVVUlMgTExDLCBLZXZpbiBKLiBNYXJ0aW4sIGFuZCBvdGhlciBjb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cHM6Ly9naXRodWIuY29tL05FVVJTL3ouanMvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICpcbiAqIERhdGU6IEBEQVRFXG4gKi9cbjsoZnVuY3Rpb24gKHdpbmRvdywgZG9jdW1lbnQpIHtcbiIsInZhciB6QXJyYXksIF93aW5kb3csIF9kb2N1bWVudCxcblx0Y2FjaGUgPSBbXTtcblxuZnVuY3Rpb24geihlbGVtLCBzY29wZSkge1xuXHRpZiAoZWxlbSBpbnN0YW5jZW9mIHpBcnJheSkge1xuXHRcdHJldHVybiBlbGVtO1xuXHR9IGVsc2UgaWYgKGVsZW0gaW5zdGFuY2VvZiBFbGVtZW50IHx8IGVsZW0gaW5zdGFuY2VvZiBXaW5kb3cgfHwgZWxlbSBpbnN0YW5jZW9mIERvY3VtZW50KSB7XG5cdFx0cmV0dXJuIG5ldyB6QXJyYXkoZWxlbSk7XG5cdH0gZWxzZSBpZiAoZWxlbSA9PT0gdW5kZWZpbmVkIHx8IGVsZW0gPT09IG51bGwpIHtcblx0XHRyZXR1cm4gbmV3IHpBcnJheSgpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBlbGVtICE9PSBcInN0cmluZ1wiKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIGlzIGludmFsaWRcIik7XG5cdH1cblxuXHRpZiAoc2NvcGUpIHtcblx0XHRpZiAoIV9jaGVja1ZhbGlkRWxlbWVudChzY29wZSkpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcihcIlNlY29uZCBwYXJhbWV0ZXIgaXMgaW52YWxpZFwiKTtcblx0XHR9XG5cblx0XHRzY29wZSA9IHooc2NvcGUpO1xuXHR9IGVsc2Uge1xuXHRcdHNjb3BlID0gX2RvY3VtZW50O1xuXHR9XG5cblx0cmV0dXJuIF9maW5kKHNjb3BlLCBlbGVtKTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpe31cblxuKGZ1bmN0aW9uICgpIHtcblx0dmFyIHNjb3BlO1xuXG5cdGlmICgnQWN0aXZlWE9iamVjdCcgaW4gd2luZG93KSB7XG5cdFx0c2NvcGUgPSBuZXcgQWN0aXZlWE9iamVjdChcImh0bWxmaWxlXCIpO1xuXG5cdFx0c2NvcGUub3BlbigpO1xuXHRcdHNjb3BlLndyaXRlKFwiPHNjcmlwdD48XFwvc2NyaXB0PlwiKTtcblx0XHRzY29wZS5jbG9zZSgpO1xuXHRcdGNhY2hlLnB1c2goc2NvcGUpO1xuXG5cdFx0ekFycmF5ID0gc2NvcGUucGFyZW50V2luZG93LkFycmF5O1xuXHRcdHJldHVybjtcblx0fVxuXG5cdHRyeSB7XG5cdFx0c2NvcGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpO1xuXG5cdFx0c2NvcGUuc3R5bGUud2lkdGggICAgICAgICAgICA9IDA7XG5cdFx0c2NvcGUuc3R5bGUuaGVpZ2h0ICAgICAgICAgICAgPSAwO1xuXHRcdHNjb3BlLnN0eWxlLmJvcmRlclN0eWxlICAgID0gXCJub25lXCI7XG5cblx0XHRkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNjb3BlKTtcblxuXHRcdHpBcnJheSA9IHNjb3BlLmNvbnRlbnRXaW5kb3cuQXJyYXk7XG5cblx0XHRkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHNjb3BlKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdHpBcnJheSA9IEFycmF5O1xuXHR9XG59KSgpO1xuXG4vL3dpbmRvdy4kXHQ9IHo7XG53aW5kb3cuelx0PSB6O1xuei5mblx0XHQ9IHpBcnJheS5wcm90b3R5cGU7XG5fd2luZG93XHRcdD0geih3aW5kb3cpO1xuX2RvY3VtZW50XHQ9IHooZG9jdW1lbnQpO1xuXG56LmZuLmZpbmQgPSBmdW5jdGlvbiAoc3RyRWxlbSkge1xuXHRpZiAodHlwZW9mIHN0ckVsZW0gIT09IFwic3RyaW5nXCIpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWF0ZXIgb2YgeiNmaW5kKCkgc2hvdWxkIGJlIGEgc3RyaW5nXCIpO1xuXHR9XG5cblx0cmV0dXJuIF9maW5kKHRoaXMsIHN0ckVsZW0pO1xufTtcbiIsInZhciBhamF4RGVmYXVsdHMsIGFqYXhUeXBlcyxcblx0YWpheE1pbWVzXHQ9IHt9XG5cbmFqYXhEZWZhdWx0cyA9IHtcblx0bWV0aG9kOiBcIkdFVFwiLFxuXHRyZXF1ZXN0VHlwZTogXCJ0ZXh0XCIsXG5cdHJlc3BvbnNlVHlwZTogXCJ0ZXh0XCIsXG5cdHVybDogd2luZG93LmxvY2F0aW9uICsgXCJcIixcblx0cXVlcnk6IG51bGwsXG5cdGRhdGE6IG51bGwsXG5cdHNldHVwOiBub29wLFxuXHRzdWNjZXNzOiBub29wLFxuXHRlcnJvcjogbm9vcFxufTtcblxuYWpheFR5cGVzID0ge1xuXHR0ZXh0OiBmdW5jdGlvbiAoZGF0YSkge1xuXHRcdHJldHVybiAoZGF0YSB8fCBcIlwiKSArIFwiXCI7XG5cdH1cbn07XG5cbnouYWpheCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cdHZhciBkYXRhLFxuXHRcdHJlcSA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXG5cdG9wdGlvbnMgPSB6LmV4dGVuZCh7XG5cdFx0Y29udGV4dDogcmVxXG5cdH0sIGFqYXhEZWZhdWx0cywgb3B0aW9ucyk7XG5cblx0aWYgKCFhamF4VHlwZXNbb3B0aW9ucy5yZXF1ZXN0VHlwZV0pIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIG9wdGlvbiBgcmVxdWVzdFR5cGVgXCIpO1xuXHR9IGVsc2UgaWYgKCFhamF4VHlwZXNbb3B0aW9ucy5yZXNwb25zZVR5cGVdKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBvcHRpb24gYHJlc3BvbnNlVHlwZWBcIik7XG5cdH1cblxuXHRpZiAob3B0aW9ucy5xdWVyeSAmJiB+W1wiSEVBRFwiLCBcIkdFVFwiXS5pbmRleE9mKG9wdGlvbnMubWV0aG9kLnRvVXBwZXJDYXNlKCkpKSB7XG5cdFx0b3B0aW9ucy51cmxcdCs9IH5vcHRpb25zLnVybC5pbmRleE9mKFwiP1wiKSA/IFwiJlwiIDogXCI/XCI7XG5cdFx0b3B0aW9ucy51cmxcdCs9IHoucXVlcnlTdHJpbmcob3B0aW9ucy5xdWVyeSk7XG5cdFx0b3B0aW9ucy51cmxcdD0gb3B0aW9ucy51cmwucmVwbGFjZSgvKFxcP3wmKSYvZywgXCIkMVwiKTtcblx0fVxuXG5cdHJlcS5vcGVuKG9wdGlvbnMubWV0aG9kLCBvcHRpb25zLnVybCwgdHJ1ZSk7XG5cblx0cmVxLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcblx0XHR2YXIgcmVzcDtcblxuXHRcdGlmIChyZXEuc3RhdHVzID49IDIwMCAmJiByZXEuc3RhdHVzIDwgNDAwKSB7XG5cdFx0XHRyZXNwID0gYWpheFR5cGVzW29wdGlvbnMucmVzcG9uc2VUeXBlXS5jYWxsKHJlcSwgcmVxLnJlc3BvbnNlVGV4dCwgdHJ1ZSk7XG5cdFx0XHRvcHRpb25zLnN1Y2Nlc3MuY2FsbChvcHRpb25zLmNvbnRleHQsIHJlc3ApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRvcHRpb25zLmVycm9yLmNhbGwob3B0aW9ucy5jb250ZXh0LCByZXEuc3RhdHVzLCByZXEuc3RhdHVzVGV4dCk7XG5cdFx0fVxuXHR9O1xuXG5cdHJlcS5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xuXHRcdG9wdGlvbnMuZXJyb3IuY2FsbChvcHRpb25zLmNvbnRleHQsIHJlcS5zdGF0dXMsIHJlcS5zdGF0dXNUZXh0KTtcblx0fTtcblxuXHRpZiAoIX5bXCJIRUFEXCIsIFwiR0VUXCJdLmluZGV4T2Yob3B0aW9ucy5tZXRob2QudG9VcHBlckNhc2UoKSkpIHtcblx0XHRyZXEuc2V0UmVxdWVzdEhlYWRlcihcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOFwiKTtcblx0fVxuXG5cdGlmIChvcHRpb25zLmRhdGEpIHtcblx0XHRvcHRpb25zLmRhdGEgPSBhamF4VHlwZXNbb3B0aW9ucy5yZXF1ZXN0VHlwZV0uY2FsbChyZXEsIG9wdGlvbnMuZGF0YSwgZmFsc2UpO1xuXHR9XG5cblx0b3B0aW9ucy5zZXR1cC5jYWxsKHJlcSwgcmVxKTtcblxuXHRyZXEuc2VuZChvcHRpb25zLmRhdGEpO1xufTtcbiIsImFqYXhEZWZhdWx0cy5yZXF1ZXN0VHlwZVx0PSBcImRldGVjdFwiO1xuYWpheERlZmF1bHRzLnJlc3BvbnNlVHlwZVx0PSBcImRldGVjdFwiO1xuXG56LnJlZ2lzdGVyQWpheFR5cGUgPSBmdW5jdGlvbiAodHlwZSwgbWltZSwgZm4pIHtcblx0aWYgKCFmbiAmJiB0eXBlb2YgbWltZSA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0Zm5cdFx0PSBtaW1lO1xuXHRcdG1pbWVcdD0gZmFsc2U7XG5cdH1cblxuXHRhamF4VHlwZXNbdHlwZV0gPSBmbjtcblxuXHRpZiAobWltZSkge1xuXHRcdGFqYXhNaW1lc1ttaW1lXSA9IHR5cGU7XG5cdH1cbn07XG5cbnoucmVnaXN0ZXJBamF4VHlwZShcImRldGVjdFwiLCBmdW5jdGlvbiAoZGF0YSwgaXNSZXNwb25zZSkge1xuXHR2YXIgaGVhZGVyLFxuXHRcdHR5cGUgPSBcInRleHRcIjtcblxuXHRpZiAoaXNSZXNwb25zZSkge1xuXHRcdGhlYWRlclx0PSB0aGlzLmdldFJlc3BvbnNlSGVhZGVyKFwiQ29udGVudC1UeXBlXCIpIHx8IFwiXCIsXG5cdFx0aGVhZGVyXHQ9IGhlYWRlci5zcGxpdChcIjtcIilbMF0udHJpbSgpO1xuXHRcdHR5cGVcdD0gYWpheE1pbWVzW2hlYWRlcl0gfHwgXCJ0ZXh0XCI7XG5cdH0gZWxzZSB7XG5cdFx0aWYgKGRhdGEgJiYgdHlwZW9mIGRhdGEgPT09IFwib2JqZWN0XCIgJiYgZGF0YS50b1N0cmluZyA9PT0gKHt9KS50b1N0cmluZykge1xuXHRcdFx0dHlwZSA9IFwianNvblwiO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBhamF4VHlwZXNbdHlwZV0uY2FsbCh0aGlzLCBkYXRhLCBpc1Jlc3BvbnNlKTtcbn0pO1xuXG56LnJlZ2lzdGVyQWpheFR5cGUoXCJqc29uXCIsIFwiYXBwbGljYXRpb24vanNvblwiLCBmdW5jdGlvbiAoZGF0YSwgaXNSZXNwb25zZSkge1xuXHRyZXR1cm4gaXNSZXNwb25zZSA/IEpTT04ucGFyc2UoZGF0YSkgOiBKU09OLnN0cmluZ2lmeShkYXRhKTtcbn0pO1xuXG56LnJlZ2lzdGVyQWpheFR5cGUoXCJodG1sXCIsIFwidGV4dC9odG1sXCIsIGZ1bmN0aW9uIChkYXRhLCBpc1Jlc3BvbnNlKSB7XG5cdHZhciBkb2MsIGFycjtcblxuXHRpZiAoIWlzUmVzcG9uc2UpIHtcblx0XHRyZXR1cm4gZGF0YS5vdXRlckhUTUw7XG5cdH1cblxuXHRhcnJcdD0gbmV3IHpBcnJheSgpO1xuXHRkb2MgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoXCJcIik7XG5cblx0ZG9jLmRvY3VtZW50RWxlbWVudC5pbm5lckhUTUwgPSBkYXRhO1xuXG5cdGFyci5wdXNoLmFwcGx5KGFyciwgYXJyLnNsaWNlLmNhbGwoZG9jLmJvZHkuY2hpbGRyZW4sIDApKTtcblxuXHRyZXR1cm4gYXJyO1xufSk7XG5cbnoucmVnaXN0ZXJBamF4VHlwZShcInhtbFwiLCBcInRleHQveG1sXCIsIGFqYXhYTUxQYXJzZXIpO1xuei5yZWdpc3RlckFqYXhUeXBlKFwieG1sXCIsIFwiYXBwbGljYXRpb24veG1sXCIsIGFqYXhYTUxQYXJzZXIpO1xuXG5mdW5jdGlvbiBhamF4WE1MUGFyc2VyKGRhdGEsIGlzUmVzcG9uc2UpIHtcblx0dmFyIHBhcnNlcjtcblxuXHRpZiAoIWlzUmVzcG9uc2UpIHtcblx0XHRwYXJzZXIgPSBuZXcgWE1MU2VyaWFsaXplcigpO1xuXHRcdHJldHVybiBwYXJzZXIuc2VyaWFsaXplVG9TdHJpbmcoZGF0YSk7XG5cdH1cblxuXHRpZiAodGhpcy5yZXNwb25zZVhNTCkge1xuXHRcdHJldHVybiB0aGlzLnJlc3BvbnNlWE1MO1xuXHR9XG5cblx0cGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xuXHRyZXR1cm4gcGFyc2VyLnBhcnNlRnJvbVN0cmluZyhkYXRhLCBcImFwcGxpY2F0aW9uL3htbFwiKTtcbn1cbiIsImlmIChcImRhdGFzZXRcIiBpbiBkb2N1bWVudC5ib2R5KSB7XG5cdHouZm4uZGF0YSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdFx0dmFyIGksIGw7XG5cblx0XHRpZiAoIXRoaXMubGVuZ3RoKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKGtleSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRyZXR1cm4gdGhpc1swXS5kYXRhc2V0O1xuXHRcdH0gZWxzZSBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0cmV0dXJuIHRoaXNbMF0uZGF0YXNldFtrZXldO1xuXHRcdH1cblxuXHRcdGZvciAoaSA9IDAsIGwgPSB0aGlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuXHRcdFx0dGhpc1tpXS5kYXRhc2V0W2tleV0gPSB2YWx1ZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fTtcbn0gZWxzZSB7XG5cdHouZm4uZGF0YSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdFx0dmFyIGksIGwsXG5cdFx0XHRkYXRhS2V5ID0gXCJkYXRhLVwiICsgKGtleSB8fCBcIlwiKTtcblxuXHRcdGlmICghdGhpcy5sZW5ndGgpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoa2V5ID09PSB1bmRlZmluZWQpIHtcblx0XHRcdGkgPSB7fTtcblxuXHRcdFx0W10uZm9yRWFjaC5jYWxsKHRoaXNbMF0uYXR0cmlidXRlcywgZnVuY3Rpb24gKGF0dHIpIHtcblx0XHRcdFx0cmV0dXJuIGlbYXR0ci5uYW1lXSA9IGF0dHIudmFsdWU7XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIGk7XG5cdFx0fSBlbHNlIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRyZXR1cm4gdGhpc1swXS5hdHRyaWJ1dGVzW2RhdGFLZXldO1xuXHRcdH1cblxuXHRcdGZvciAoaSA9IDAsIGwgPSB0aGlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuXHRcdFx0dGhpc1tpXS5kYXRhc2V0W2RhdGFLZXldID0gdmFsdWU7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH07XG59XG5cbnouZGF0YSA9IGZ1bmN0aW9uIChlbGVtLCBrZXksIHZhbHVlKSB7XG5cdHooZWxlbSkuZGF0YShrZXksIHZhbHVlKTtcbn07XG4iLCJ6LmZuLm9uID0gei5mbi5iaW5kID0gX2VhY2goZnVuY3Rpb24gX29uKGV2ZW50VHlwZSwgZm4pIHtcblx0dGhpcy5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgZm4sIGZhbHNlKTtcbn0pO1xuXG56LmZuLm9uZSA9IF9lYWNoKGZ1bmN0aW9uIChldmVudCwgZm4pIHtcblx0dmFyIGNhbGxlZCA9IGZhbHNlO1xuXG5cdHoodGhpcykub24oZXZlbnQsIGZ1bmN0aW9uIG9uY2VGbihlKSB7XG5cdFx0aWYgKGNhbGxlZCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNhbGxlZCA9IHRydWU7XG5cdFx0eih0aGlzKS5vZmYoZXZlbnQsIG9uY2VGbik7XG5cblx0XHRmbi5jYWxsKHRoaXMsIGUpO1xuXHR9KTtcbn0pO1xuXG56LmZuLm9mZiA9IHouZm4udW5iaW5kID0gX2VhY2goZnVuY3Rpb24gX29mZihldmVudFR5cGUsIGZuKSB7XG5cdHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGZuLCBmYWxzZSk7XG59KTtcblxuei5mbi50cmlnZ2VyID0gZnVuY3Rpb24gKGV2ZW50VHlwZSwgZGF0YSkge1xuXHR2YXIgZXZlbnQsXG5cdFx0aSA9IDAsXG5cdFx0bCA9IHRoaXMubGVuZ3RoO1xuXG5cdGlmIChkYXRhID09PSB1bmRlZmluZWQpIHtcblx0XHRkYXRhID0ge307XG5cdH1cblxuXHRkYXRhLmV2ZW50ID0gZGF0YTtcblxuXHR0cnkge1xuXHRcdGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KGV2ZW50VHlwZSwge1xuXHRcdFx0ZGV0YWlsOiBkYXRhXG5cdFx0fSk7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50Jyk7XG5cdFx0ZXZlbnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50VHlwZSwgdHJ1ZSwgdHJ1ZSwgZGF0YSk7XG5cdH1cblxuXHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdHRoaXNbaV0uZGlzcGF0Y2hFdmVudChldmVudCk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG4iLCJmdW5jdGlvbiBfaXNXaXRoRnVuY3Rpb24oZWxlbSwgZm4pIHtcblx0cmV0dXJuIGZuLmNhbGwoZWxlbSwgZWxlbSk7XG59XG5cbmZ1bmN0aW9uIF9pc1dpdGhFbGVtZW50KGVsZW0xLCBlbGVtMikge1xuXHRyZXR1cm4gZWxlbTEgPT09IGVsZW0yO1xufVxuXG56LmZuLmlzID0gKGZ1bmN0aW9uIF9pcygpIHtcblx0dmFyIG1hdGNoZXMsXG5cdFx0Ym9keSA9IGRvY3VtZW50LmJvZHk7XG5cblx0bWF0Y2hlc1x0PSBib2R5Lm1hdGNoZXMgfHwgYm9keS5tYXRjaGVzU2VsZWN0b3IgfHwgYm9keS5tc01hdGNoZXNTZWxlY3Rvcjtcblx0bWF0Y2hlcyA9IG1hdGNoZXMgfHwgYm9keS5tb3pNYXRjaGVzU2VsZWN0b3IgfHwgYm9keS53ZWJraXRNYXRjaGVzU2VsZWN0b3IgfHwgYm9keS5vTWF0Y2hlc1NlbGVjdG9yO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoc2VsZWN0b3IpIHtcblx0XHR2YXIgX2lzV2l0aCwgcmV0LFxuXHRcdFx0aVx0PSAwLFxuXHRcdFx0bFx0PSB0aGlzLmxlbmd0aDtcblxuXHRcdHN3aXRjaCAodHlwZW9mIHNlbGVjdG9yKSB7XG5cdFx0XHRjYXNlIFwic3RyaW5nXCI6XG5cdFx0XHRcdF9pc1dpdGggPSBtYXRjaGVzO1xuXHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgXCJmdW5jdGlvblwiOlxuXHRcdFx0XHRfaXNXaXRoID0gX2lzV2l0aEZ1bmN0aW9uO1xuXHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgXCJvYmplY3RcIjpcblx0XHRcdFx0aWYgKHNlbGVjdG9yIGluc3RhbmNlb2YgRWxlbWVudCB8fCBzZWxlY3RvciBpbnN0YW5jZW9mIFdpbmRvdyB8fCBzZWxlY3RvciBpbnN0YW5jZW9mIERvY3VtZW50KSB7XG5cdFx0XHRcdFx0X2lzV2l0aCA9IF9pc1dpdGhFbGVtZW50O1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcihcIkZpcnN0IHBhcmFtZXRlciBvZiB6I2lzIGlzIGludmFsaWRcIik7XG5cdFx0XHRcdH1cblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHRocm93IG5ldyBFcnJvcihcIkZpcnN0IHBhcmFtZXRlciBvZiB6I2lzIGlzIGludmFsaWRcIik7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cblx0XHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdFx0cmV0ID0gX2lzV2l0aCh0aGlzW2ldLCBzZWxlY3Rvcik7XG5cblx0XHRcdGlmIChyZXQpIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH07XG59KSgpO1xuIiwiei5mbi5oaWRlID0gX2VhY2goZnVuY3Rpb24gaGlkZSgpIHtcblx0dGhpcy5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG5cdHJldHVybiB0aGlzO1xufSk7XG5cbnouZm4uc2hvdyA9IF9lYWNoKGZ1bmN0aW9uIHNob3coKSB7XG5cdHRoaXMuc3R5bGUuZGlzcGxheSA9IFwiXCI7XG5cdHJldHVybiB0aGlzO1xufSk7XG5cbnouZm4uY2xvbmUgPSBmdW5jdGlvbiAoZGVlcCkge1xuXHR2YXIgaSA9IDA7XG5cblx0aWYgKGRlZXAgPT09IHVuZGVmaW5lZCB8fCBkZWVwID09PSBudWxsKSB7XG5cdFx0ZGVlcCA9IGZhbHNlO1xuXHR9XG5cblx0Zm9yICg7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dGhpc1tpXSA9IHRoaXNbaV0uY2xvbmVOb2RlKGRlZXApO1xuXHR9XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG56LmZuLmh0bWwgPSBmdW5jdGlvbiAodmFsdWUpIHtcblx0dmFyIGksIGw7XG5cblx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gdGhpc1swXS5pbm5lckhUTUw7XG5cdH1cblxuXHRmb3IgKGkgPSAwLCBsID0gdGhpcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcblx0XHR0aGlzW2ldLmlubmVySFRNTCA9IHZhbHVlO1xuXHR9XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG56LmZuLnRleHQgPSBmdW5jdGlvbiAodmFsdWUpIHtcblx0dmFyIGksIGw7XG5cblx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gdGhpcy50ZXh0Q29udGVudDtcblx0fVxuXG5cdGZvciAoaSA9IDAsIGwgPSB0aGlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuXHRcdHRoaXNbaV0udGV4dENvbnRlbnQgPSB2YWx1ZTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufTtcblxuei5mbi5nZXRBdHRyID0gZnVuY3Rpb24gKGtleSkge1xuXHRpZiAoIWtleSkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkZpcnN0IHBhcmFtZXRlciBvZiB6I2dldEF0dHIgaXMgcmVxdWlyZWRcIik7XG5cdH1cblxuXHRyZXR1cm4gdGhpc1swXSAmJiB0aGlzWzBdLmdldEF0dHJpYnV0ZShrZXkpO1xufTtcblxuei5mbi5zZXRBdHRyID0gX2VhY2goZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcblx0aWYgKCFrZXkpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNzZXRBdHRyIGlzIHJlcXVpcmVkXCIpO1xuXHR9IGVsc2UgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJTZWNvbmQgcGFyYW1ldGVyIG9mIHojc2V0QXR0ciBpcyByZXF1aXJlZFwiKTtcblx0fVxuXG5cdHRoaXMuc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuXHRyZXR1cm4gdGhpcztcbn0pO1xuXG56LmZuLmF0dHIgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuXHRpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiB0aGlzLmdldEF0dHIoa2V5KTtcblx0fVxuXG5cdHRoaXMuc2V0QXR0cihrZXksIHZhbHVlKTtcblx0cmV0dXJuIHRoaXM7XG59O1xuXG56LmZuLnJlcGxhY2VXaXRoID0gei5mbi5yZXBsYWNlID0gX2VhY2goZnVuY3Rpb24gKHZhbHVlKSB7XG5cdHZhciBzY3JpcHRzO1xuXG5cdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XG5cdFx0dGhpcy5yZW1vdmUoKTtcblx0fSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIHpBcnJheSB8fCB2YWx1ZSBpbnN0YW5jZW9mIEV2ZW50VGFyZ2V0KSB7XG5cdFx0c2NyaXB0cyA9IF9leHRyYWN0U2NyaXB0cyh2YWx1ZSk7XG5cblx0XHRpZiAodmFsdWUgaW5zdGFuY2VvZiB6QXJyYXkpIHtcblx0XHRcdHZhbHVlID0gdmFsdWVbMF07XG5cdFx0fVxuXG5cdFx0dGhpcy5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZCh2YWx1ZSwgdGhpcyk7XG5cblx0XHRfYWRkU2NyaXB0cyhzY3JpcHRzKTtcblx0fSBlbHNlIHtcblx0XHR0aGlzLm91dGVySFRNTCA9IHZhbHVlO1xuXHR9XG59KTtcblxuZnVuY3Rpb24gX2V4dHJhY3RTY3JpcHRzKGVsZW0pIHtcblx0dmFyIHNjcmlwdHMsXG5cdFx0aVx0PSAwLFxuXHRcdHJldFx0PSBbXTtcblxuXHRlbGVtXHQ9IHooZWxlbSk7XG5cdHNjcmlwdHNcdD0gZWxlbS5maW5kKFwic2NyaXB0XCIpO1xuXG5cdGZvciAoOyBpIDwgc2NyaXB0cy5sZW5ndGg7IGkrKykge1xuXHRcdHJldC5wdXNoKHtcblx0XHRcdHNyYzogc2NyaXB0c1tpXS5zcmMsXG5cdFx0XHR0ZXh0OiBzY3JpcHRzW2ldLnRleHRDb250ZW50XG5cdFx0fSk7XG5cblx0XHRzY3JpcHRzW2ldLnJlbW92ZSgpO1xuXHR9XG5cblx0cmV0dXJuIHJldDtcbn1cblxuZnVuY3Rpb24gX2FkZFNjcmlwdHMoc2NyaXB0cykge1xuXHR2YXIgc2NyaXB0LFxuXHRcdGkgPSAwO1xuXG5cdGZvciAoOyBpIDwgc2NyaXB0cy5sZW5ndGg7IGkrKykge1xuXHRcdHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG5cblx0XHRpZiAoc2NyaXB0c1tpXS5zcmMpIHtcblx0XHRcdHNjcmlwdC5zcmMgPSBzY3JpcHRzW2ldLnNyYztcblx0XHR9IGVsc2UgaWYgKHNjcmlwdHNbaV0udGV4dCkge1xuXHRcdFx0c2NyaXB0LnRleHQgPSBzY3JpcHRzW2ldLnRleHQ7XG5cdFx0fVxuXG5cdFx0ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcblx0fVxufVxuXG5pZiAoXCJjbGFzc0xpc3RcIiBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHtcblx0ei5mbi5hZGRDbGFzcyA9IF9lYWNoKGZ1bmN0aW9uIGFkZENsYXNzKGNsYXNzTmFtZSkge1xuXHRcdHRoaXMuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xuXHR9KTtcblxuXHR6LmZuLnJlbW92ZUNsYXNzID0gX2VhY2goZnVuY3Rpb24gcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7XG5cdFx0dGhpcy5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG5cdH0pO1xuXG5cdHouZm4udG9nZ2xlQ2xhc3MgPSBfZWFjaChmdW5jdGlvbiB0b2dnbGVDbGFzcyhjbGFzc05hbWUsIGZvcmNlKSB7XG5cdFx0aWYgKGZvcmNlID09PSB1bmRlZmluZWQpIHtcblx0XHRcdHRoaXMuY2xhc3NMaXN0LnRvZ2dsZShjbGFzc05hbWUpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHRoaXMuY2xhc3NMaXN0W2ZvcmNlID8gXCJhZGRcIiA6IFwicmVtb3ZlXCJdKGNsYXNzTmFtZSk7XG5cdH0pO1xuXG5cdHouZm4uaGFzQ2xhc3MgPSBmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG5cdFx0dmFyIGkgPSAwLFxuXHRcdFx0bCA9IHRoaXMubGVuZ3RoO1xuXG5cdFx0Zm9yICg7IGkgPCBsOyBpKyspIHtcblx0XHRcdGlmICh0aGlzW2ldLmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpKSB7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBmYWxzZTtcblx0fTtcbn0gZWxzZSB7XG5cdHouZm4uYWRkQ2xhc3MgPSBfZWFjaChmdW5jdGlvbiBhZGRDbGFzcyhjbGFzc05hbWUpIHtcblx0XHR0aGlzLmNsYXNzTmFtZSArPSBcIiBcIiArIGNsYXNzTmFtZTtcblx0fSk7XG5cblx0ei5mbi5yZW1vdmVDbGFzcyA9IF9lYWNoKGZ1bmN0aW9uIHJlbW92ZUNsYXNzKGNsYXNzTmFtZSkge1xuXHRcdHRoaXMuY2xhc3NOYW1lICs9IHRoaXMuY2xhc3NOYW1lLnJlcGxhY2UobmV3IFJlZ0V4cChcIihefFxcXFxiKVwiICsgY2xhc3NOYW1lICsgXCIoXFxcXGJ8JClcIiwgXCJnXCIpLCBcIiBcIik7XG5cdH0pO1xuXG5cdHouZm4udG9nZ2xlQ2xhc3MgPSBmdW5jdGlvbiAoY2xhc3NOYW1lLCBmb3JjZSkge1xuXHRcdHRoaXNbZm9yY2UgPyBcImFkZENsYXNzXCIgOiBcInJlbW92ZUNsYXNzXCJdKGNsYXNzTmFtZSk7XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH07XG5cblx0ei5mbi5oYXNDbGFzcyA9IGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcblx0XHR2YXIgaSA9IDAsXG5cdFx0XHRsID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRyID0gbmV3IFJlZ0V4cChcIihefCApXCIgKyBjbGFzc05hbWUgKyBcIiggfCQpXCIsIFwiZ2lcIik7XG5cblx0XHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdFx0aWYgKHIudGVzdCh0aGlzW2ldLmNsYXNzTmFtZSkpIHtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9O1xufVxuXG56LmZuLmFwcGVuZCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuXHR2YXIgZWxlbWVudCxcblx0XHRpID0gMCxcblx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNhcHBlbmQgaXMgcmVxdWlyZWQuXCIpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuXHRcdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHR0aGlzW2ldLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgdmFsdWUpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cblx0aWYgKHZhbHVlIGluc3RhbmNlb2YgekFycmF5KSB7XG5cdFx0dmFsdWUgPSB2YWx1ZVswXTtcblx0fVxuXG5cdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0dGhpc1tpXS5hcHBlbmRDaGlsZCh2YWx1ZSk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn1cblxuei5mbi5wcmVwZW5kID0gZnVuY3Rpb24gKHZhbHVlKSB7XG5cdHZhciBlbGVtZW50LFxuXHRcdGkgPSAwLFxuXHRcdGwgPSB0aGlzLmxlbmd0aDtcblxuXHRpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkZpcnN0IHBhcmFtZXRlciBvZiB6I3ByZXBlbmQgaXMgcmVxdWlyZWQuXCIpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuXHRcdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHR0aGlzW2ldLmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJiZWdpbicsIHZhbHVlKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdGlmICh2YWx1ZSBpbnN0YW5jZW9mIHpBcnJheSkge1xuXHRcdHZhbHVlID0gdmFsdWVbMF07XG5cdH1cblxuXHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdHRoaXNbaV0uaW5zZXJ0QmVmb3JlKHZhbHVlLCB0aGlzW2ldLmZpcnN0Q2hpbGQpO1xuXHR9XG5cblx0cmV0dXJuIHRoaXM7XG59XG5cbnouZm4uYWZ0ZXIgPSBmdW5jdGlvbiAodmFsdWUpIHtcblx0dmFyIGVsZW1lbnQsXG5cdFx0aSA9IDAsXG5cdFx0bCA9IHRoaXMubGVuZ3RoO1xuXG5cdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgcGFyYW1ldGVyIG9mIHojYXBwZW5kIGlzIHJlcXVpcmVkLlwiKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcblx0XHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdFx0dGhpc1tpXS5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyZW5kJywgdmFsdWUpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cblx0aWYgKHZhbHVlIGluc3RhbmNlb2YgekFycmF5KSB7XG5cdFx0dmFsdWUgPSB2YWx1ZVswXTtcblx0fVxuXG5cdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0dGhpc1tpXS5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyZW5kJywgdmFsdWUub3V0ZXJIVE1MKTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufVxuXG56LmZuLmNzcyA9IGZ1bmN0aW9uIChydWxlLCB2YWx1ZSkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bCA9IHRoaXMubGVuZ3RoO1xuXG5cdGlmIChydWxlID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNjc3MgaXMgcmVxdWlyZWQuXCIpO1xuXHR9XG5cblx0aWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzWzBdKVtydWxlXTtcblx0fSBlbHNlIHtcblx0XHRydWxlID0gcnVsZS5yZXBsYWNlKC8tLi9nLCBmdW5jdGlvbiAocmVzdWx0KSB7XG5cdFx0ICAgIHJldHVybiByZXN1bHQuc3Vic3RyKDEpLnRvVXBwZXJDYXNlKCk7XG5cdFx0fSk7XG5cblx0XHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdFx0dGhpc1tpXS5zdHlsZVtydWxlXSA9IHZhbHVlO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0aGlzO1xufVxuXG56LmZuLnJlbW92ZSA9IF9lYWNoKGZ1bmN0aW9uICgpIHtcblx0dGhpcy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMpO1xufSk7XG5cbnouZm4uZW1wdHkgPSBfZWFjaChmdW5jdGlvbiAoKSB7XG5cdHRoaXMuaW5uZXJIVE1MID0gJyc7XG59KTtcbiIsInZhciBfc2VsZWN0b3JzQ2FjaGUsXG5cdF9zZWxlY3RvcnMgPSB7fTtcblxuZnVuY3Rpb24gX2ZpbmQoc2NvcGUsIHN0ckVsZW0pIHtcblx0dmFyIHJldCA9IG5ldyB6QXJyYXkoKTtcblxuXHRzY29wZS5mb3JFYWNoKGZ1bmN0aW9uIF9maW5kRm9yRWFjaChzY29wZWRFbGVtKSB7XG5cdFx0cmV0LnB1c2guYXBwbHkocmV0LCBfc2VsZWN0KHNjb3BlZEVsZW0sIHN0ckVsZW0pKTtcblx0fSk7XG5cblx0cmV0dXJuIHJldDtcbn1cblxuZnVuY3Rpb24gX3NlbGVjdChzY29wZWRFbGVtLCBzdHJFbGVtKSB7XG5cdGlmICghfnN0ckVsZW0uaW5kZXhPZihcIjpcIikgfHwgX3NlbGVjdG9yc0NhY2hlID09PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gc2NvcGVkRWxlbS5xdWVyeVNlbGVjdG9yQWxsKHN0ckVsZW0pO1xuXHR9XG5cblx0aWYgKF9zZWxlY3RvcnNDYWNoZSA9PT0gZmFsc2UpIHtcblx0XHRfZ2VuZXJhdGVTZWxlY3RvcnNDYWNoZSgpO1xuXHR9XG5cblx0aWYgKCFzdHJFbGVtLm1hdGNoKF9zZWxlY3RvcnNDYWNoZSkpIHtcblx0XHRyZXR1cm4gc2NvcGVkRWxlbS5xdWVyeVNlbGVjdG9yQWxsKHN0ckVsZW0pO1xuXHR9XG5cblx0cmV0dXJuIF9zZWxlY3QyKHNjb3BlZEVsZW0sIHN0ckVsZW0pO1xufVxuXG5mdW5jdGlvbiBfc2VsZWN0MihzY29wZWRFbGVtLCBzdHJFbGVtKSB7XG5cdHZhciBlbnRyeSwgc2VsZWN0b3JzLFxuXHRcdHNjb3BlXHQ9IG5ldyB6QXJyYXkoc2NvcGVkRWxlbSksXG5cdFx0Y3VycmVudFx0PSBcIlwiLFxuXHRcdGVudHJpZXNcdD0gc3RyRWxlbS5zcGxpdCgvXFxzKy8pO1xuXG5cdHdoaWxlIChlbnRyeSA9IGVudHJpZXMuc2hpZnQoKSkge1xuXHRcdHNlbGVjdG9ycyA9IGVudHJ5Lm1hdGNoKF9zZWxlY3RvcnNDYWNoZSk7XG5cblx0XHRpZiAoIXNlbGVjdG9ycykge1xuXHRcdFx0Y3VycmVudCArPSBlbnRyeSArIFwiIFwiO1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0Y3VycmVudFx0Kz0gZW50cnkucmVwbGFjZShfc2VsZWN0b3JzQ2FjaGUsIFwiXCIpIHx8IFwiKlwiO1xuXHRcdGVudHJ5XHQ9IG5ldyB6QXJyYXkoKTtcblxuXHRcdHNjb3BlLmZvckVhY2goZnVuY3Rpb24gX3NlbGVjdEZvckVhY2goc2NvcGVkRWxlbSkge1xuXHRcdFx0dmFyIHJldCA9IG5ldyB6QXJyYXkoKTtcblxuXHRcdFx0c2VsZWN0b3JzLmZvckVhY2goZnVuY3Rpb24gc2VsZWN0b3JzRm9yRWFjaChzZWxlY3Rvcikge1xuXHRcdFx0XHRyZXQucHVzaC5hcHBseShyZXQsIF9zZWxlY3RvcnNbc2VsZWN0b3JdLmNhbGwoc2NvcGVkRWxlbSwgY3VycmVudCkpO1xuXHRcdFx0fSk7XG5cblx0XHRcdGVudHJ5LnB1c2guYXBwbHkoZW50cnksIHJldCk7XG5cdFx0fSk7XG5cblx0XHRzY29wZVx0PSBlbnRyeTtcblx0XHRjdXJyZW50XHQ9IFwiXCI7XG5cdH1cblxuXHRpZiAoY3VycmVudCkge1xuXHRcdGVudHJ5ID0gbmV3IHpBcnJheSgpO1xuXG5cdFx0c2NvcGUuZm9yRWFjaChmdW5jdGlvbiBjdXJyZW50Rm9yRWFjaChzY29wZWRFbGVtKSB7XG5cdFx0XHRlbnRyeS5wdXNoLmFwcGx5KGVudHJ5LCBzY29wZWRFbGVtLnF1ZXJ5U2VsZWN0b3JBbGwoY3VycmVudCkpO1xuXHRcdH0pO1xuXG5cdFx0c2NvcGUgPSBlbnRyeTtcblx0fVxuXG5cdHJldHVybiBzY29wZTtcbn1cblxuZnVuY3Rpb24gX2dlbmVyYXRlU2VsZWN0b3JzQ2FjaGUoKSB7XG5cdHZhciBzZWxlY3RvcnNcdD0gT2JqZWN0LmtleXMoX3NlbGVjdG9ycykuam9pbihcInxcIikucmVwbGFjZSgvOi9nLCBcIlwiKTtcblx0X3NlbGVjdG9yc0NhY2hlXHQ9IG5ldyBSZWdFeHAoXCI6KFwiICsgc2VsZWN0b3JzICsgXCIpXCIsIFwiZ1wiKTtcbn1cbiIsInoucmVnaXN0ZXJTZWxlY3RvciA9IGZ1bmN0aW9uIChzZWxlY3RvciwgZm4pIHtcblx0aWYgKCFzZWxlY3RvciB8fCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBwYXJhbWV0ZXIgb2YgeiNyZWdpc3RlclNlbGVjdG9yIG11c3QgYmUgYSBzdHJpbmcgc2VsZWN0b3JcIik7XG5cdH0gZWxzZSBpZiAoIWZuIHx8IHR5cGVvZiBmbiAhPT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiU2Vjb25kIHBhcmFtZXRlciBvZiB6I3JlZ2lzdGVyU2VsZWN0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO1xuXHR9XG5cblx0aWYgKHNlbGVjdG9yWzBdICE9PSBcIjpcIikge1xuXHRcdHNlbGVjdG9yID0gXCI6XCIgKyBzZWxlY3Rvcjtcblx0fVxuXG5cdF9zZWxlY3RvcnNDYWNoZVx0XHRcdD0gZmFsc2U7XG5cdF9zZWxlY3RvcnNbc2VsZWN0b3JdXHQ9IGZuO1xufTtcblxuei5yZWdpc3RlclNlbGVjdG9yKFwiOmZpcnN0XCIsIGZ1bmN0aW9uIHNlbGVjdG9yRmlyc3QocXVlcnkpIHtcblx0cmV0dXJuIHoodGhpcy5xdWVyeVNlbGVjdG9yKHF1ZXJ5KSk7XG59KTtcblxuei5yZWdpc3RlclNlbGVjdG9yKFwiOmlucHV0XCIsIChmdW5jdGlvbiBzZWxlY3RvckZpcnN0KCkge1xuXHR2YXIgdGFncyA9IFwiSU5QVVQsVEVYVEFSRUEsU0VMRUNULEJVVFRPTlwiLnNwbGl0KFwiLFwiKTtcblxuXHRmdW5jdGlvbiBmaWx0ZXIoZWxlbWVudCkge1xuXHRcdHJldHVybiB+dGFncy5pbmRleE9mKGVsZW1lbnQudGFnTmFtZSk7XG5cdH1cblxuXHRyZXR1cm4gZnVuY3Rpb24gc2VsZWN0b3JJbnB1dChxdWVyeSkge1xuXHRcdHZhciBlbGVtZW50cyA9IG5ldyB6QXJyYXkoKTtcblxuXHRcdGVsZW1lbnRzLnB1c2guYXBwbHkoZWxlbWVudHMsIFtdLmZpbHRlci5jYWxsKHRoaXMucXVlcnlTZWxlY3RvckFsbChxdWVyeSksIGZpbHRlcikpO1xuXG5cdFx0cmV0dXJuIGVsZW1lbnRzO1xuXHR9O1xufSkoKSk7XG4iLCJ6LmZuLnBhcmVudCA9IF9lYWNoTmV3KGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuIHRoaXMucGFyZW50Tm9kZTtcbn0pO1xuXG56LmZuLm5leHQgPSBfZWFjaE5ldyhmdW5jdGlvbiAoKSB7XG5cdHJldHVybiB0aGlzLm5leHRFbGVtZW50U2libGluZztcbn0pO1xuXG56LmZuLnByZXYgPSB6LmZuLnByZXZpb3VzID0gX2VhY2hOZXcoZnVuY3Rpb24gKCkge1xuXHRyZXR1cm4gdGhpcy5wcmV2aW91c0VsZW1lbnRTaWJsaW5nO1xufSk7XG5cbnouZm4uc2libGluZ3MgPSBfZWFjaE5ldyhmdW5jdGlvbiAoKSB7XG5cdHJldHVybiBbXS5maWx0ZXIuY2FsbCh0aGlzLnBhcmVudE5vZGUuY2hpbGRyZW4sIGZ1bmN0aW9uKGNoaWxkKSB7XG5cdFx0cmV0dXJuIGNoaWxkICE9PSB0aGlzO1xuXHR9LCB0aGlzKTtcbn0pO1xuXG56LmZuLnByZXZBbGwgPSBfZWFjaE5ldyhmdW5jdGlvbigpe1xuXHRyZXR1cm4gZGlyKHRoaXMsIFwicHJldmlvdXNFbGVtZW50U2libGluZ1wiKTtcbn0pO1xuXG56LmZuLmNoaWxkcmVuID0gX2VhY2hOZXcoZnVuY3Rpb24gKHNlbGVjdG9yKSB7XG5cdHJldHVybiB0aGlzLmNoaWxkcmVuO1xufSk7XG4iLCJmdW5jdGlvbiBfY2hlY2tWYWxpZEVsZW1lbnQoZWxlbSkge1xuXHRpZiAoZWxlbSBpbnN0YW5jZW9mIHpBcnJheSkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0aWYgKGVsZW0gaW5zdGFuY2VvZiBFbGVtZW50IHx8IGVsZW0gaW5zdGFuY2VvZiBXaW5kb3cgfHwgZWxlbSBpbnN0YW5jZW9mIERvY3VtZW50KSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRpZiAodHlwZW9mIGVsZW0gPT09IFwic3RyaW5nXCIpIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxufVxuXG5mdW5jdGlvbiBfZWFjaChmbikge1xuXHRyZXR1cm4gZnVuY3Rpb24gcnVuRWFjaCgpIHtcblx0XHR2YXIgaVx0PSAwLFxuXHRcdFx0bFx0PSB0aGlzLmxlbmd0aDtcblxuXHRcdGZvciAoOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHRmbi5hcHBseSh0aGlzW2ldLCBhcmd1bWVudHMpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9O1xufVxuXG5mdW5jdGlvbiBfZWFjaE5ldyhmbikge1xuXHRyZXR1cm4gZnVuY3Rpb24gcnVuRWFjaCgpIHtcblx0XHR2YXIgcmV0LFxuXHRcdFx0aVx0PSAwLFxuXHRcdFx0bFx0PSB0aGlzLmxlbmd0aCxcblx0XHRcdGFyclx0PSBuZXcgekFycmF5KCk7XG5cblx0XHRmb3IgKDsgaSA8IGw7IGkrKykge1xuXHRcdFx0cmV0ID0gZm4uYXBwbHkodGhpc1tpXSwgYXJndW1lbnRzKTtcblxuXHRcdFx0aWYgKHJldCkge1xuXHRcdFx0XHRpZiAoQXJyYXkuaXNBcnJheShyZXQpICYmIHJldC5sZW5ndGggfHwgcmV0IGluc3RhbmNlb2YgSFRNTENvbGxlY3Rpb24pIHtcblx0XHRcdFx0XHRhcnIucHVzaC5hcHBseShhcnIsIHJldCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0YXJyLnB1c2gocmV0KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBhcnI7XG5cdH07XG59XG5cbmZ1bmN0aW9uIGRpcihlbGVtLCBrZXkpIHtcblx0dmFyIG1hdGNoZWQgPSBuZXcgekFycmF5KCk7XG5cblx0d2hpbGUgKGVsZW1ba2V5XSAmJiBlbGVtLm5vZGVUeXBlID09PSAxKSB7XG5cdFx0ZWxlbSA9IGVsZW1ba2V5XTtcblx0XHRtYXRjaGVkLnB1c2goZWxlbSk7XG5cdH1cblxuXHRyZXR1cm4gbWF0Y2hlZDtcbn1cblxuei5kZWVwRXh0ZW5kID0gZnVuY3Rpb24gX2V4dGVuZChkZWVwKSB7XG5cdHZhciBvYmosIHRhcmdldCxcblx0XHRpID0gMjtcblxuXHRpZiAodHlwZW9mIGRlZXAgPT09IFwib2JqZWN0XCIpIHtcblx0XHR0YXJnZXRcdD0gZGVlcCB8fCB7fTtcblx0XHRkZWVwXHQ9IEluZmluaXR5O1xuXHR9IGVsc2Uge1xuXHRcdGRlZXBcdD0gZGVlcCA9PT0gdHJ1ZSA/IEluZmluaXR5IDogKGRlZXAgfCAwKTtcblx0XHR0YXJnZXRcdD0gYXJndW1lbnRzWzFdIHx8IHt9O1xuXHR9XG5cblx0Zm9yICg7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRvYmogPSBhcmd1bWVudHNbaV07XG5cblx0XHRpZiAoIW9iaikge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIga2V5IGluIG9iaikge1xuXHRcdFx0aWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG5cdFx0XHRcdGlmIChkZWVwICYmIHR5cGVvZiBvYmpba2V5XSA9PT0gXCJvYmplY3RcIikge1xuXHRcdFx0XHRcdF9leHRlbmQoZGVlcCAtIDEsIHRhcmdldFtrZXldLCBvYmpba2V5XSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGFyZ2V0W2tleV0gPSBvYmpba2V5XTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0YXJnZXQ7XG59O1xuXG56LmV4dGVuZCA9IGZ1bmN0aW9uICgpIHtcblx0W10udW5zaGlmdC5jYWxsKGFyZ3VtZW50cywgMCk7XG5cdHJldHVybiB6LmRlZXBFeHRlbmQuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbn07XG5cbnouZm4uZWFjaCA9IF9lYWNoKGZ1bmN0aW9uIGVhY2goZm4pIHtcblx0Zm4uY2FsbCh0aGlzLCB0aGlzKTtcblx0cmV0dXJuIHRoaXM7XG59KTtcblxuei5xdWVyeVN0cmluZyA9IGZ1bmN0aW9uIChvYmosIHByZWZpeCkge1xuXHR2YXIgaSwga2V5LCB2YWwsXG5cdFx0c3RyaW5ncyA9IFtdO1xuXG5cdGZvciAoaSBpbiBvYmopIHtcblx0XHRpZiAob2JqLmhhc093blByb3BlcnR5KGkpKSB7XG5cdFx0XHRpZiAocHJlZml4KSB7XG5cdFx0XHRcdGtleSA9IHByZWZpeCArIFwiW1wiICsgaSArIFwiXVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0a2V5ID0gaTtcblx0XHRcdH1cblxuXHRcdFx0dmFsID0gb2JqW2ldO1xuXG5cdFx0XHRpZiAodmFsICYmIHR5cGVvZiB2YWwgPT09IFwib2JqZWN0XCIpIHtcblx0XHRcdFx0c3RyaW5ncy5wdXNoKHoucXVlcnlTdHJpbmcodmFsLCBrZXkpKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHN0cmluZ3MucHVzaChlbmNvZGVVUklDb21wb25lbnQoa2V5KSArIFwiPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHZhbCkpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBzdHJpbmdzLmpvaW4oXCImXCIpO1xufTtcbiIsIn0pKHdpbmRvdywgZG9jdW1lbnQpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9