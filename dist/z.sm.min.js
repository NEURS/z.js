!function(t,e){function r(t,e){if(t instanceof d)return t;if(t instanceof EventTarget)return new d(t);if(void 0===t||null===t)return new d;if("string"!=typeof t)throw new Error("First parameter is invalid");if(e){if(!l(e))throw new Error("Second parameter is invalid");e=r(e)}else e=v;return a(e,t)}function n(){}function i(t,e){var r;return e?this.responseXML?this.responseXML:(r=new DOMParser,r.parseFromString(t,"application/xml")):(r=new XMLSerializer,r.serializeToString(t))}function o(t,e){return e.call(t,t)}function s(t,e){return t===e}function a(t,e){var r=new d;return t.forEach(function(t){r.push.apply(r,u(t,e))}),r}function u(t,e){return~e.indexOf(":")&&void 0!==T?(T===!1&&c(),e.match(T)?f(t,e):t.querySelectorAll(e)):t.querySelectorAll(e)}function f(t,e){for(var r,n,i=new d(t),o="",s=e.split(/\s+/);r=s.shift();)n=r.match(T),n?(o+=r.replace(T,"")||"*",r=new d,i.forEach(function(t){var e=new d;n.forEach(function(r){e.push.apply(e,S[r].call(t,o))}),r.push.apply(r,e)}),i=r,o=""):o+=r+" ";return o&&(r=new d,i.forEach(function(t){r.push.apply(r,t.querySelectorAll(o))}),i=r),i}function c(){var t=Object.keys(S).join("|").replace(/:/g,"");T=new RegExp(":("+t+")","g")}function l(t){return t instanceof d?!0:t instanceof EventTarget?!0:"string"==typeof t?!0:void 0}function h(t){return function(){for(var e=0,r=this.length;r>e;e++)t.apply(this[e],arguments);return this}}function p(t){return function(){for(var e,r=0,n=this.length,i=new d;n>r;r++)e=t.apply(this[r],arguments),e&&(Array.isArray(e)&&e.length?i.push.apply(i,e):i.push(e));return i}}var d,y,v,g;try{g=e.createElement("iframe"),g.style.width=0,g.style.height=0,g.style.borderStyle="none",e.body.appendChild(g),d=g.contentWindow.Array,e.body.removeChild(g)}catch(m){d=Array}t.z=r,r.fn=d.prototype,y=r(t),v=r(e),r.fn.find=function(t){if("string"!=typeof t)throw new Error("First paramater of z#find() should be a string");return a(this,t)};var w,E,x={};w={method:"GET",requestType:"text",responseType:"text",url:t.location+"",query:null,data:null,setup:n,success:n,error:n},E={text:function(t){return(t||"")+""}},r.ajax=function(t){var e=new XMLHttpRequest;if(t=r.extend({context:e},w,t),!E[t.requestType])throw new Error("Invalid option `requestType`");if(!E[t.responseType])throw new Error("Invalid option `responseType`");t.query&&~["HEAD","GET"].indexOf(t.method.toUpperCase())&&(t.url+=~t.url.indexOf("?")?"&":"?",t.url+=r.queryString(t.query),t.url=t.url.replace(/(\?|&)&/g,"$1")),e.open(t.method,t.url,!0),e.onload=function(){var r;e.status>=200&&e.status<400?(r=E[t.responseType].call(e,e.responseText,!0),t.success.call(t.context,r)):t.error.call(t.context,e.status,e.statusText)},e.onerror=function(){t.error.call(t.context,e.status,e.statusText)},~["HEAD","GET"].indexOf(t.method.toUpperCase())||e.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),t.data&&(t.data=E[t.requestType].call(e,t.data,!1)),t.setup.call(e,e),e.send(t.data)},w.requestType="detect",w.responseType="detect",r.registerAjaxType=function(t,e,r){r||"function"!=typeof e||(r=e,e=!1),E[t]=r,e&&(x[e]=t)},r.registerAjaxType("detect",function(t,e){var r,n="text";return e?(r=this.getResponseHeader("Content-Type")||"",r=r.split(";")[0].trim(),n=x[r]||"text"):t&&"object"==typeof t&&t.toString==={}.toString&&(n="json"),E[n].call(this,t,e)}),r.registerAjaxType("json","application/json",function(t,e){return e?JSON.parse(t):JSON.stringify(t)}),r.registerAjaxType("html","text/html",function(t,r){var n,i;return r?(i=new d,n=e.implementation.createHTMLDocument(),n.documentElement.innerHTML=t,i.push.apply(i,i.slice.call(n.body.children,0)),i):t.outerHTML}),r.registerAjaxType("xml","text/xml",i),r.registerAjaxType("xml","application/xml",i),r.fn.data="dataset"in e.body?function(t,e){var r,n;if(this.length){if(void 0===t)return this[0].dataset;if(void 0===e)return this[0].dataset[t];for(r=0,n=this.length;n>r;r++)this[r].dataset[t]=e;return this}}:function(t,e){var r,n,i="data-"+(t||"");if(this.length){if(void 0===t)return r={},[].forEach.call(this[0].attributes,function(t){return r[t.name]=t.value}),r;if(void 0===e)return this[0].attributes[i];for(r=0,n=this.length;n>r;r++)this[r].dataset[i]=e;return this}},r.fn.on=r.fn.bind=h(function(t,e){this.addEventListener(t,e,!1)}),r.fn.off=r.fn.unbind=h(function(t,e){this.removeEventListener(t,e,!1)}),r.ready=r.fn.ready=function(t){var r=["interactive","loaded","complete"];return~r.indexOf(e.readyState)?setTimeout(t,0):e.addEventListener("DOMContentLoaded",t),this},r.fn.trigger=function(t,r){var n,i,o=0,s=this.length;try{i=r?{detail:r}:void 0,n=new CustomEvent(t,i)}catch(a){n=e.createEvent("CustomEvent"),n.initCustomEvent(t,!0,!0,r)}for(;s>o;o++)this[o].dispatchEvent(n);return this},r.fn.is=function(){var t,r=e.body;return t=r.matches||r.matchesSelector||r.msMatchesSelector,t=t||r.mozMatchesSelector||r.webkitMatchesSelector||r.oMatchesSelector,function(e){var r,n,i=0,a=this.length;switch(typeof e){case"string":r=t;break;case"function":r=o;break;case"object":if(!(e instanceof EventTarget))throw new Error("First parameter of z#is is invalid");r=s;default:throw new Error("First parameter of z#is is invalid")}for(;a>i;i++)if(n=r(this[i],e))return n;return!1}}(),r.fn.hide=h(function(){return this.style.display="none",this}),r.fn.show=h(function(){return this.style.display="",this}),r.fn.clone=function(t){var e=0;for((void 0===t||null===t)&&(t=!1);e<this.length;e++)this[e]=this[e].cloneNode(t);return this},r.fn.html=function(t){var e,r;if(void 0===t)return this.innerHTML;for(e=0,r=this.length;r>e;e++)this[e].innerHTML=t;return this},r.fn.text=function(t){var e,r;if(void 0===t)return this.textContent;for(e=0,r=this.length;r>e;e++)this[e].textContent=t;return this},r.fn.getAttr=function(t){if(!t)throw new Error("First parameter of z#getAttr is required");return this[0]&&this[0].getAttribute(t)},r.fn.setAttr=h(function(t,e){if(!t)throw new Error("First parameter of z#setAttr is required");if(void 0===e)throw new Error("Second parameter of z#setAttr is required");return this.setAttribute(t,e),this}),r.fn.attr=function(t,e){return void 0===e?this.getAttr(t):(this.setAttr(t,e),this)},r.fn.replaceWith=r.fn.replace=h(function(t){if(void 0===t)throw new Error("First parameter of z#replace is required");this.outerHTML=t}),"classList"in e.documentElement?(r.fn.addClass=h(function(t){this.classList.add(t)}),r.fn.removeClass=h(function(t){this.classList.remove(t)}),r.fn.toggleClass=h(function(t,e){return void 0===e?(this.classList.toggle(t),void 0):(this.classList[e?"add":"remove"](t),void 0)})):(r.fn.addClass=h(function(t){this.className+=" "+t}),r.fn.removeClass=h(function(t){this.className+=this.className.replace(new RegExp("(^|\\b)"+t+"(\\b|$)","g")," ")}),r.fn.toggleClass=function(t,e){return this[e?"addClass":"removeClass"](t),this});var T,S={};r.registerSelector=function(t,e){if(!t||"string"!=typeof t)throw new Error("First parameter of z#registerSelector must be a string selector");if(!e||"function"!=typeof e)throw new Error("Second parameter of z#registerSelector must be a function");":"!==t[0]&&(t=":"+t),T=!1,S[t]=e},r.registerSelector(":first",function(t){return r(this.querySelector(t))}),r.registerSelector(":input",function(){function t(t){return~e.indexOf(t.tagName)}var e="INPUT,TEXTAREA,SELECT,BUTTON".split(",");return function(e){var r=new d;return r.push.apply(r,[].filter.call(this.querySelectorAll(e),t)),r}}()),r.fn.parent=p(function(){return this.parentNode}),r.fn.next=p(function(){return this.nextElementSibling}),r.fn.prev=r.fn.previous=p(function(){return this.previousElementSibling}),r.fn.siblings=p(function(){return[].filter.call(this.parentNode.children,function(t){return t!==this},this)}),r.deepExtend=function b(t){var e,r,n=2;for("object"==typeof t?(r=t||{},t=1/0):(t=t===!0?1/0:0|t,r=arguments[1]||{});n<arguments.length;n++)if(e=arguments[n])for(var i in e)e.hasOwnProperty(i)&&(t&&"object"==typeof e[i]?b(t-1,r[i],e[i]):r[i]=e[i]);return r},r.extend=function(){return[].unshift.call(arguments,0),r.deepExtend.apply(null,arguments)},r.fn.each=h(function(t){return t.call(this,this),this}),r.queryString=function(t,e){var r,n,i,o=[];for(r in t)t.hasOwnProperty(r)&&(n=e?e+"["+r+"]":r,i=t[r],i&&"object"==typeof i?o.push(queryString(i,n)):o.push(encodeURIComponent(n)+"="+encodeURIComponent(i)));return o.join("&")}}(window,document);
//# sourceMappingURL=data:application/json;base64,